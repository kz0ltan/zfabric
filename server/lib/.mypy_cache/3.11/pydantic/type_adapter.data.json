{".class": "MypyFile", "_fullname": "pydantic.type_adapter", "future_import_flags": ["annotations"], "is_partial_stub_package": false, "is_stub": false, "names": {".class": "SymbolTable", "<subclass of \"PluggableSchemaValidator\" and \"MockValSer\">": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": [], "abstract_attributes": [], "bases": ["pydantic.plugin._schema_validator.PluggableSchemaValidator", {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}], "type_ref": "pydantic._internal._mock_val_ser.MockValSer"}], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "pydantic.type_adapter.<subclass of \"PluggableSchemaValidator\" and \"MockValSer\">", "name": "<subclass of \"PluggableSchemaValidator\" and \"MockValSer\">", "type_vars": []}, "deletable_attributes": [], "flags": ["is_intersection"], "fullname": "pydantic.type_adapter.<subclass of \"PluggableSchemaValidator\" and \"MockValSer\">", "has_param_spec_type": false, "metaclass_type": null, "metadata": {}, "module_name": "pydantic.type_adapter", "mro": ["pydantic.type_adapter.<subclass of \"PluggableSchemaValidator\" and \"MockValSer\">", "pydantic.plugin._schema_validator.PluggableSchemaValidator", "pydantic._internal._mock_val_ser.MockValSer", "builtins.object"], "names": {".class": "SymbolTable"}, "self_type": null, "slots": null, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "<subclass of \"PluggableSchemaValidator\" and \"MockValSer\">1": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": [], "abstract_attributes": [], "bases": ["pydantic.plugin._schema_validator.PluggableSchemaValidator", {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}], "type_ref": "pydantic._internal._mock_val_ser.MockValSer"}], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "pydantic.type_adapter.<subclass of \"PluggableSchemaValidator\" and \"MockValSer\">1", "name": "<subclass of \"PluggableSchemaValidator\" and \"MockValSer\">", "type_vars": []}, "deletable_attributes": [], "flags": ["is_intersection"], "fullname": "pydantic.type_adapter.<subclass of \"PluggableSchemaValidator\" and \"MockValSer\">1", "has_param_spec_type": false, "metaclass_type": null, "metadata": {}, "module_name": "pydantic.type_adapter", "mro": ["pydantic.type_adapter.<subclass of \"PluggableSchemaValidator\" and \"MockValSer\">1", "pydantic.plugin._schema_validator.PluggableSchemaValidator", "pydantic._internal._mock_val_ser.MockValSer", "builtins.object"], "names": {".class": "SymbolTable"}, "self_type": null, "slots": null, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "<subclass of \"SchemaSerializer\" and \"MockValSer\">": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": [], "abstract_attributes": [], "bases": ["pydantic_core._pydantic_core.SchemaSerializer", {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}], "type_ref": "pydantic._internal._mock_val_ser.MockValSer"}], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "pydantic.type_adapter.<subclass of \"SchemaSerializer\" and \"MockValSer\">", "name": "<subclass of \"SchemaSerializer\" and \"MockValSer\">", "type_vars": []}, "deletable_attributes": [], "flags": ["is_intersection"], "fullname": "pydantic.type_adapter.<subclass of \"SchemaSerializer\" and \"MockValSer\">", "has_param_spec_type": false, "metaclass_type": null, "metadata": {}, "module_name": "pydantic.type_adapter", "mro": ["pydantic.type_adapter.<subclass of \"SchemaSerializer\" and \"MockValSer\">", "pydantic_core._pydantic_core.SchemaSerializer", "pydantic._internal._mock_val_ser.MockValSer", "builtins.object"], "names": {".class": "SymbolTable"}, "self_type": null, "slots": null, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "<subclass of \"SchemaValidator\" and \"MockValSer\">": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": [], "abstract_attributes": [], "bases": ["pydantic_core._pydantic_core.SchemaValidator", {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}], "type_ref": "pydantic._internal._mock_val_ser.MockValSer"}], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "pydantic.type_adapter.<subclass of \"SchemaValidator\" and \"MockValSer\">", "name": "<subclass of \"SchemaValidator\" and \"MockValSer\">", "type_vars": []}, "deletable_attributes": [], "flags": ["is_intersection"], "fullname": "pydantic.type_adapter.<subclass of \"SchemaValidator\" and \"MockValSer\">", "has_param_spec_type": false, "metaclass_type": null, "metadata": {}, "module_name": "pydantic.type_adapter", "mro": ["pydantic.type_adapter.<subclass of \"SchemaValidator\" and \"MockValSer\">", "pydantic_core._pydantic_core.SchemaValidator", "pydantic._internal._mock_val_ser.MockValSer", "builtins.object"], "names": {".class": "SymbolTable"}, "self_type": null, "slots": null, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "<subclass of \"SchemaValidator\" and \"MockValSer\">1": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": [], "abstract_attributes": [], "bases": ["pydantic_core._pydantic_core.SchemaValidator", {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}], "type_ref": "pydantic._internal._mock_val_ser.MockValSer"}], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "pydantic.type_adapter.<subclass of \"SchemaValidator\" and \"MockValSer\">1", "name": "<subclass of \"SchemaValidator\" and \"MockValSer\">", "type_vars": []}, "deletable_attributes": [], "flags": ["is_intersection"], "fullname": "pydantic.type_adapter.<subclass of \"SchemaValidator\" and \"MockValSer\">1", "has_param_spec_type": false, "metaclass_type": null, "metadata": {}, "module_name": "pydantic.type_adapter", "mro": ["pydantic.type_adapter.<subclass of \"SchemaValidator\" and \"MockValSer\">1", "pydantic_core._pydantic_core.SchemaValidator", "pydantic._internal._mock_val_ser.MockValSer", "builtins.object"], "names": {".class": "SymbolTable"}, "self_type": null, "slots": null, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "Any": {".class": "SymbolTableNode", "cross_ref": "typing.Any", "kind": "Gdef"}, "BaseModel": {".class": "SymbolTableNode", "cross_ref": "pydantic.main.BaseModel", "kind": "Gdef"}, "ConfigDict": {".class": "SymbolTableNode", "cross_ref": "pydantic.config.ConfigDict", "kind": "Gdef"}, "CoreSchema": {".class": "SymbolTableNode", "cross_ref": "pydantic_core.core_schema.CoreSchema", "kind": "Gdef"}, "DEFAULT_REF_TEMPLATE": {".class": "SymbolTableNode", "cross_ref": "pydantic.json_schema.DEFAULT_REF_TEMPLATE", "kind": "Gdef"}, "FrameType": {".class": "SymbolTableNode", "cross_ref": "types.FrameType", "kind": "Gdef"}, "GenerateJsonSchema": {".class": "SymbolTableNode", "cross_ref": "pydantic.json_schema.GenerateJsonSchema", "kind": "Gdef"}, "Generic": {".class": "SymbolTableNode", "cross_ref": "typing.Generic", "kind": "Gdef"}, "IncEx": {".class": "SymbolTableNode", "cross_ref": "pydantic.main.IncEx", "kind": "Gdef"}, "Iterable": {".class": "SymbolTableNode", "cross_ref": "typing.Iterable", "kind": "Gdef"}, "JsonSchemaKeyT": {".class": "SymbolTableNode", "cross_ref": "pydantic.json_schema.JsonSchemaKeyT", "kind": "Gdef"}, "JsonSchemaMode": {".class": "SymbolTableNode", "cross_ref": "pydantic.json_schema.JsonSchemaMode", "kind": "Gdef"}, "JsonSchemaValue": {".class": "SymbolTableNode", "cross_ref": "pydantic.json_schema.JsonSchemaValue", "kind": "Gdef"}, "Literal": {".class": "SymbolTableNode", "cross_ref": "typing.Literal", "kind": "Gdef"}, "P": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "ParamSpecExpr", "fullname": "pydantic.type_adapter.P", "name": "P", "upper_bound": "builtins.object", "variance": 0}}, "ParamSpec": {".class": "SymbolTableNode", "cross_ref": "typing_extensions.ParamSpec", "kind": "Gdef"}, "PluggableSchemaValidator": {".class": "SymbolTableNode", "cross_ref": "pydantic.plugin._schema_validator.PluggableSchemaValidator", "kind": "Gdef"}, "PydanticUndefinedAnnotation": {".class": "SymbolTableNode", "cross_ref": "pydantic.errors.PydanticUndefinedAnnotation", "kind": "Gdef"}, "PydanticUserError": {".class": "SymbolTableNode", "cross_ref": "pydantic.errors.PydanticUserError", "kind": "Gdef"}, "R": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeVarExpr", "fullname": "pydantic.type_adapter.R", "name": "R", "upper_bound": "builtins.object", "values": [], "variance": 0}}, "SchemaSerializer": {".class": "SymbolTableNode", "cross_ref": "pydantic_core._pydantic_core.SchemaSerializer", "kind": "Gdef"}, "SchemaValidator": {".class": "SymbolTableNode", "cross_ref": "pydantic_core._pydantic_core.SchemaValidator", "kind": "Gdef"}, "Some": {".class": "SymbolTableNode", "cross_ref": "pydantic_core._pydantic_core.Some", "kind": "Gdef"}, "T": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeVarExpr", "fullname": "pydantic.type_adapter.T", "name": "T", "upper_bound": "builtins.object", "values": [], "variance": 0}}, "TypeAdapter": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": [], "abstract_attributes": [], "bases": ["builtins.object"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "pydantic.type_adapter.TypeAdapter", "name": "TypeAdapter", "type_vars": [{".class": "TypeVarType", "fullname": "pydantic.type_adapter.T", "id": 1, "name": "T", "namespace": "pydantic.type_adapter.TypeAdapter", "upper_bound": "builtins.object", "values": [], "variance": 0}]}, "deletable_attributes": [], "flags": ["is_final"], "fullname": "pydantic.type_adapter.TypeAdapter", "has_param_spec_type": false, "metaclass_type": null, "metadata": {}, "module_name": "pydantic.type_adapter", "mro": ["pydantic.type_adapter.TypeAdapter", "builtins.object"], "names": {".class": "SymbolTable", "__init__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "OverloadedFuncDef", "flags": [], "fullname": "pydantic.type_adapter.TypeAdapter.__init__", "impl": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0, 0, 5, 5, 5], "arg_names": ["self", "type", "config", "_parent_depth", "module"], "flags": ["is_overload"], "fullname": "pydantic.type_adapter.TypeAdapter.__init__", "name": "__init__", "type": {".class": "CallableType", "arg_kinds": [0, 0, 5, 5, 5], "arg_names": ["self", "type", "config", "_parent_depth", "module"], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "pydantic.type_adapter.T", "id": 1, "name": "T", "namespace": "pydantic.type_adapter.TypeAdapter", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "pydantic.type_adapter.TypeAdapter"}, {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, {".class": "UnionType", "items": [{".class": "TypeAliasType", "args": [], "type_ref": "pydantic.config.ConfigDict"}, {".class": "NoneType"}]}, "builtins.int", {".class": "UnionType", "items": ["builtins.str", {".class": "NoneType"}]}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "__init__ of TypeAdapter", "ret_type": {".class": "NoneType"}, "type_guard": null, "unpack_kwargs": false, "variables": []}}, "items": [{".class": "Decorator", "func": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0, 0, 5, 5, 5], "arg_names": ["self", "type", "config", "_parent_depth", "module"], "flags": ["is_overload", "is_decorated"], "fullname": "pydantic.type_adapter.TypeAdapter.__init__", "name": "__init__", "type": {".class": "CallableType", "arg_kinds": [0, 0, 5, 5, 5], "arg_names": ["self", "type", "config", "_parent_depth", "module"], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "pydantic.type_adapter.T", "id": 1, "name": "T", "namespace": "pydantic.type_adapter.TypeAdapter", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "pydantic.type_adapter.TypeAdapter"}, {".class": "TypeType", "item": {".class": "TypeVarType", "fullname": "pydantic.type_adapter.T", "id": 1, "name": "T", "namespace": "pydantic.type_adapter.TypeAdapter", "upper_bound": "builtins.object", "values": [], "variance": 0}}, {".class": "UnionType", "items": [{".class": "TypeAliasType", "args": [], "type_ref": "pydantic.config.ConfigDict"}, {".class": "NoneType"}]}, "builtins.int", {".class": "UnionType", "items": ["builtins.str", {".class": "NoneType"}]}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "__init__ of TypeAdapter", "ret_type": {".class": "NoneType"}, "type_guard": null, "unpack_kwargs": false, "variables": []}}, "is_overload": true, "var": {".class": "Var", "flags": ["is_inferred"], "fullname": "pydantic.type_adapter.TypeAdapter.__init__", "name": "__init__", "type": null}}, {".class": "Decorator", "func": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0, 0, 5, 5, 5], "arg_names": ["self", "type", "config", "_parent_depth", "module"], "flags": ["is_overload", "is_decorated"], "fullname": "pydantic.type_adapter.TypeAdapter.__init__", "name": "__init__", "type": {".class": "CallableType", "arg_kinds": [0, 0, 5, 5, 5], "arg_names": ["self", "type", "config", "_parent_depth", "module"], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "pydantic.type_adapter.T", "id": 1, "name": "T", "namespace": "pydantic.type_adapter.TypeAdapter", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "pydantic.type_adapter.TypeAdapter"}, {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, {".class": "UnionType", "items": [{".class": "TypeAliasType", "args": [], "type_ref": "pydantic.config.ConfigDict"}, {".class": "NoneType"}]}, "builtins.int", {".class": "UnionType", "items": ["builtins.str", {".class": "NoneType"}]}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "__init__ of TypeAdapter", "ret_type": {".class": "NoneType"}, "type_guard": null, "unpack_kwargs": false, "variables": []}}, "is_overload": true, "var": {".class": "Var", "flags": ["is_inferred"], "fullname": "pydantic.type_adapter.TypeAdapter.__init__", "name": "__init__", "type": null}}], "type": {".class": "Overloaded", "items": [{".class": "CallableType", "arg_kinds": [0, 0, 5, 5, 5], "arg_names": ["self", "type", "config", "_parent_depth", "module"], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "pydantic.type_adapter.T", "id": 1, "name": "T", "namespace": "pydantic.type_adapter.TypeAdapter", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "pydantic.type_adapter.TypeAdapter"}, {".class": "TypeType", "item": {".class": "TypeVarType", "fullname": "pydantic.type_adapter.T", "id": 1, "name": "T", "namespace": "pydantic.type_adapter.TypeAdapter", "upper_bound": "builtins.object", "values": [], "variance": 0}}, {".class": "UnionType", "items": [{".class": "TypeAliasType", "args": [], "type_ref": "pydantic.config.ConfigDict"}, {".class": "NoneType"}]}, "builtins.int", {".class": "UnionType", "items": ["builtins.str", {".class": "NoneType"}]}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "__init__ of TypeAdapter", "ret_type": {".class": "NoneType"}, "type_guard": null, "unpack_kwargs": false, "variables": []}, {".class": "CallableType", "arg_kinds": [0, 0, 5, 5, 5], "arg_names": ["self", "type", "config", "_parent_depth", "module"], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "pydantic.type_adapter.T", "id": 1, "name": "T", "namespace": "pydantic.type_adapter.TypeAdapter", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "pydantic.type_adapter.TypeAdapter"}, {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, {".class": "UnionType", "items": [{".class": "TypeAliasType", "args": [], "type_ref": "pydantic.config.ConfigDict"}, {".class": "NoneType"}]}, "builtins.int", {".class": "UnionType", "items": ["builtins.str", {".class": "NoneType"}]}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "__init__ of TypeAdapter", "ret_type": {".class": "NoneType"}, "type_guard": null, "unpack_kwargs": false, "variables": []}]}}}, "__repr__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0], "arg_names": [null], "flags": [], "fullname": "pydantic.type_adapter.TypeAdapter.__repr__", "name": "__repr__", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": [null], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "pydantic.type_adapter.T", "id": 1, "name": "T", "namespace": "pydantic.type_adapter.TypeAdapter", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "pydantic.type_adapter.TypeAdapter"}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "__repr__ of TypeAdapter", "ret_type": "builtins.str", "type_guard": null, "unpack_kwargs": false, "variables": []}}}, "_config": {".class": "SymbolTableNode", "implicit": true, "kind": "Mdef", "node": {".class": "Var", "flags": ["is_inferred"], "fullname": "pydantic.type_adapter.TypeAdapter._config", "name": "_config", "type": {".class": "UnionType", "items": [{".class": "TypeAliasType", "args": [], "type_ref": "pydantic.config.ConfigDict"}, {".class": "NoneType"}]}}}, "_defer_build": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0], "arg_names": ["self"], "flags": ["is_property", "is_decorated"], "fullname": "pydantic.type_adapter.TypeAdapter._defer_build", "name": "_defer_build", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "pydantic.type_adapter.T", "id": 1, "name": "T", "namespace": "pydantic.type_adapter.TypeAdapter", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "pydantic.type_adapter.TypeAdapter"}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "_defer_build of TypeAdapter", "ret_type": "builtins.bool", "type_guard": null, "unpack_kwargs": false, "variables": []}}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready", "is_inferred"], "fullname": "pydantic.type_adapter.TypeAdapter._defer_build", "name": "_defer_build", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "pydantic.type_adapter.T", "id": 1, "name": "T", "namespace": "pydantic.type_adapter.TypeAdapter", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "pydantic.type_adapter.TypeAdapter"}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "_defer_build of TypeAdapter", "ret_type": "builtins.bool", "type_guard": null, "unpack_kwargs": false, "variables": []}}}}, "_fetch_parent_frame": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0], "arg_names": ["self"], "flags": [], "fullname": "pydantic.type_adapter.TypeAdapter._fetch_parent_frame", "name": "_fetch_parent_frame", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "pydantic.type_adapter.T", "id": 1, "name": "T", "namespace": "pydantic.type_adapter.TypeAdapter", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "pydantic.type_adapter.TypeAdapter"}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "_fetch_parent_frame of TypeAdapter", "ret_type": {".class": "UnionType", "items": ["types.FrameType", {".class": "NoneType"}]}, "type_guard": null, "unpack_kwargs": false, "variables": []}}}, "_init_core_attrs": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0, 0, 0, 1], "arg_names": ["self", "ns_resolver", "force", "raise_errors"], "flags": [], "fullname": "pydantic.type_adapter.TypeAdapter._init_core_attrs", "name": "_init_core_attrs", "type": {".class": "CallableType", "arg_kinds": [0, 0, 0, 1], "arg_names": ["self", "ns_resolver", "force", "raise_errors"], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "pydantic.type_adapter.T", "id": 1, "name": "T", "namespace": "pydantic.type_adapter.TypeAdapter", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "pydantic.type_adapter.TypeAdapter"}, "pydantic._internal._namespace_utils.NsResolver", "builtins.bool", "builtins.bool"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "_init_core_attrs of TypeAdapter", "ret_type": "builtins.bool", "type_guard": null, "unpack_kwargs": false, "variables": []}}}, "_model_config": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0], "arg_names": ["self"], "flags": ["is_property", "is_decorated"], "fullname": "pydantic.type_adapter.TypeAdapter._model_config", "name": "_model_config", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "pydantic.type_adapter.T", "id": 1, "name": "T", "namespace": "pydantic.type_adapter.TypeAdapter", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "pydantic.type_adapter.TypeAdapter"}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "_model_config of TypeAdapter", "ret_type": {".class": "UnionType", "items": [{".class": "TypeAliasType", "args": [], "type_ref": "pydantic.config.ConfigDict"}, {".class": "NoneType"}]}, "type_guard": null, "unpack_kwargs": false, "variables": []}}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready", "is_inferred"], "fullname": "pydantic.type_adapter.TypeAdapter._model_config", "name": "_model_config", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "pydantic.type_adapter.T", "id": 1, "name": "T", "namespace": "pydantic.type_adapter.TypeAdapter", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "pydantic.type_adapter.TypeAdapter"}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "_model_config of TypeAdapter", "ret_type": {".class": "UnionType", "items": [{".class": "TypeAliasType", "args": [], "type_ref": "pydantic.config.ConfigDict"}, {".class": "NoneType"}]}, "type_guard": null, "unpack_kwargs": false, "variables": []}}}}, "_module_name": {".class": "SymbolTableNode", "implicit": true, "kind": "Mdef", "node": {".class": "Var", "flags": ["is_inferred"], "fullname": "pydantic.type_adapter.TypeAdapter._module_name", "name": "_module_name", "type": "builtins.str"}}, "_parent_depth": {".class": "SymbolTableNode", "implicit": true, "kind": "Mdef", "node": {".class": "Var", "flags": ["is_inferred"], "fullname": "pydantic.type_adapter.TypeAdapter._parent_depth", "name": "_parent_depth", "type": "builtins.int"}}, "_type": {".class": "SymbolTableNode", "implicit": true, "kind": "Mdef", "node": {".class": "Var", "flags": ["is_inferred"], "fullname": "pydantic.type_adapter.TypeAdapter._type", "name": "_type", "type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}}}, "core_schema": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "pydantic.type_adapter.TypeAdapter.core_schema", "name": "core_schema", "type": {".class": "TypeAliasType", "args": [], "type_ref": "pydantic_core.core_schema.CoreSchema"}}}, "dump_json": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0, 0, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5], "arg_names": [null, null, "indent", "include", "exclude", "by_alias", "exclude_unset", "exclude_defaults", "exclude_none", "round_trip", "warnings", "serialize_as_any", "context"], "flags": [], "fullname": "pydantic.type_adapter.TypeAdapter.dump_json", "name": "dump_json", "type": {".class": "CallableType", "arg_kinds": [0, 0, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5], "arg_names": [null, null, "indent", "include", "exclude", "by_alias", "exclude_unset", "exclude_defaults", "exclude_none", "round_trip", "warnings", "serialize_as_any", "context"], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "pydantic.type_adapter.T", "id": 1, "name": "T", "namespace": "pydantic.type_adapter.TypeAdapter", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "pydantic.type_adapter.TypeAdapter"}, {".class": "TypeVarType", "fullname": "pydantic.type_adapter.T", "id": 1, "name": "T", "namespace": "pydantic.type_adapter.TypeAdapter", "upper_bound": "builtins.object", "values": [], "variance": 0}, {".class": "UnionType", "items": ["builtins.int", {".class": "NoneType"}]}, {".class": "UnionType", "items": [{".class": "TypeAliasType", "args": [], "type_ref": "pydantic.main.IncEx"}, {".class": "NoneType"}]}, {".class": "UnionType", "items": [{".class": "TypeAliasType", "args": [], "type_ref": "pydantic.main.IncEx"}, {".class": "NoneType"}]}, "builtins.bool", "builtins.bool", "builtins.bool", "builtins.bool", "builtins.bool", {".class": "UnionType", "items": ["builtins.bool", {".class": "LiteralType", "fallback": "builtins.str", "value": "none"}, {".class": "LiteralType", "fallback": "builtins.str", "value": "warn"}, {".class": "LiteralType", "fallback": "builtins.str", "value": "error"}]}, "builtins.bool", {".class": "UnionType", "items": [{".class": "Instance", "args": ["builtins.str", {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "builtins.dict"}, {".class": "NoneType"}]}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "dump_json of TypeAdapter", "ret_type": "builtins.bytes", "type_guard": null, "unpack_kwargs": false, "variables": []}}}, "dump_python": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0, 0, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5], "arg_names": [null, null, "mode", "include", "exclude", "by_alias", "exclude_unset", "exclude_defaults", "exclude_none", "round_trip", "warnings", "serialize_as_any", "context"], "flags": [], "fullname": "pydantic.type_adapter.TypeAdapter.dump_python", "name": "dump_python", "type": {".class": "CallableType", "arg_kinds": [0, 0, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5], "arg_names": [null, null, "mode", "include", "exclude", "by_alias", "exclude_unset", "exclude_defaults", "exclude_none", "round_trip", "warnings", "serialize_as_any", "context"], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "pydantic.type_adapter.T", "id": 1, "name": "T", "namespace": "pydantic.type_adapter.TypeAdapter", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "pydantic.type_adapter.TypeAdapter"}, {".class": "TypeVarType", "fullname": "pydantic.type_adapter.T", "id": 1, "name": "T", "namespace": "pydantic.type_adapter.TypeAdapter", "upper_bound": "builtins.object", "values": [], "variance": 0}, {".class": "UnionType", "items": [{".class": "LiteralType", "fallback": "builtins.str", "value": "json"}, {".class": "LiteralType", "fallback": "builtins.str", "value": "python"}]}, {".class": "UnionType", "items": [{".class": "TypeAliasType", "args": [], "type_ref": "pydantic.main.IncEx"}, {".class": "NoneType"}]}, {".class": "UnionType", "items": [{".class": "TypeAliasType", "args": [], "type_ref": "pydantic.main.IncEx"}, {".class": "NoneType"}]}, "builtins.bool", "builtins.bool", "builtins.bool", "builtins.bool", "builtins.bool", {".class": "UnionType", "items": ["builtins.bool", {".class": "LiteralType", "fallback": "builtins.str", "value": "none"}, {".class": "LiteralType", "fallback": "builtins.str", "value": "warn"}, {".class": "LiteralType", "fallback": "builtins.str", "value": "error"}]}, "builtins.bool", {".class": "UnionType", "items": [{".class": "Instance", "args": ["builtins.str", {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "builtins.dict"}, {".class": "NoneType"}]}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "dump_python of TypeAdapter", "ret_type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "type_guard": null, "unpack_kwargs": false, "variables": []}}}, "get_default_value": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0, 5, 5], "arg_names": ["self", "strict", "context"], "flags": [], "fullname": "pydantic.type_adapter.TypeAdapter.get_default_value", "name": "get_default_value", "type": {".class": "CallableType", "arg_kinds": [0, 5, 5], "arg_names": ["self", "strict", "context"], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "pydantic.type_adapter.T", "id": 1, "name": "T", "namespace": "pydantic.type_adapter.TypeAdapter", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "pydantic.type_adapter.TypeAdapter"}, {".class": "UnionType", "items": ["builtins.bool", {".class": "NoneType"}]}, {".class": "UnionType", "items": [{".class": "Instance", "args": ["builtins.str", {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "builtins.dict"}, {".class": "NoneType"}]}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "get_default_value of TypeAdapter", "ret_type": {".class": "UnionType", "items": ["pydantic_core._pydantic_core.Some", {".class": "NoneType"}]}, "type_guard": null, "unpack_kwargs": false, "variables": []}}}, "json_schema": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0, 5, 5, 5, 5], "arg_names": ["self", "by_alias", "ref_template", "schema_generator", "mode"], "flags": [], "fullname": "pydantic.type_adapter.TypeAdapter.json_schema", "name": "json_schema", "type": {".class": "CallableType", "arg_kinds": [0, 5, 5, 5, 5], "arg_names": ["self", "by_alias", "ref_template", "schema_generator", "mode"], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "pydantic.type_adapter.T", "id": 1, "name": "T", "namespace": "pydantic.type_adapter.TypeAdapter", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "pydantic.type_adapter.TypeAdapter"}, "builtins.bool", "builtins.str", {".class": "TypeType", "item": "pydantic.json_schema.GenerateJsonSchema"}, {".class": "TypeAliasType", "args": [], "type_ref": "pydantic.json_schema.JsonSchemaMode"}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "json_schema of TypeAdapter", "ret_type": {".class": "Instance", "args": ["builtins.str", {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "builtins.dict"}, "type_guard": null, "unpack_kwargs": false, "variables": []}}}, "json_schemas": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0, 5, 5, 5, 5, 5], "arg_names": [null, "by_alias", "title", "description", "ref_template", "schema_generator"], "flags": ["is_static", "is_decorated"], "fullname": "pydantic.type_adapter.TypeAdapter.json_schemas", "name": "json_schemas", "type": {".class": "CallableType", "arg_kinds": [0, 5, 5, 5, 5, 5], "arg_names": [null, "by_alias", "title", "description", "ref_template", "schema_generator"], "arg_types": [{".class": "Instance", "args": [{".class": "TupleType", "implicit": false, "items": [{".class": "TypeVarType", "fullname": "pydantic.json_schema.JsonSchemaKeyT", "id": -1, "name": "JsonSchemaKeyT", "namespace": "", "upper_bound": "typing.Hashable", "values": [], "variance": 0}, {".class": "TypeAliasType", "args": [], "type_ref": "pydantic.json_schema.JsonSchemaMode"}, {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "pydantic.type_adapter.TypeAdapter"}], "partial_fallback": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}], "type_ref": "builtins.tuple"}}], "type_ref": "typing.Iterable"}, "builtins.bool", {".class": "UnionType", "items": ["builtins.str", {".class": "NoneType"}]}, {".class": "UnionType", "items": ["builtins.str", {".class": "NoneType"}]}, "builtins.str", {".class": "TypeType", "item": "pydantic.json_schema.GenerateJsonSchema"}], "bound_args": [], "def_extras": {"first_arg": null}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "json_schemas of TypeAdapter", "ret_type": {".class": "TupleType", "implicit": false, "items": [{".class": "Instance", "args": [{".class": "TupleType", "implicit": false, "items": [{".class": "TypeVarType", "fullname": "pydantic.json_schema.JsonSchemaKeyT", "id": -1, "name": "JsonSchemaKeyT", "namespace": "", "upper_bound": "typing.Hashable", "values": [], "variance": 0}, {".class": "TypeAliasType", "args": [], "type_ref": "pydantic.json_schema.JsonSchemaMode"}], "partial_fallback": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}], "type_ref": "builtins.tuple"}}, {".class": "TypeAliasType", "args": [], "type_ref": "pydantic.json_schema.JsonSchemaValue"}], "type_ref": "builtins.dict"}, {".class": "TypeAliasType", "args": [], "type_ref": "pydantic.json_schema.JsonSchemaValue"}], "partial_fallback": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}], "type_ref": "builtins.tuple"}}, "type_guard": null, "unpack_kwargs": false, "variables": [{".class": "TypeVarType", "fullname": "pydantic.json_schema.JsonSchemaKeyT", "id": -1, "name": "JsonSchemaKeyT", "namespace": "", "upper_bound": "typing.Hashable", "values": [], "variance": 0}]}}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_staticmethod", "is_ready", "is_inferred"], "fullname": "pydantic.type_adapter.TypeAdapter.json_schemas", "name": "json_schemas", "type": {".class": "CallableType", "arg_kinds": [0, 5, 5, 5, 5, 5], "arg_names": [null, "by_alias", "title", "description", "ref_template", "schema_generator"], "arg_types": [{".class": "Instance", "args": [{".class": "TupleType", "implicit": false, "items": [{".class": "TypeVarType", "fullname": "pydantic.json_schema.JsonSchemaKeyT", "id": -1, "name": "JsonSchemaKeyT", "namespace": "", "upper_bound": "typing.Hashable", "values": [], "variance": 0}, {".class": "TypeAliasType", "args": [], "type_ref": "pydantic.json_schema.JsonSchemaMode"}, {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "pydantic.type_adapter.TypeAdapter"}], "partial_fallback": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}], "type_ref": "builtins.tuple"}}], "type_ref": "typing.Iterable"}, "builtins.bool", {".class": "UnionType", "items": ["builtins.str", {".class": "NoneType"}]}, {".class": "UnionType", "items": ["builtins.str", {".class": "NoneType"}]}, "builtins.str", {".class": "TypeType", "item": "pydantic.json_schema.GenerateJsonSchema"}], "bound_args": [], "def_extras": {"first_arg": null}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "json_schemas of TypeAdapter", "ret_type": {".class": "TupleType", "implicit": false, "items": [{".class": "Instance", "args": [{".class": "TupleType", "implicit": false, "items": [{".class": "TypeVarType", "fullname": "pydantic.json_schema.JsonSchemaKeyT", "id": -1, "name": "JsonSchemaKeyT", "namespace": "", "upper_bound": "typing.Hashable", "values": [], "variance": 0}, {".class": "TypeAliasType", "args": [], "type_ref": "pydantic.json_schema.JsonSchemaMode"}], "partial_fallback": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}], "type_ref": "builtins.tuple"}}, {".class": "TypeAliasType", "args": [], "type_ref": "pydantic.json_schema.JsonSchemaValue"}], "type_ref": "builtins.dict"}, {".class": "TypeAliasType", "args": [], "type_ref": "pydantic.json_schema.JsonSchemaValue"}], "partial_fallback": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}], "type_ref": "builtins.tuple"}}, "type_guard": null, "unpack_kwargs": false, "variables": [{".class": "TypeVarType", "fullname": "pydantic.json_schema.JsonSchemaKeyT", "id": -1, "name": "JsonSchemaKeyT", "namespace": "", "upper_bound": "typing.Hashable", "values": [], "variance": 0}]}}}}, "pydantic_complete": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "pydantic.type_adapter.TypeAdapter.pydantic_complete", "name": "pydantic_complete", "type": "builtins.bool"}}, "rebuild": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0, 5, 5, 5, 5], "arg_names": ["self", "force", "raise_errors", "_parent_namespace_depth", "_types_namespace"], "flags": [], "fullname": "pydantic.type_adapter.TypeAdapter.rebuild", "name": "rebuild", "type": {".class": "CallableType", "arg_kinds": [0, 5, 5, 5, 5], "arg_names": ["self", "force", "raise_errors", "_parent_namespace_depth", "_types_namespace"], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "pydantic.type_adapter.T", "id": 1, "name": "T", "namespace": "pydantic.type_adapter.TypeAdapter", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "pydantic.type_adapter.TypeAdapter"}, "builtins.bool", "builtins.bool", "builtins.int", {".class": "UnionType", "items": [{".class": "TypeAliasType", "args": [], "type_ref": "pydantic._internal._namespace_utils.MappingNamespace"}, {".class": "NoneType"}]}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "rebuild of TypeAdapter", "ret_type": {".class": "UnionType", "items": ["builtins.bool", {".class": "NoneType"}]}, "type_guard": null, "unpack_kwargs": false, "variables": []}}}, "serializer": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "pydantic.type_adapter.TypeAdapter.serializer", "name": "serializer", "type": "pydantic_core._pydantic_core.SchemaSerializer"}}, "validate_json": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0, 0, 5, 5, 5], "arg_names": [null, null, "strict", "context", "experimental_allow_partial"], "flags": [], "fullname": "pydantic.type_adapter.TypeAdapter.validate_json", "name": "validate_json", "type": {".class": "CallableType", "arg_kinds": [0, 0, 5, 5, 5], "arg_names": [null, null, "strict", "context", "experimental_allow_partial"], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "pydantic.type_adapter.T", "id": 1, "name": "T", "namespace": "pydantic.type_adapter.TypeAdapter", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "pydantic.type_adapter.TypeAdapter"}, {".class": "UnionType", "items": ["builtins.str", "builtins.bytes", "builtins.bytearray"]}, {".class": "UnionType", "items": ["builtins.bool", {".class": "NoneType"}]}, {".class": "UnionType", "items": [{".class": "Instance", "args": ["builtins.str", {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "builtins.dict"}, {".class": "NoneType"}]}, {".class": "UnionType", "items": ["builtins.bool", {".class": "LiteralType", "fallback": "builtins.str", "value": "off"}, {".class": "LiteralType", "fallback": "builtins.str", "value": "on"}, {".class": "LiteralType", "fallback": "builtins.str", "value": "trailing-strings"}]}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "validate_json of TypeAdapter", "ret_type": {".class": "TypeVarType", "fullname": "pydantic.type_adapter.T", "id": 1, "name": "T", "namespace": "pydantic.type_adapter.TypeAdapter", "upper_bound": "builtins.object", "values": [], "variance": 0}, "type_guard": null, "unpack_kwargs": false, "variables": []}}}, "validate_python": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0, 0, 5, 5, 5, 5], "arg_names": [null, null, "strict", "from_attributes", "context", "experimental_allow_partial"], "flags": [], "fullname": "pydantic.type_adapter.TypeAdapter.validate_python", "name": "validate_python", "type": {".class": "CallableType", "arg_kinds": [0, 0, 5, 5, 5, 5], "arg_names": [null, null, "strict", "from_attributes", "context", "experimental_allow_partial"], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "pydantic.type_adapter.T", "id": 1, "name": "T", "namespace": "pydantic.type_adapter.TypeAdapter", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "pydantic.type_adapter.TypeAdapter"}, {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, {".class": "UnionType", "items": ["builtins.bool", {".class": "NoneType"}]}, {".class": "UnionType", "items": ["builtins.bool", {".class": "NoneType"}]}, {".class": "UnionType", "items": [{".class": "Instance", "args": ["builtins.str", {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "builtins.dict"}, {".class": "NoneType"}]}, {".class": "UnionType", "items": ["builtins.bool", {".class": "LiteralType", "fallback": "builtins.str", "value": "off"}, {".class": "LiteralType", "fallback": "builtins.str", "value": "on"}, {".class": "LiteralType", "fallback": "builtins.str", "value": "trailing-strings"}]}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "validate_python of TypeAdapter", "ret_type": {".class": "TypeVarType", "fullname": "pydantic.type_adapter.T", "id": 1, "name": "T", "namespace": "pydantic.type_adapter.TypeAdapter", "upper_bound": "builtins.object", "values": [], "variance": 0}, "type_guard": null, "unpack_kwargs": false, "variables": []}}}, "validate_strings": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0, 0, 5, 5, 5], "arg_names": [null, null, "strict", "context", "experimental_allow_partial"], "flags": [], "fullname": "pydantic.type_adapter.TypeAdapter.validate_strings", "name": "validate_strings", "type": {".class": "CallableType", "arg_kinds": [0, 0, 5, 5, 5], "arg_names": [null, null, "strict", "context", "experimental_allow_partial"], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "pydantic.type_adapter.T", "id": 1, "name": "T", "namespace": "pydantic.type_adapter.TypeAdapter", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "pydantic.type_adapter.TypeAdapter"}, {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, {".class": "UnionType", "items": ["builtins.bool", {".class": "NoneType"}]}, {".class": "UnionType", "items": [{".class": "Instance", "args": ["builtins.str", {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "builtins.dict"}, {".class": "NoneType"}]}, {".class": "UnionType", "items": ["builtins.bool", {".class": "LiteralType", "fallback": "builtins.str", "value": "off"}, {".class": "LiteralType", "fallback": "builtins.str", "value": "on"}, {".class": "LiteralType", "fallback": "builtins.str", "value": "trailing-strings"}]}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "validate_strings of TypeAdapter", "ret_type": {".class": "TypeVarType", "fullname": "pydantic.type_adapter.T", "id": 1, "name": "T", "namespace": "pydantic.type_adapter.TypeAdapter", "upper_bound": "builtins.object", "values": [], "variance": 0}, "type_guard": null, "unpack_kwargs": false, "variables": []}}}, "validator": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "pydantic.type_adapter.TypeAdapter.validator", "name": "validator", "type": {".class": "UnionType", "items": ["pydantic_core._pydantic_core.SchemaValidator", "pydantic.plugin._schema_validator.PluggableSchemaValidator"]}}}}, "self_type": null, "slots": null, "tuple_type": null, "type_vars": ["T"], "typeddict_type": null}}, "TypeAdapterT": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeVarExpr", "fullname": "pydantic.type_adapter.TypeAdapterT", "name": "TypeAdapterT", "upper_bound": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 4}], "type_ref": "pydantic.type_adapter.TypeAdapter"}, "values": [], "variance": 0}}, "TypeVar": {".class": "SymbolTableNode", "cross_ref": "typing.TypeVar", "kind": "Gdef"}, "__annotations__": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "flags": ["is_ready"], "fullname": "pydantic.type_adapter.__annotations__", "name": "__annotations__", "type": {".class": "Instance", "args": ["builtins.str", {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}], "type_ref": "builtins.dict"}}}, "__doc__": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "flags": ["is_ready"], "fullname": "pydantic.type_adapter.__doc__", "name": "__doc__", "type": "builtins.str"}}, "__file__": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "flags": ["is_ready"], "fullname": "pydantic.type_adapter.__file__", "name": "__file__", "type": "builtins.str"}}, "__name__": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "flags": ["is_ready"], "fullname": "pydantic.type_adapter.__name__", "name": "__name__", "type": "builtins.str"}}, "__package__": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "flags": ["is_ready"], "fullname": "pydantic.type_adapter.__package__", "name": "__package__", "type": "builtins.str"}}, "_annotations": {".class": "SymbolTableNode", "cross_ref": "__future__.annotations", "kind": "Gdef"}, "_config": {".class": "SymbolTableNode", "cross_ref": "pydantic._internal._config", "kind": "Gdef"}, "_generate_schema": {".class": "SymbolTableNode", "cross_ref": "pydantic._internal._generate_schema", "kind": "Gdef"}, "_getattr_no_parents": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0, 0], "arg_names": ["obj", "attribute"], "flags": [], "fullname": "pydantic.type_adapter._getattr_no_parents", "name": "_getattr_no_parents", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["obj", "attribute"], "arg_types": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "builtins.str"], "bound_args": [], "def_extras": {"first_arg": null}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "_getattr_no_parents", "ret_type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "type_guard": null, "unpack_kwargs": false, "variables": []}}}, "_mock_val_ser": {".class": "SymbolTableNode", "cross_ref": "pydantic._internal._mock_val_ser", "kind": "Gdef"}, "_namespace_utils": {".class": "SymbolTableNode", "cross_ref": "pydantic._internal._namespace_utils", "kind": "Gdef"}, "_repr": {".class": "SymbolTableNode", "cross_ref": "pydantic._internal._repr", "kind": "Gdef"}, "_type_has_config": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0], "arg_names": ["type_"], "flags": [], "fullname": "pydantic.type_adapter._type_has_config", "name": "_type_has_config", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["type_"], "arg_types": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "bound_args": [], "def_extras": {"first_arg": null}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "_type_has_config", "ret_type": "builtins.bool", "type_guard": null, "unpack_kwargs": false, "variables": []}}}, "_typing_extra": {".class": "SymbolTableNode", "cross_ref": "pydantic._internal._typing_extra", "kind": "Gdef"}, "_utils": {".class": "SymbolTableNode", "cross_ref": "pydantic._internal._utils", "kind": "Gdef"}, "cast": {".class": "SymbolTableNode", "cross_ref": "typing.cast", "kind": "Gdef"}, "create_schema_validator": {".class": "SymbolTableNode", "cross_ref": "pydantic.plugin._schema_validator.create_schema_validator", "kind": "Gdef"}, "final": {".class": "SymbolTableNode", "cross_ref": "typing.final", "kind": "Gdef"}, "is_dataclass": {".class": "SymbolTableNode", "cross_ref": "dataclasses.is_dataclass", "kind": "Gdef"}, "is_typeddict": {".class": "SymbolTableNode", "cross_ref": "typing.is_typeddict", "kind": "Gdef"}, "overload": {".class": "SymbolTableNode", "cross_ref": "typing.overload", "kind": "Gdef"}, "sys": {".class": "SymbolTableNode", "cross_ref": "sys", "kind": "Gdef"}}, "path": "/home/kzoltan/.virtualenvs/fabric/lib/python3.11/site-packages/pydantic/type_adapter.py"}