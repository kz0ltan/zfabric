{".class": "MypyFile", "_fullname": "sqlalchemy.sql.selectable", "future_import_flags": [], "is_partial_stub_package": false, "is_stub": true, "names": {".class": "SymbolTable", "Alias": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": [], "abstract_attributes": [], "bases": ["sqlalchemy.sql.roles.DMLTableRole", "sqlalchemy.sql.selectable.AliasedReturnsRows"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.sql.selectable.Alias", "name": "Alias", "type_vars": []}, "deletable_attributes": [], "flags": [], "fullname": "sqlalchemy.sql.selectable.Alias", "has_param_spec_type": false, "metaclass_type": null, "metadata": {}, "module_name": "sqlalchemy.sql.selectable", "mro": ["sqlalchemy.sql.selectable.Alias", "sqlalchemy.sql.roles.DMLTableRole", "sqlalchemy.sql.selectable.AliasedReturnsRows", "sqlalchemy.sql.selectable.NoInit", "sqlalchemy.sql.selectable.FromClause", "sqlalchemy.sql.roles.AnonymizedFromClauseRole", "sqlalchemy.sql.roles.StrictFromClauseRole", "sqlalchemy.sql.roles.FromClauseRole", "sqlalchemy.sql.roles.ColumnsClauseRole", "sqlalchemy.sql.roles.JoinTargetRole", "sqlalchemy.sql.roles.AllowsLambdaRole", "sqlalchemy.sql.roles.UsesInspection", "sqlalchemy.sql.roles.ColumnListRole", "sqlalchemy.sql.roles.StructuralRole", "sqlalchemy.sql.selectable.Selectable", "sqlalchemy.sql.selectable.ReturnsRows", "sqlalchemy.sql.roles.ReturnsRowsRole", "sqlalchemy.sql.elements.ClauseElement", "sqlalchemy.sql.roles.SQLRole", "sqlalchemy.sql.annotation.SupportsWrappingAnnotations", "sqlalchemy.sql.annotation.SupportsAnnotations", "sqlalchemy.sql.traversals.MemoizedHasCacheKey", "sqlalchemy.sql.traversals.HasCacheKey", "sqlalchemy.util.langhelpers.HasMemoized", "sqlalchemy.sql.traversals.HasCopyInternals", "sqlalchemy.sql.visitors.Traversible", "builtins.object"], "names": {".class": "SymbolTable", "__visit_name__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.selectable.Alias.__visit_name__", "name": "__visit_name__", "type": "builtins.str"}}, "inherit_cache": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.selectable.Alias.inherit_cache", "name": "inherit_cache", "type": "builtins.bool"}}}, "self_type": null, "slots": null, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "AliasedReturnsRows": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": [], "abstract_attributes": [], "bases": ["sqlalchemy.sql.selectable.NoInit", "sqlalchemy.sql.selectable.FromClause"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.sql.selectable.AliasedReturnsRows", "name": "AliasedReturnsRows", "type_vars": []}, "deletable_attributes": [], "flags": [], "fullname": "sqlalchemy.sql.selectable.AliasedReturnsRows", "has_param_spec_type": false, "metaclass_type": null, "metadata": {}, "module_name": "sqlalchemy.sql.selectable", "mro": ["sqlalchemy.sql.selectable.AliasedReturnsRows", "sqlalchemy.sql.selectable.NoInit", "sqlalchemy.sql.selectable.FromClause", "sqlalchemy.sql.roles.AnonymizedFromClauseRole", "sqlalchemy.sql.roles.StrictFromClauseRole", "sqlalchemy.sql.roles.FromClauseRole", "sqlalchemy.sql.roles.ColumnsClauseRole", "sqlalchemy.sql.roles.JoinTargetRole", "sqlalchemy.sql.roles.AllowsLambdaRole", "sqlalchemy.sql.roles.UsesInspection", "sqlalchemy.sql.roles.ColumnListRole", "sqlalchemy.sql.roles.StructuralRole", "sqlalchemy.sql.selectable.Selectable", "sqlalchemy.sql.selectable.ReturnsRows", "sqlalchemy.sql.roles.ReturnsRowsRole", "sqlalchemy.sql.elements.ClauseElement", "sqlalchemy.sql.roles.SQLRole", "sqlalchemy.sql.annotation.SupportsWrappingAnnotations", "sqlalchemy.sql.annotation.SupportsAnnotations", "sqlalchemy.sql.traversals.MemoizedHasCacheKey", "sqlalchemy.sql.traversals.HasCacheKey", "sqlalchemy.util.langhelpers.HasMemoized", "sqlalchemy.sql.traversals.HasCopyInternals", "sqlalchemy.sql.visitors.Traversible", "builtins.object"], "names": {".class": "SymbolTable", "bind": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0], "arg_names": ["self"], "flags": ["is_property", "is_decorated"], "fullname": "sqlalchemy.sql.selectable.AliasedReturnsRows.bind", "name": "bind", "type": null}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready", "is_inferred"], "fullname": "sqlalchemy.sql.selectable.AliasedReturnsRows.bind", "name": "bind", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["sqlalchemy.sql.selectable.AliasedReturnsRows"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": true, "is_ellipsis_args": false, "name": "bind of AliasedReturnsRows", "ret_type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 1}, "type_guard": null, "unpack_kwargs": false, "variables": []}}}}, "description": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0], "arg_names": ["self"], "flags": ["is_property", "is_decorated"], "fullname": "sqlalchemy.sql.selectable.AliasedReturnsRows.description", "name": "description", "type": null}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready", "is_inferred"], "fullname": "sqlalchemy.sql.selectable.AliasedReturnsRows.description", "name": "description", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["sqlalchemy.sql.selectable.AliasedReturnsRows"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": true, "is_ellipsis_args": false, "name": "description of AliasedReturnsRows", "ret_type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 1}, "type_guard": null, "unpack_kwargs": false, "variables": []}}}}, "is_derived_from": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0, 0], "arg_names": ["self", "fromclause"], "flags": [], "fullname": "sqlalchemy.sql.selectable.AliasedReturnsRows.is_derived_from", "name": "is_derived_from", "type": null}}, "named_with_column": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.selectable.AliasedReturnsRows.named_with_column", "name": "named_with_column", "type": "builtins.bool"}}, "original": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0], "arg_names": ["self"], "flags": ["is_property", "is_decorated"], "fullname": "sqlalchemy.sql.selectable.AliasedReturnsRows.original", "name": "original", "type": null}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready", "is_inferred"], "fullname": "sqlalchemy.sql.selectable.AliasedReturnsRows.original", "name": "original", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["sqlalchemy.sql.selectable.AliasedReturnsRows"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": true, "is_ellipsis_args": false, "name": "original of AliasedReturnsRows", "ret_type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 1}, "type_guard": null, "unpack_kwargs": false, "variables": []}}}}}, "self_type": null, "slots": null, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "Annotated": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.annotation.Annotated", "kind": "Gdef", "module_hidden": true, "module_public": false}, "AnnotatedFromClause": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": [], "abstract_attributes": [], "bases": ["sqlalchemy.sql.annotation.Annotated"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.sql.selectable.AnnotatedFromClause", "name": "AnnotatedFromClause", "type_vars": []}, "deletable_attributes": [], "flags": [], "fullname": "sqlalchemy.sql.selectable.AnnotatedFromClause", "has_param_spec_type": false, "metaclass_type": null, "metadata": {}, "module_name": "sqlalchemy.sql.selectable", "mro": ["sqlalchemy.sql.selectable.AnnotatedFromClause", "sqlalchemy.sql.annotation.Annotated", "builtins.object"], "names": {".class": "SymbolTable", "__init__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0, 0, 0], "arg_names": ["self", "element", "values"], "flags": [], "fullname": "sqlalchemy.sql.selectable.AnnotatedFromClause.__init__", "name": "__init__", "type": {".class": "CallableType", "arg_kinds": [0, 0, 0], "arg_names": ["self", "element", "values"], "arg_types": ["sqlalchemy.sql.selectable.AnnotatedFromClause", {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 1}, {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 1}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "__init__ of AnnotatedFromClause", "ret_type": {".class": "NoneType"}, "type_guard": null, "unpack_kwargs": false, "variables": []}}}}, "self_type": null, "slots": null, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "Any": {".class": "SymbolTableNode", "cross_ref": "typing.Any", "kind": "Gdef", "module_hidden": true, "module_public": false}, "BindParameter": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.elements.BindParameter", "kind": "Gdef"}, "BooleanClauseList": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.elements.BooleanClauseList", "kind": "Gdef"}, "CTE": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": [], "abstract_attributes": [], "bases": ["sqlalchemy.sql.roles.DMLTableRole", "sqlalchemy.sql.roles.IsCTERole", "sqlalchemy.sql.base.Generative", "sqlalchemy.sql.selectable.HasPrefixes", "sqlalchemy.sql.selectable.HasSuffixes", "sqlalchemy.sql.selectable.AliasedReturnsRows"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.sql.selectable.CTE", "name": "CTE", "type_vars": []}, "deletable_attributes": [], "flags": [], "fullname": "sqlalchemy.sql.selectable.CTE", "has_param_spec_type": false, "metaclass_type": null, "metadata": {}, "module_name": "sqlalchemy.sql.selectable", "mro": ["sqlalchemy.sql.selectable.CTE", "sqlalchemy.sql.roles.DMLTableRole", "sqlalchemy.sql.roles.IsCTERole", "sqlalchemy.sql.base.Generative", "sqlalchemy.sql.selectable.HasPrefixes", "sqlalchemy.sql.selectable.HasSuffixes", "sqlalchemy.sql.selectable.AliasedReturnsRows", "sqlalchemy.sql.selectable.NoInit", "sqlalchemy.sql.selectable.FromClause", "sqlalchemy.sql.roles.AnonymizedFromClauseRole", "sqlalchemy.sql.roles.StrictFromClauseRole", "sqlalchemy.sql.roles.FromClauseRole", "sqlalchemy.sql.roles.ColumnsClauseRole", "sqlalchemy.sql.roles.JoinTargetRole", "sqlalchemy.sql.roles.AllowsLambdaRole", "sqlalchemy.sql.roles.UsesInspection", "sqlalchemy.sql.roles.ColumnListRole", "sqlalchemy.sql.roles.StructuralRole", "sqlalchemy.sql.selectable.Selectable", "sqlalchemy.sql.selectable.ReturnsRows", "sqlalchemy.sql.roles.ReturnsRowsRole", "sqlalchemy.sql.elements.ClauseElement", "sqlalchemy.sql.roles.SQLRole", "sqlalchemy.sql.annotation.SupportsWrappingAnnotations", "sqlalchemy.sql.annotation.SupportsAnnotations", "sqlalchemy.sql.traversals.MemoizedHasCacheKey", "sqlalchemy.sql.traversals.HasCacheKey", "sqlalchemy.util.langhelpers.HasMemoized", "sqlalchemy.sql.traversals.HasCopyInternals", "sqlalchemy.sql.visitors.Traversible", "builtins.object"], "names": {".class": "SymbolTable", "__visit_name__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.selectable.CTE.__visit_name__", "name": "__visit_name__", "type": "builtins.str"}}, "alias": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0, 1, 1], "arg_names": ["self", "name", "flat"], "flags": [], "fullname": "sqlalchemy.sql.selectable.CTE.alias", "name": "alias", "type": {".class": "CallableType", "arg_kinds": [0, 1, 1], "arg_names": ["self", "name", "flat"], "arg_types": ["sqlalchemy.sql.selectable.CTE", {".class": "UnionType", "items": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, {".class": "NoneType"}]}, "builtins.bool"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "alias of CTE", "ret_type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 1}, "type_guard": null, "unpack_kwargs": false, "variables": []}}}, "union": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0, 2], "arg_names": ["self", "other"], "flags": [], "fullname": "sqlalchemy.sql.selectable.CTE.union", "name": "union", "type": null}}, "union_all": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0, 2], "arg_names": ["self", "other"], "flags": [], "fullname": "sqlalchemy.sql.selectable.CTE.union_all", "name": "union_all", "type": null}}}, "self_type": null, "slots": null, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "CacheableOptions": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.base.CacheableOptions", "kind": "Gdef", "module_hidden": true, "module_public": false}, "ClauseElement": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.elements.ClauseElement", "kind": "Gdef"}, "ClauseList": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.elements.ClauseList", "kind": "Gdef"}, "ColumnClause": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.elements.ColumnClause", "kind": "Gdef"}, "CompileState": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.base.CompileState", "kind": "Gdef", "module_hidden": true, "module_public": false}, "CompoundSelect": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": [], "abstract_attributes": [], "bases": ["sqlalchemy.sql.base.HasCompileState", "sqlalchemy.sql.selectable.GenerativeSelect"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.sql.selectable.CompoundSelect", "name": "CompoundSelect", "type_vars": []}, "deletable_attributes": [], "flags": [], "fullname": "sqlalchemy.sql.selectable.CompoundSelect", "has_param_spec_type": false, "metaclass_type": null, "metadata": {}, "module_name": "sqlalchemy.sql.selectable", "mro": ["sqlalchemy.sql.selectable.CompoundSelect", "sqlalchemy.sql.base.HasCompileState", "sqlalchemy.sql.selectable.GenerativeSelect", "sqlalchemy.sql.selectable.DeprecatedSelectBaseGenerations", "sqlalchemy.sql.selectable.SelectBase", "sqlalchemy.sql.roles.SelectStatementRole", "sqlalchemy.sql.roles.DMLSelectRole", "sqlalchemy.sql.roles.CompoundElementRole", "sqlalchemy.sql.roles.AllowsLambdaRole", "sqlalchemy.sql.roles.InElementRole", "sqlalchemy.sql.selectable.HasCTE", "sqlalchemy.sql.roles.HasCTERole", "sqlalchemy.sql.base.Executable", "sqlalchemy.sql.roles.StatementRole", "sqlalchemy.sql.annotation.SupportsCloneAnnotations", "sqlalchemy.sql.selectable.Selectable", "sqlalchemy.sql.selectable.ReturnsRows", "sqlalchemy.sql.roles.ReturnsRowsRole", "sqlalchemy.sql.elements.ClauseElement", "sqlalchemy.sql.roles.SQLRole", "sqlalchemy.sql.base.Generative", "sqlalchemy.sql.annotation.SupportsWrappingAnnotations", "sqlalchemy.sql.annotation.SupportsAnnotations", "sqlalchemy.sql.traversals.MemoizedHasCacheKey", "sqlalchemy.sql.traversals.HasCacheKey", "sqlalchemy.util.langhelpers.HasMemoized", "sqlalchemy.sql.traversals.HasCopyInternals", "sqlalchemy.sql.visitors.Traversible", "builtins.object"], "names": {".class": "SymbolTable", "EXCEPT": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.selectable.CompoundSelect.EXCEPT", "name": "EXCEPT", "type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}}}, "EXCEPT_ALL": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.selectable.CompoundSelect.EXCEPT_ALL", "name": "EXCEPT_ALL", "type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}}}, "INTERSECT": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.selectable.CompoundSelect.INTERSECT", "name": "INTERSECT", "type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}}}, "INTERSECT_ALL": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.selectable.CompoundSelect.INTERSECT_ALL", "name": "INTERSECT_ALL", "type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}}}, "UNION": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.selectable.CompoundSelect.UNION", "name": "UNION", "type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}}}, "UNION_ALL": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.selectable.CompoundSelect.UNION_ALL", "name": "UNION_ALL", "type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}}}, "__init__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0, 0, 2, 4], "arg_names": ["self", "keyword", "selects", "kwargs"], "flags": [], "fullname": "sqlalchemy.sql.selectable.CompoundSelect.__init__", "name": "__init__", "type": {".class": "CallableType", "arg_kinds": [0, 0, 2, 4], "arg_names": ["self", "keyword", "selects", "kwargs"], "arg_types": ["sqlalchemy.sql.selectable.CompoundSelect", {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 1}, {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 1}, {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 1}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "__init__ of CompoundSelect", "ret_type": {".class": "NoneType"}, "type_guard": null, "unpack_kwargs": false, "variables": []}}}, "__visit_name__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.selectable.CompoundSelect.__visit_name__", "name": "__visit_name__", "type": "builtins.str"}}, "bind": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "OverloadedFuncDef", "flags": ["is_property"], "fullname": "sqlalchemy.sql.selectable.CompoundSelect.bind", "impl": null, "items": [{".class": "Decorator", "func": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0], "arg_names": ["self"], "flags": ["is_property", "is_overload", "is_decorated"], "fullname": "sqlalchemy.sql.selectable.CompoundSelect.bind", "name": "bind", "type": null}, "is_overload": true, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_settable_property", "is_ready", "is_inferred"], "fullname": "sqlalchemy.sql.selectable.CompoundSelect.bind", "name": "bind", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["sqlalchemy.sql.selectable.CompoundSelect"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": true, "is_ellipsis_args": false, "name": "bind of CompoundSelect", "ret_type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 1}, "type_guard": null, "unpack_kwargs": false, "variables": []}}}, {".class": "Decorator", "func": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0, 0], "arg_names": ["self", "bind"], "flags": ["is_decorated"], "fullname": "sqlalchemy.sql.selectable.CompoundSelect.bind", "name": "bind", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "bind"], "arg_types": ["sqlalchemy.sql.selectable.CompoundSelect", {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 1}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "bind of CompoundSelect", "ret_type": {".class": "NoneType"}, "type_guard": null, "unpack_kwargs": false, "variables": []}}, "is_overload": false, "var": {".class": "Var", "flags": ["is_inferred"], "fullname": "", "name": "bind", "type": null}}], "type": {".class": "Overloaded", "items": [{".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["sqlalchemy.sql.selectable.CompoundSelect"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": true, "is_ellipsis_args": false, "name": "bind", "ret_type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 1}, "type_guard": null, "unpack_kwargs": false, "variables": []}]}}}, "is_derived_from": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0, 0], "arg_names": ["self", "fromclause"], "flags": [], "fullname": "sqlalchemy.sql.selectable.CompoundSelect.is_derived_from", "name": "is_derived_from", "type": null}}, "keyword": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.selectable.CompoundSelect.keyword", "name": "keyword", "type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}}}, "selected_columns": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0], "arg_names": ["self"], "flags": ["is_property", "is_decorated"], "fullname": "sqlalchemy.sql.selectable.CompoundSelect.selected_columns", "name": "selected_columns", "type": null}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready", "is_inferred"], "fullname": "sqlalchemy.sql.selectable.CompoundSelect.selected_columns", "name": "selected_columns", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["sqlalchemy.sql.selectable.CompoundSelect"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": true, "is_ellipsis_args": false, "name": "selected_columns of CompoundSelect", "ret_type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 1}, "type_guard": null, "unpack_kwargs": false, "variables": []}}}}, "selects": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.selectable.CompoundSelect.selects", "name": "selects", "type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}}}, "self_group": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0, 1], "arg_names": ["self", "against"], "flags": [], "fullname": "sqlalchemy.sql.selectable.CompoundSelect.self_group", "name": "self_group", "type": {".class": "CallableType", "arg_kinds": [0, 1], "arg_names": ["self", "against"], "arg_types": ["sqlalchemy.sql.selectable.CompoundSelect", {".class": "UnionType", "items": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, {".class": "NoneType"}]}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "self_group of CompoundSelect", "ret_type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 1}, "type_guard": null, "unpack_kwargs": false, "variables": []}}}}, "self_type": null, "slots": null, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "CompoundSelectState": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": [], "abstract_attributes": [], "bases": ["sqlalchemy.sql.base.CompileState"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.sql.selectable.CompoundSelectState", "name": "CompoundSelectState", "type_vars": []}, "deletable_attributes": [], "flags": [], "fullname": "sqlalchemy.sql.selectable.CompoundSelectState", "has_param_spec_type": false, "metaclass_type": null, "metadata": {}, "module_name": "sqlalchemy.sql.selectable", "mro": ["sqlalchemy.sql.selectable.CompoundSelectState", "sqlalchemy.sql.base.CompileState", "builtins.object"], "names": {".class": "SymbolTable"}, "self_type": null, "slots": null, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "DeprecatedSelectBaseGenerations": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": [], "abstract_attributes": [], "bases": ["builtins.object"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.sql.selectable.DeprecatedSelectBaseGenerations", "name": "DeprecatedSelectBaseGenerations", "type_vars": []}, "deletable_attributes": [], "flags": [], "fullname": "sqlalchemy.sql.selectable.DeprecatedSelectBaseGenerations", "has_param_spec_type": false, "metaclass_type": null, "metadata": {}, "module_name": "sqlalchemy.sql.selectable", "mro": ["sqlalchemy.sql.selectable.DeprecatedSelectBaseGenerations", "builtins.object"], "names": {".class": "SymbolTable", "append_group_by": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0, 2], "arg_names": ["self", "clauses"], "flags": [], "fullname": "sqlalchemy.sql.selectable.DeprecatedSelectBaseGenerations.append_group_by", "name": "append_group_by", "type": {".class": "CallableType", "arg_kinds": [0, 2], "arg_names": ["self", "clauses"], "arg_types": ["sqlalchemy.sql.selectable.DeprecatedSelectBaseGenerations", {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 1}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "append_group_by of DeprecatedSelectBaseGenerations", "ret_type": {".class": "NoneType"}, "type_guard": null, "unpack_kwargs": false, "variables": []}}}, "append_order_by": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0, 2], "arg_names": ["self", "clauses"], "flags": [], "fullname": "sqlalchemy.sql.selectable.DeprecatedSelectBaseGenerations.append_order_by", "name": "append_order_by", "type": {".class": "CallableType", "arg_kinds": [0, 2], "arg_names": ["self", "clauses"], "arg_types": ["sqlalchemy.sql.selectable.DeprecatedSelectBaseGenerations", {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 1}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "append_order_by of DeprecatedSelectBaseGenerations", "ret_type": {".class": "NoneType"}, "type_guard": null, "unpack_kwargs": false, "variables": []}}}}, "self_type": null, "slots": null, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "DeprecatedSelectGenerations": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": [], "abstract_attributes": [], "bases": ["builtins.object"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.sql.selectable.DeprecatedSelectGenerations", "name": "DeprecatedSelectGenerations", "type_vars": []}, "deletable_attributes": [], "flags": [], "fullname": "sqlalchemy.sql.selectable.DeprecatedSelectGenerations", "has_param_spec_type": false, "metaclass_type": null, "metadata": {}, "module_name": "sqlalchemy.sql.selectable", "mro": ["sqlalchemy.sql.selectable.DeprecatedSelectGenerations", "builtins.object"], "names": {".class": "SymbolTable", "append_column": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0, 0], "arg_names": ["self", "column"], "flags": [], "fullname": "sqlalchemy.sql.selectable.DeprecatedSelectGenerations.append_column", "name": "append_column", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "column"], "arg_types": ["sqlalchemy.sql.selectable.DeprecatedSelectGenerations", {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 1}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "append_column of DeprecatedSelectGenerations", "ret_type": {".class": "NoneType"}, "type_guard": null, "unpack_kwargs": false, "variables": []}}}, "append_correlation": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0, 0], "arg_names": ["self", "fromclause"], "flags": [], "fullname": "sqlalchemy.sql.selectable.DeprecatedSelectGenerations.append_correlation", "name": "append_correlation", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "fromclause"], "arg_types": ["sqlalchemy.sql.selectable.DeprecatedSelectGenerations", {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 1}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "append_correlation of DeprecatedSelectGenerations", "ret_type": {".class": "NoneType"}, "type_guard": null, "unpack_kwargs": false, "variables": []}}}, "append_from": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0, 0], "arg_names": ["self", "fromclause"], "flags": [], "fullname": "sqlalchemy.sql.selectable.DeprecatedSelectGenerations.append_from", "name": "append_from", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "fromclause"], "arg_types": ["sqlalchemy.sql.selectable.DeprecatedSelectGenerations", {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 1}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "append_from of DeprecatedSelectGenerations", "ret_type": {".class": "NoneType"}, "type_guard": null, "unpack_kwargs": false, "variables": []}}}, "append_having": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0, 0], "arg_names": ["self", "having"], "flags": [], "fullname": "sqlalchemy.sql.selectable.DeprecatedSelectGenerations.append_having", "name": "append_having", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "having"], "arg_types": ["sqlalchemy.sql.selectable.DeprecatedSelectGenerations", {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 1}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "append_having of DeprecatedSelectGenerations", "ret_type": {".class": "NoneType"}, "type_guard": null, "unpack_kwargs": false, "variables": []}}}, "append_prefix": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0, 0], "arg_names": ["self", "clause"], "flags": [], "fullname": "sqlalchemy.sql.selectable.DeprecatedSelectGenerations.append_prefix", "name": "append_prefix", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "clause"], "arg_types": ["sqlalchemy.sql.selectable.DeprecatedSelectGenerations", {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 1}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "append_prefix of DeprecatedSelectGenerations", "ret_type": {".class": "NoneType"}, "type_guard": null, "unpack_kwargs": false, "variables": []}}}, "append_whereclause": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0, 0], "arg_names": ["self", "whereclause"], "flags": [], "fullname": "sqlalchemy.sql.selectable.DeprecatedSelectGenerations.append_whereclause", "name": "append_whereclause", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "whereclause"], "arg_types": ["sqlalchemy.sql.selectable.DeprecatedSelectGenerations", {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 1}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "append_whereclause of DeprecatedSelectGenerations", "ret_type": {".class": "NoneType"}, "type_guard": null, "unpack_kwargs": false, "variables": []}}}}, "self_type": null, "slots": null, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "Executable": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.base.Executable", "kind": "Gdef", "module_hidden": true, "module_public": false}, "Exists": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": [], "abstract_attributes": [], "bases": ["sqlalchemy.sql.elements.UnaryExpression"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.sql.selectable.Exists", "name": "Exists", "type_vars": []}, "deletable_attributes": [], "flags": [], "fullname": "sqlalchemy.sql.selectable.Exists", "has_param_spec_type": false, "metaclass_type": null, "metadata": {}, "module_name": "sqlalchemy.sql.selectable", "mro": ["sqlalchemy.sql.selectable.Exists", "sqlalchemy.sql.elements.UnaryExpression", "sqlalchemy.sql.elements.ColumnElement", "sqlalchemy.sql.roles.ColumnArgumentOrKeyRole", "sqlalchemy.sql.roles.ColumnArgumentRole", "sqlalchemy.sql.roles.StatementOptionRole", "sqlalchemy.sql.roles.WhereHavingRole", "sqlalchemy.sql.roles.OnClauseRole", "sqlalchemy.sql.roles.BinaryElementRole", "sqlalchemy.sql.roles.ExpressionElementRole", "sqlalchemy.sql.roles.OrderByRole", "sqlalchemy.sql.roles.ColumnsClauseRole", "sqlalchemy.sql.roles.AllowsLambdaRole", "sqlalchemy.sql.roles.ByOfRole", "sqlalchemy.sql.roles.UsesInspection", "sqlalchemy.sql.roles.ColumnListRole", "sqlalchemy.sql.roles.LimitOffsetRole", "sqlalchemy.sql.roles.DMLColumnRole", "sqlalchemy.sql.roles.DDLConstraintColumnRole", "sqlalchemy.sql.roles.DDLExpressionRole", "sqlalchemy.sql.roles.StructuralRole", "sqlalchemy.sql.operators.ColumnOperators", "sqlalchemy.sql.operators.Operators", "sqlalchemy.sql.elements.ClauseElement", "sqlalchemy.sql.roles.SQLRole", "sqlalchemy.sql.annotation.SupportsWrappingAnnotations", "sqlalchemy.sql.annotation.SupportsAnnotations", "sqlalchemy.sql.traversals.MemoizedHasCacheKey", "sqlalchemy.sql.traversals.HasCacheKey", "sqlalchemy.util.langhelpers.HasMemoized", "sqlalchemy.sql.traversals.HasCopyInternals", "sqlalchemy.sql.visitors.Traversible", "builtins.object"], "names": {".class": "SymbolTable", "__init__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0, 2, 4], "arg_names": ["self", "args", "kwargs"], "flags": [], "fullname": "sqlalchemy.sql.selectable.Exists.__init__", "name": "__init__", "type": {".class": "CallableType", "arg_kinds": [0, 2, 4], "arg_names": ["self", "args", "kwargs"], "arg_types": ["sqlalchemy.sql.selectable.Exists", {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 1}, {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 1}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "__init__ of Exists", "ret_type": {".class": "NoneType"}, "type_guard": null, "unpack_kwargs": false, "variables": []}}}, "correlate": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0, 2], "arg_names": ["self", "fromclause"], "flags": [], "fullname": "sqlalchemy.sql.selectable.Exists.correlate", "name": "correlate", "type": null}}, "correlate_except": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0, 2], "arg_names": ["self", "fromclause"], "flags": [], "fullname": "sqlalchemy.sql.selectable.Exists.correlate_except", "name": "correlate_except", "type": null}}, "inherit_cache": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.selectable.Exists.inherit_cache", "name": "inherit_cache", "type": "builtins.bool"}}, "select": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0, 1, 4], "arg_names": ["self", "whereclause", "kwargs"], "flags": [], "fullname": "sqlalchemy.sql.selectable.Exists.select", "name": "select", "type": {".class": "CallableType", "arg_kinds": [0, 1, 4], "arg_names": ["self", "whereclause", "kwargs"], "arg_types": ["sqlalchemy.sql.selectable.Exists", {".class": "UnionType", "items": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, {".class": "NoneType"}]}, {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 1}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "select of Exists", "ret_type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 1}, "type_guard": null, "unpack_kwargs": false, "variables": []}}}, "select_from": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0, 2], "arg_names": ["self", "froms"], "flags": [], "fullname": "sqlalchemy.sql.selectable.Exists.select_from", "name": "select_from", "type": null}}, "where": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0, 2], "arg_names": ["self", "clause"], "flags": [], "fullname": "sqlalchemy.sql.selectable.Exists.where", "name": "where", "type": null}}}, "self_type": null, "slots": null, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "ForUpdateArg": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": [], "abstract_attributes": [], "bases": ["sqlalchemy.sql.elements.ClauseElement"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.sql.selectable.ForUpdateArg", "name": "ForUpdateArg", "type_vars": []}, "deletable_attributes": [], "flags": [], "fullname": "sqlalchemy.sql.selectable.ForUpdateArg", "has_param_spec_type": false, "metaclass_type": null, "metadata": {}, "module_name": "sqlalchemy.sql.selectable", "mro": ["sqlalchemy.sql.selectable.ForUpdateArg", "sqlalchemy.sql.elements.ClauseElement", "sqlalchemy.sql.roles.SQLRole", "sqlalchemy.sql.annotation.SupportsWrappingAnnotations", "sqlalchemy.sql.annotation.SupportsAnnotations", "sqlalchemy.sql.traversals.MemoizedHasCacheKey", "sqlalchemy.sql.traversals.HasCacheKey", "sqlalchemy.util.langhelpers.HasMemoized", "sqlalchemy.sql.traversals.HasCopyInternals", "sqlalchemy.sql.visitors.Traversible", "builtins.object"], "names": {".class": "SymbolTable", "__eq__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0, 0], "arg_names": [null, null], "flags": [], "fullname": "sqlalchemy.sql.selectable.ForUpdateArg.__eq__", "name": "__eq__", "type": null}}, "__hash__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0], "arg_names": ["self"], "flags": [], "fullname": "sqlalchemy.sql.selectable.ForUpdateArg.__hash__", "name": "__hash__", "type": null}}, "__init__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0, 1, 1, 1, 1, 1], "arg_names": ["self", "nowait", "read", "of", "skip_locked", "key_share"], "flags": [], "fullname": "sqlalchemy.sql.selectable.ForUpdateArg.__init__", "name": "__init__", "type": {".class": "CallableType", "arg_kinds": [0, 1, 1, 1, 1, 1], "arg_names": ["self", "nowait", "read", "of", "skip_locked", "key_share"], "arg_types": ["sqlalchemy.sql.selectable.ForUpdateArg", "builtins.bool", "builtins.bool", {".class": "UnionType", "items": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, {".class": "NoneType"}]}, "builtins.bool", "builtins.bool"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "__init__ of ForUpdateArg", "ret_type": {".class": "NoneType"}, "type_guard": null, "unpack_kwargs": false, "variables": []}}}, "__ne__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0, 0], "arg_names": [null, null], "flags": [], "fullname": "sqlalchemy.sql.selectable.ForUpdateArg.__ne__", "name": "__ne__", "type": null}}, "key_share": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.selectable.ForUpdateArg.key_share", "name": "key_share", "type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}}}, "nowait": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.selectable.ForUpdateArg.nowait", "name": "nowait", "type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}}}, "of": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.selectable.ForUpdateArg.of", "name": "of", "type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}}}, "read": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.selectable.ForUpdateArg.read", "name": "read", "type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}}}, "skip_locked": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.selectable.ForUpdateArg.skip_locked", "name": "skip_locked", "type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}}}}, "self_type": null, "slots": null, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "FromClause": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": [], "abstract_attributes": [], "bases": ["sqlalchemy.sql.roles.AnonymizedFromClauseRole", "sqlalchemy.sql.selectable.Selectable"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.sql.selectable.FromClause", "name": "FromClause", "type_vars": []}, "deletable_attributes": [], "flags": [], "fullname": "sqlalchemy.sql.selectable.FromClause", "has_param_spec_type": false, "metaclass_type": null, "metadata": {}, "module_name": "sqlalchemy.sql.selectable", "mro": ["sqlalchemy.sql.selectable.FromClause", "sqlalchemy.sql.roles.AnonymizedFromClauseRole", "sqlalchemy.sql.roles.StrictFromClauseRole", "sqlalchemy.sql.roles.FromClauseRole", "sqlalchemy.sql.roles.ColumnsClauseRole", "sqlalchemy.sql.roles.JoinTargetRole", "sqlalchemy.sql.roles.AllowsLambdaRole", "sqlalchemy.sql.roles.UsesInspection", "sqlalchemy.sql.roles.ColumnListRole", "sqlalchemy.sql.roles.StructuralRole", "sqlalchemy.sql.selectable.Selectable", "sqlalchemy.sql.selectable.ReturnsRows", "sqlalchemy.sql.roles.ReturnsRowsRole", "sqlalchemy.sql.elements.ClauseElement", "sqlalchemy.sql.roles.SQLRole", "sqlalchemy.sql.annotation.SupportsWrappingAnnotations", "sqlalchemy.sql.annotation.SupportsAnnotations", "sqlalchemy.sql.traversals.MemoizedHasCacheKey", "sqlalchemy.sql.traversals.HasCacheKey", "sqlalchemy.util.langhelpers.HasMemoized", "sqlalchemy.sql.traversals.HasCopyInternals", "sqlalchemy.sql.visitors.Traversible", "builtins.object"], "names": {".class": "SymbolTable", "__visit_name__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.selectable.FromClause.__visit_name__", "name": "__visit_name__", "type": "builtins.str"}}, "alias": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0, 1, 1], "arg_names": ["self", "name", "flat"], "flags": [], "fullname": "sqlalchemy.sql.selectable.FromClause.alias", "name": "alias", "type": {".class": "CallableType", "arg_kinds": [0, 1, 1], "arg_names": ["self", "name", "flat"], "arg_types": ["sqlalchemy.sql.selectable.FromClause", {".class": "UnionType", "items": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, {".class": "NoneType"}]}, "builtins.bool"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "alias of FromClause", "ret_type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 1}, "type_guard": null, "unpack_kwargs": false, "variables": []}}}, "c": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0], "arg_names": ["self"], "flags": ["is_property", "is_decorated"], "fullname": "sqlalchemy.sql.selectable.FromClause.c", "name": "c", "type": null}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready", "is_inferred"], "fullname": "sqlalchemy.sql.selectable.FromClause.c", "name": "c", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["sqlalchemy.sql.selectable.FromClause"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": true, "is_ellipsis_args": false, "name": "c of FromClause", "ret_type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 1}, "type_guard": null, "unpack_kwargs": false, "variables": []}}}}, "columns": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0], "arg_names": ["self"], "flags": ["is_decorated"], "fullname": "sqlalchemy.sql.selectable.FromClause.columns", "name": "columns", "type": null}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready", "is_inferred"], "fullname": "sqlalchemy.sql.selectable.FromClause.columns", "name": "columns", "type": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 1}, "type_of_any": 7}], "type_ref": "sqlalchemy.util.langhelpers.memoized_property"}}}}, "description": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0], "arg_names": ["self"], "flags": ["is_property", "is_decorated"], "fullname": "sqlalchemy.sql.selectable.FromClause.description", "name": "description", "type": null}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready", "is_inferred"], "fullname": "sqlalchemy.sql.selectable.FromClause.description", "name": "description", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["sqlalchemy.sql.selectable.FromClause"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": true, "is_ellipsis_args": false, "name": "description of FromClause", "ret_type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 1}, "type_guard": null, "unpack_kwargs": false, "variables": []}}}}, "entity_namespace": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0], "arg_names": ["self"], "flags": ["is_property", "is_decorated"], "fullname": "sqlalchemy.sql.selectable.FromClause.entity_namespace", "name": "entity_namespace", "type": null}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready", "is_inferred"], "fullname": "sqlalchemy.sql.selectable.FromClause.entity_namespace", "name": "entity_namespace", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["sqlalchemy.sql.selectable.FromClause"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": true, "is_ellipsis_args": false, "name": "entity_namespace of FromClause", "ret_type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 1}, "type_guard": null, "unpack_kwargs": false, "variables": []}}}}, "exported_columns": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0], "arg_names": ["self"], "flags": ["is_property", "is_decorated"], "fullname": "sqlalchemy.sql.selectable.FromClause.exported_columns", "name": "exported_columns", "type": null}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready", "is_inferred"], "fullname": "sqlalchemy.sql.selectable.FromClause.exported_columns", "name": "exported_columns", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["sqlalchemy.sql.selectable.FromClause"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": true, "is_ellipsis_args": false, "name": "exported_columns of FromClause", "ret_type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 1}, "type_guard": null, "unpack_kwargs": false, "variables": []}}}}, "foreign_keys": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0], "arg_names": ["self"], "flags": ["is_decorated"], "fullname": "sqlalchemy.sql.selectable.FromClause.foreign_keys", "name": "foreign_keys", "type": null}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready", "is_inferred"], "fullname": "sqlalchemy.sql.selectable.FromClause.foreign_keys", "name": "foreign_keys", "type": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 1}, "type_of_any": 7}], "type_ref": "sqlalchemy.util.langhelpers.memoized_property"}}}}, "is_derived_from": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0, 0], "arg_names": ["self", "fromclause"], "flags": [], "fullname": "sqlalchemy.sql.selectable.FromClause.is_derived_from", "name": "is_derived_from", "type": null}}, "is_selectable": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.selectable.FromClause.is_selectable", "name": "is_selectable", "type": "builtins.bool"}}, "join": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0, 0, 1, 1, 1], "arg_names": ["self", "right", "onclause", "isouter", "full"], "flags": [], "fullname": "sqlalchemy.sql.selectable.FromClause.join", "name": "join", "type": {".class": "CallableType", "arg_kinds": [0, 0, 1, 1, 1], "arg_names": ["self", "right", "onclause", "isouter", "full"], "arg_types": ["sqlalchemy.sql.selectable.FromClause", {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 1}, {".class": "UnionType", "items": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, {".class": "NoneType"}]}, "builtins.bool", "builtins.bool"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "join of FromClause", "ret_type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 1}, "type_guard": null, "unpack_kwargs": false, "variables": []}}}, "named_with_column": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.selectable.FromClause.named_with_column", "name": "named_with_column", "type": "builtins.bool"}}, "outerjoin": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0, 0, 1, 1], "arg_names": ["self", "right", "onclause", "full"], "flags": [], "fullname": "sqlalchemy.sql.selectable.FromClause.outerjoin", "name": "outerjoin", "type": {".class": "CallableType", "arg_kinds": [0, 0, 1, 1], "arg_names": ["self", "right", "onclause", "full"], "arg_types": ["sqlalchemy.sql.selectable.FromClause", {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 1}, {".class": "UnionType", "items": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, {".class": "NoneType"}]}, "builtins.bool"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "outerjoin of FromClause", "ret_type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 1}, "type_guard": null, "unpack_kwargs": false, "variables": []}}}, "primary_key": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0], "arg_names": ["self"], "flags": ["is_decorated"], "fullname": "sqlalchemy.sql.selectable.FromClause.primary_key", "name": "primary_key", "type": null}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready", "is_inferred"], "fullname": "sqlalchemy.sql.selectable.FromClause.primary_key", "name": "primary_key", "type": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 1}, "type_of_any": 7}], "type_ref": "sqlalchemy.util.langhelpers.memoized_property"}}}}, "schema": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.selectable.FromClause.schema", "name": "schema", "type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}}}, "select": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0, 1, 4], "arg_names": ["self", "whereclause", "kwargs"], "flags": [], "fullname": "sqlalchemy.sql.selectable.FromClause.select", "name": "select", "type": {".class": "CallableType", "arg_kinds": [0, 1, 4], "arg_names": ["self", "whereclause", "kwargs"], "arg_types": ["sqlalchemy.sql.selectable.FromClause", {".class": "UnionType", "items": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, {".class": "NoneType"}]}, {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 1}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "select of FromClause", "ret_type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 1}, "type_guard": null, "unpack_kwargs": false, "variables": []}}}, "table_valued": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0], "arg_names": ["self"], "flags": [], "fullname": "sqlalchemy.sql.selectable.FromClause.table_valued", "name": "table_valued", "type": null}}, "tablesample": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0, 0, 1, 1], "arg_names": ["self", "sampling", "name", "seed"], "flags": [], "fullname": "sqlalchemy.sql.selectable.FromClause.tablesample", "name": "tablesample", "type": {".class": "CallableType", "arg_kinds": [0, 0, 1, 1], "arg_names": ["self", "sampling", "name", "seed"], "arg_types": ["sqlalchemy.sql.selectable.FromClause", {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 1}, {".class": "UnionType", "items": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, {".class": "NoneType"}]}, {".class": "UnionType", "items": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, {".class": "NoneType"}]}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "tablesample of FromClause", "ret_type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 1}, "type_guard": null, "unpack_kwargs": false, "variables": []}}}}, "self_type": null, "slots": null, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "FromGrouping": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": [], "abstract_attributes": [], "bases": ["sqlalchemy.sql.elements.GroupedElement", "sqlalchemy.sql.selectable.FromClause"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.sql.selectable.FromGrouping", "name": "FromGrouping", "type_vars": []}, "deletable_attributes": [], "flags": [], "fullname": "sqlalchemy.sql.selectable.FromGrouping", "has_param_spec_type": false, "metaclass_type": null, "metadata": {}, "module_name": "sqlalchemy.sql.selectable", "mro": ["sqlalchemy.sql.selectable.FromGrouping", "sqlalchemy.sql.elements.GroupedElement", "sqlalchemy.sql.selectable.FromClause", "sqlalchemy.sql.roles.AnonymizedFromClauseRole", "sqlalchemy.sql.roles.StrictFromClauseRole", "sqlalchemy.sql.roles.FromClauseRole", "sqlalchemy.sql.roles.ColumnsClauseRole", "sqlalchemy.sql.roles.JoinTargetRole", "sqlalchemy.sql.roles.AllowsLambdaRole", "sqlalchemy.sql.roles.UsesInspection", "sqlalchemy.sql.roles.ColumnListRole", "sqlalchemy.sql.roles.StructuralRole", "sqlalchemy.sql.selectable.Selectable", "sqlalchemy.sql.selectable.ReturnsRows", "sqlalchemy.sql.roles.ReturnsRowsRole", "sqlalchemy.sql.elements.ClauseElement", "sqlalchemy.sql.roles.SQLRole", "sqlalchemy.sql.annotation.SupportsWrappingAnnotations", "sqlalchemy.sql.annotation.SupportsAnnotations", "sqlalchemy.sql.traversals.MemoizedHasCacheKey", "sqlalchemy.sql.traversals.HasCacheKey", "sqlalchemy.util.langhelpers.HasMemoized", "sqlalchemy.sql.traversals.HasCopyInternals", "sqlalchemy.sql.visitors.Traversible", "builtins.object"], "names": {".class": "SymbolTable", "__init__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0, 0], "arg_names": ["self", "element"], "flags": [], "fullname": "sqlalchemy.sql.selectable.FromGrouping.__init__", "name": "__init__", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "element"], "arg_types": ["sqlalchemy.sql.selectable.FromGrouping", {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 1}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "__init__ of FromGrouping", "ret_type": {".class": "NoneType"}, "type_guard": null, "unpack_kwargs": false, "variables": []}}}, "alias": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0, 4], "arg_names": ["self", "kw"], "flags": [], "fullname": "sqlalchemy.sql.selectable.FromGrouping.alias", "name": "alias", "type": null}}, "columns": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0], "arg_names": ["self"], "flags": ["is_property", "is_decorated"], "fullname": "sqlalchemy.sql.selectable.FromGrouping.columns", "name": "columns", "type": null}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready", "is_inferred"], "fullname": "sqlalchemy.sql.selectable.FromGrouping.columns", "name": "columns", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["sqlalchemy.sql.selectable.FromGrouping"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": true, "is_ellipsis_args": false, "name": "columns of FromGrouping", "ret_type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 1}, "type_guard": null, "unpack_kwargs": false, "variables": []}}}}, "element": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.selectable.FromGrouping.element", "name": "element", "type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}}}, "foreign_keys": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0], "arg_names": ["self"], "flags": ["is_property", "is_decorated"], "fullname": "sqlalchemy.sql.selectable.FromGrouping.foreign_keys", "name": "foreign_keys", "type": null}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready", "is_inferred"], "fullname": "sqlalchemy.sql.selectable.FromGrouping.foreign_keys", "name": "foreign_keys", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["sqlalchemy.sql.selectable.FromGrouping"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": true, "is_ellipsis_args": false, "name": "foreign_keys of FromGrouping", "ret_type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 1}, "type_guard": null, "unpack_kwargs": false, "variables": []}}}}, "is_derived_from": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0, 0], "arg_names": ["self", "element"], "flags": [], "fullname": "sqlalchemy.sql.selectable.FromGrouping.is_derived_from", "name": "is_derived_from", "type": null}}, "primary_key": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0], "arg_names": ["self"], "flags": ["is_property", "is_decorated"], "fullname": "sqlalchemy.sql.selectable.FromGrouping.primary_key", "name": "primary_key", "type": null}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready", "is_inferred"], "fullname": "sqlalchemy.sql.selectable.FromGrouping.primary_key", "name": "primary_key", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["sqlalchemy.sql.selectable.FromGrouping"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": true, "is_ellipsis_args": false, "name": "primary_key of FromGrouping", "ret_type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 1}, "type_guard": null, "unpack_kwargs": false, "variables": []}}}}}, "self_type": null, "slots": null, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "Generative": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.base.Generative", "kind": "Gdef", "module_hidden": true, "module_public": false}, "GenerativeSelect": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": [], "abstract_attributes": [], "bases": ["sqlalchemy.sql.selectable.DeprecatedSelectBaseGenerations", "sqlalchemy.sql.selectable.SelectBase"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.sql.selectable.GenerativeSelect", "name": "GenerativeSelect", "type_vars": []}, "deletable_attributes": [], "flags": [], "fullname": "sqlalchemy.sql.selectable.GenerativeSelect", "has_param_spec_type": false, "metaclass_type": null, "metadata": {}, "module_name": "sqlalchemy.sql.selectable", "mro": ["sqlalchemy.sql.selectable.GenerativeSelect", "sqlalchemy.sql.selectable.DeprecatedSelectBaseGenerations", "sqlalchemy.sql.selectable.SelectBase", "sqlalchemy.sql.roles.SelectStatementRole", "sqlalchemy.sql.roles.DMLSelectRole", "sqlalchemy.sql.roles.CompoundElementRole", "sqlalchemy.sql.roles.AllowsLambdaRole", "sqlalchemy.sql.roles.InElementRole", "sqlalchemy.sql.selectable.HasCTE", "sqlalchemy.sql.roles.HasCTERole", "sqlalchemy.sql.base.Executable", "sqlalchemy.sql.roles.StatementRole", "sqlalchemy.sql.annotation.SupportsCloneAnnotations", "sqlalchemy.sql.selectable.Selectable", "sqlalchemy.sql.selectable.ReturnsRows", "sqlalchemy.sql.roles.ReturnsRowsRole", "sqlalchemy.sql.elements.ClauseElement", "sqlalchemy.sql.roles.SQLRole", "sqlalchemy.sql.base.Generative", "sqlalchemy.sql.annotation.SupportsWrappingAnnotations", "sqlalchemy.sql.annotation.SupportsAnnotations", "sqlalchemy.sql.traversals.MemoizedHasCacheKey", "sqlalchemy.sql.traversals.HasCacheKey", "sqlalchemy.util.langhelpers.HasMemoized", "sqlalchemy.sql.traversals.HasCopyInternals", "sqlalchemy.sql.visitors.Traversible", "builtins.object"], "names": {".class": "SymbolTable", "__init__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0, 1, 1, 1, 1, 1, 1, 1], "arg_names": ["self", "_label_style", "use_labels", "limit", "offset", "order_by", "group_by", "bind"], "flags": [], "fullname": "sqlalchemy.sql.selectable.GenerativeSelect.__init__", "name": "__init__", "type": {".class": "CallableType", "arg_kinds": [0, 1, 1, 1, 1, 1, 1, 1], "arg_names": ["self", "_label_style", "use_labels", "limit", "offset", "order_by", "group_by", "bind"], "arg_types": ["sqlalchemy.sql.selectable.GenerativeSelect", {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 1}, "builtins.bool", {".class": "UnionType", "items": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, {".class": "NoneType"}]}, {".class": "UnionType", "items": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, {".class": "NoneType"}]}, {".class": "UnionType", "items": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, {".class": "NoneType"}]}, {".class": "UnionType", "items": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, {".class": "NoneType"}]}, {".class": "UnionType", "items": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, {".class": "NoneType"}]}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "__init__ of GenerativeSelect", "ret_type": {".class": "NoneType"}, "type_guard": null, "unpack_kwargs": false, "variables": []}}}, "apply_labels": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0], "arg_names": ["self"], "flags": [], "fullname": "sqlalchemy.sql.selectable.GenerativeSelect.apply_labels", "name": "apply_labels", "type": null}}, "fetch": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0, 0, 1, 1], "arg_names": ["self", "count", "with_ties", "percent"], "flags": [], "fullname": "sqlalchemy.sql.selectable.GenerativeSelect.fetch", "name": "fetch", "type": {".class": "CallableType", "arg_kinds": [0, 0, 1, 1], "arg_names": ["self", "count", "with_ties", "percent"], "arg_types": [{".class": "TypeVarType", "fullname": "_typeshed.Self", "id": -1, "name": "Self", "namespace": "", "upper_bound": "builtins.object", "values": [], "variance": 0}, {".class": "UnionType", "items": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, {".class": "NoneType"}]}, "builtins.bool", "builtins.bool"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "fetch of GenerativeSelect", "ret_type": {".class": "TypeVarType", "fullname": "_typeshed.Self", "id": -1, "name": "Self", "namespace": "", "upper_bound": "builtins.object", "values": [], "variance": 0}, "type_guard": null, "unpack_kwargs": false, "variables": [{".class": "TypeVarType", "fullname": "_typeshed.Self", "id": -1, "name": "Self", "namespace": "", "upper_bound": "builtins.object", "values": [], "variance": 0}]}}}, "get_label_style": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0], "arg_names": ["self"], "flags": [], "fullname": "sqlalchemy.sql.selectable.GenerativeSelect.get_label_style", "name": "get_label_style", "type": null}}, "group_by": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0, 2], "arg_names": ["self", "clauses"], "flags": [], "fullname": "sqlalchemy.sql.selectable.GenerativeSelect.group_by", "name": "group_by", "type": {".class": "CallableType", "arg_kinds": [0, 2], "arg_names": ["self", "clauses"], "arg_types": [{".class": "TypeVarType", "fullname": "_typeshed.Self", "id": -1, "name": "Self", "namespace": "", "upper_bound": "builtins.object", "values": [], "variance": 0}, {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 1}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "group_by of GenerativeSelect", "ret_type": {".class": "TypeVarType", "fullname": "_typeshed.Self", "id": -1, "name": "Self", "namespace": "", "upper_bound": "builtins.object", "values": [], "variance": 0}, "type_guard": null, "unpack_kwargs": false, "variables": [{".class": "TypeVarType", "fullname": "_typeshed.Self", "id": -1, "name": "Self", "namespace": "", "upper_bound": "builtins.object", "values": [], "variance": 0}]}}}, "limit": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0, 0], "arg_names": ["self", "limit"], "flags": [], "fullname": "sqlalchemy.sql.selectable.GenerativeSelect.limit", "name": "limit", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "limit"], "arg_types": [{".class": "TypeVarType", "fullname": "_typeshed.Self", "id": -1, "name": "Self", "namespace": "", "upper_bound": "builtins.object", "values": [], "variance": 0}, {".class": "UnionType", "items": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, {".class": "NoneType"}]}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "limit of GenerativeSelect", "ret_type": {".class": "TypeVarType", "fullname": "_typeshed.Self", "id": -1, "name": "Self", "namespace": "", "upper_bound": "builtins.object", "values": [], "variance": 0}, "type_guard": null, "unpack_kwargs": false, "variables": [{".class": "TypeVarType", "fullname": "_typeshed.Self", "id": -1, "name": "Self", "namespace": "", "upper_bound": "builtins.object", "values": [], "variance": 0}]}}}, "offset": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0, 0], "arg_names": ["self", "offset"], "flags": [], "fullname": "sqlalchemy.sql.selectable.GenerativeSelect.offset", "name": "offset", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "offset"], "arg_types": [{".class": "TypeVarType", "fullname": "_typeshed.Self", "id": -1, "name": "Self", "namespace": "", "upper_bound": "builtins.object", "values": [], "variance": 0}, {".class": "UnionType", "items": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, {".class": "NoneType"}]}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "offset of GenerativeSelect", "ret_type": {".class": "TypeVarType", "fullname": "_typeshed.Self", "id": -1, "name": "Self", "namespace": "", "upper_bound": "builtins.object", "values": [], "variance": 0}, "type_guard": null, "unpack_kwargs": false, "variables": [{".class": "TypeVarType", "fullname": "_typeshed.Self", "id": -1, "name": "Self", "namespace": "", "upper_bound": "builtins.object", "values": [], "variance": 0}]}}}, "order_by": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0, 2], "arg_names": ["self", "clauses"], "flags": [], "fullname": "sqlalchemy.sql.selectable.GenerativeSelect.order_by", "name": "order_by", "type": {".class": "CallableType", "arg_kinds": [0, 2], "arg_names": ["self", "clauses"], "arg_types": [{".class": "TypeVarType", "fullname": "_typeshed.Self", "id": -1, "name": "Self", "namespace": "", "upper_bound": "builtins.object", "values": [], "variance": 0}, {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 1}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "order_by of GenerativeSelect", "ret_type": {".class": "TypeVarType", "fullname": "_typeshed.Self", "id": -1, "name": "Self", "namespace": "", "upper_bound": "builtins.object", "values": [], "variance": 0}, "type_guard": null, "unpack_kwargs": false, "variables": [{".class": "TypeVarType", "fullname": "_typeshed.Self", "id": -1, "name": "Self", "namespace": "", "upper_bound": "builtins.object", "values": [], "variance": 0}]}}}, "set_label_style": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0, 0], "arg_names": ["self", "style"], "flags": [], "fullname": "sqlalchemy.sql.selectable.GenerativeSelect.set_label_style", "name": "set_label_style", "type": null}}, "slice": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0, 0, 0], "arg_names": ["self", "start", "stop"], "flags": [], "fullname": "sqlalchemy.sql.selectable.GenerativeSelect.slice", "name": "slice", "type": {".class": "CallableType", "arg_kinds": [0, 0, 0], "arg_names": ["self", "start", "stop"], "arg_types": [{".class": "TypeVarType", "fullname": "_typeshed.Self", "id": -1, "name": "Self", "namespace": "", "upper_bound": "builtins.object", "values": [], "variance": 0}, {".class": "UnionType", "items": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, {".class": "NoneType"}]}, {".class": "UnionType", "items": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, {".class": "NoneType"}]}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "slice of GenerativeSelect", "ret_type": {".class": "TypeVarType", "fullname": "_typeshed.Self", "id": -1, "name": "Self", "namespace": "", "upper_bound": "builtins.object", "values": [], "variance": 0}, "type_guard": null, "unpack_kwargs": false, "variables": [{".class": "TypeVarType", "fullname": "_typeshed.Self", "id": -1, "name": "Self", "namespace": "", "upper_bound": "builtins.object", "values": [], "variance": 0}]}}}, "with_for_update": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0, 1, 1, 1, 1, 1], "arg_names": ["self", "nowait", "read", "of", "skip_locked", "key_share"], "flags": [], "fullname": "sqlalchemy.sql.selectable.GenerativeSelect.with_for_update", "name": "with_for_update", "type": {".class": "CallableType", "arg_kinds": [0, 1, 1, 1, 1, 1], "arg_names": ["self", "nowait", "read", "of", "skip_locked", "key_share"], "arg_types": [{".class": "TypeVarType", "fullname": "_typeshed.Self", "id": -1, "name": "Self", "namespace": "", "upper_bound": "builtins.object", "values": [], "variance": 0}, "builtins.bool", "builtins.bool", {".class": "UnionType", "items": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, {".class": "NoneType"}]}, "builtins.bool", "builtins.bool"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "with_for_update of GenerativeSelect", "ret_type": {".class": "TypeVarType", "fullname": "_typeshed.Self", "id": -1, "name": "Self", "namespace": "", "upper_bound": "builtins.object", "values": [], "variance": 0}, "type_guard": null, "unpack_kwargs": false, "variables": [{".class": "TypeVarType", "fullname": "_typeshed.Self", "id": -1, "name": "Self", "namespace": "", "upper_bound": "builtins.object", "values": [], "variance": 0}]}}}}, "self_type": null, "slots": null, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "GroupedElement": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.elements.GroupedElement", "kind": "Gdef"}, "Grouping": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.elements.Grouping", "kind": "Gdef"}, "HasCTE": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": [], "abstract_attributes": [], "bases": ["sqlalchemy.sql.roles.HasCTERole"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.sql.selectable.HasCTE", "name": "HasCTE", "type_vars": []}, "deletable_attributes": [], "flags": [], "fullname": "sqlalchemy.sql.selectable.HasCTE", "has_param_spec_type": false, "metaclass_type": null, "metadata": {}, "module_name": "sqlalchemy.sql.selectable", "mro": ["sqlalchemy.sql.selectable.HasCTE", "sqlalchemy.sql.roles.HasCTERole", "sqlalchemy.sql.roles.ReturnsRowsRole", "sqlalchemy.sql.roles.SQLRole", "builtins.object"], "names": {".class": "SymbolTable", "add_cte": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0, 0], "arg_names": ["self", "cte"], "flags": [], "fullname": "sqlalchemy.sql.selectable.HasCTE.add_cte", "name": "add_cte", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "cte"], "arg_types": ["sqlalchemy.sql.selectable.HasCTE", {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 1}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "add_cte of HasCTE", "ret_type": {".class": "NoneType"}, "type_guard": null, "unpack_kwargs": false, "variables": []}}}, "cte": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0, 1, 1, 1], "arg_names": ["self", "name", "recursive", "nesting"], "flags": [], "fullname": "sqlalchemy.sql.selectable.HasCTE.cte", "name": "cte", "type": {".class": "CallableType", "arg_kinds": [0, 1, 1, 1], "arg_names": ["self", "name", "recursive", "nesting"], "arg_types": ["sqlalchemy.sql.selectable.HasCTE", {".class": "UnionType", "items": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, {".class": "NoneType"}]}, "builtins.bool", "builtins.bool"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "cte of HasCTE", "ret_type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 1}, "type_guard": null, "unpack_kwargs": false, "variables": []}}}}, "self_type": null, "slots": null, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "HasCompileState": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.base.HasCompileState", "kind": "Gdef", "module_hidden": true, "module_public": false}, "HasHints": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": [], "abstract_attributes": [], "bases": ["builtins.object"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.sql.selectable.HasHints", "name": "HasHints", "type_vars": []}, "deletable_attributes": [], "flags": [], "fullname": "sqlalchemy.sql.selectable.HasHints", "has_param_spec_type": false, "metaclass_type": null, "metadata": {}, "module_name": "sqlalchemy.sql.selectable", "mro": ["sqlalchemy.sql.selectable.HasHints", "builtins.object"], "names": {".class": "SymbolTable", "with_hint": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0, 0, 0, 1], "arg_names": ["self", "selectable", "text", "dialect_name"], "flags": [], "fullname": "sqlalchemy.sql.selectable.HasHints.with_hint", "name": "with_hint", "type": {".class": "CallableType", "arg_kinds": [0, 0, 0, 1], "arg_names": ["self", "selectable", "text", "dialect_name"], "arg_types": [{".class": "TypeVarType", "fullname": "_typeshed.Self", "id": -1, "name": "Self", "namespace": "", "upper_bound": "builtins.object", "values": [], "variance": 0}, {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 1}, "builtins.str", "builtins.str"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "with_hint of HasHints", "ret_type": {".class": "TypeVarType", "fullname": "_typeshed.Self", "id": -1, "name": "Self", "namespace": "", "upper_bound": "builtins.object", "values": [], "variance": 0}, "type_guard": null, "unpack_kwargs": false, "variables": [{".class": "TypeVarType", "fullname": "_typeshed.Self", "id": -1, "name": "Self", "namespace": "", "upper_bound": "builtins.object", "values": [], "variance": 0}]}}}, "with_statement_hint": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0, 0, 1], "arg_names": ["self", "text", "dialect_name"], "flags": [], "fullname": "sqlalchemy.sql.selectable.HasHints.with_statement_hint", "name": "with_statement_hint", "type": {".class": "CallableType", "arg_kinds": [0, 0, 1], "arg_names": ["self", "text", "dialect_name"], "arg_types": ["sqlalchemy.sql.selectable.HasHints", {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 1}, "builtins.str"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "with_statement_hint of HasHints", "ret_type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 1}, "type_guard": null, "unpack_kwargs": false, "variables": []}}}}, "self_type": null, "slots": null, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "HasMemoized": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.util.langhelpers.HasMemoized", "kind": "Gdef", "module_hidden": true, "module_public": false}, "HasPrefixes": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": [], "abstract_attributes": [], "bases": ["builtins.object"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.sql.selectable.HasPrefixes", "name": "HasPrefixes", "type_vars": []}, "deletable_attributes": [], "flags": [], "fullname": "sqlalchemy.sql.selectable.HasPrefixes", "has_param_spec_type": false, "metaclass_type": null, "metadata": {}, "module_name": "sqlalchemy.sql.selectable", "mro": ["sqlalchemy.sql.selectable.HasPrefixes", "builtins.object"], "names": {".class": "SymbolTable", "prefix_with": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0, 2, 4], "arg_names": ["self", "expr", "kw"], "flags": [], "fullname": "sqlalchemy.sql.selectable.HasPrefixes.prefix_with", "name": "prefix_with", "type": {".class": "CallableType", "arg_kinds": [0, 2, 4], "arg_names": ["self", "expr", "kw"], "arg_types": [{".class": "TypeVarType", "fullname": "_typeshed.Self", "id": -1, "name": "Self", "namespace": "", "upper_bound": "builtins.object", "values": [], "variance": 0}, {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 1}, {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 1}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "prefix_with of HasPrefixes", "ret_type": {".class": "TypeVarType", "fullname": "_typeshed.Self", "id": -1, "name": "Self", "namespace": "", "upper_bound": "builtins.object", "values": [], "variance": 0}, "type_guard": null, "unpack_kwargs": false, "variables": [{".class": "TypeVarType", "fullname": "_typeshed.Self", "id": -1, "name": "Self", "namespace": "", "upper_bound": "builtins.object", "values": [], "variance": 0}]}}}}, "self_type": null, "slots": null, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "HasSuffixes": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": [], "abstract_attributes": [], "bases": ["builtins.object"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.sql.selectable.HasSuffixes", "name": "HasSuffixes", "type_vars": []}, "deletable_attributes": [], "flags": [], "fullname": "sqlalchemy.sql.selectable.HasSuffixes", "has_param_spec_type": false, "metaclass_type": null, "metadata": {}, "module_name": "sqlalchemy.sql.selectable", "mro": ["sqlalchemy.sql.selectable.HasSuffixes", "builtins.object"], "names": {".class": "SymbolTable", "suffix_with": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0, 2, 4], "arg_names": ["self", "expr", "kw"], "flags": [], "fullname": "sqlalchemy.sql.selectable.HasSuffixes.suffix_with", "name": "suffix_with", "type": {".class": "CallableType", "arg_kinds": [0, 2, 4], "arg_names": ["self", "expr", "kw"], "arg_types": [{".class": "TypeVarType", "fullname": "_typeshed.Self", "id": -1, "name": "Self", "namespace": "", "upper_bound": "builtins.object", "values": [], "variance": 0}, {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 1}, {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 1}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "suffix_with of HasSuffixes", "ret_type": {".class": "TypeVarType", "fullname": "_typeshed.Self", "id": -1, "name": "Self", "namespace": "", "upper_bound": "builtins.object", "values": [], "variance": 0}, "type_guard": null, "unpack_kwargs": false, "variables": [{".class": "TypeVarType", "fullname": "_typeshed.Self", "id": -1, "name": "Self", "namespace": "", "upper_bound": "builtins.object", "values": [], "variance": 0}]}}}}, "self_type": null, "slots": null, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "Immutable": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.base.Immutable", "kind": "Gdef", "module_hidden": true, "module_public": false}, "Join": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": [], "abstract_attributes": [], "bases": ["sqlalchemy.sql.roles.DMLTableRole", "sqlalchemy.sql.selectable.FromClause"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.sql.selectable.Join", "name": "Join", "type_vars": []}, "deletable_attributes": [], "flags": [], "fullname": "sqlalchemy.sql.selectable.Join", "has_param_spec_type": false, "metaclass_type": null, "metadata": {}, "module_name": "sqlalchemy.sql.selectable", "mro": ["sqlalchemy.sql.selectable.Join", "sqlalchemy.sql.roles.DMLTableRole", "sqlalchemy.sql.selectable.FromClause", "sqlalchemy.sql.roles.AnonymizedFromClauseRole", "sqlalchemy.sql.roles.StrictFromClauseRole", "sqlalchemy.sql.roles.FromClauseRole", "sqlalchemy.sql.roles.ColumnsClauseRole", "sqlalchemy.sql.roles.JoinTargetRole", "sqlalchemy.sql.roles.AllowsLambdaRole", "sqlalchemy.sql.roles.UsesInspection", "sqlalchemy.sql.roles.ColumnListRole", "sqlalchemy.sql.roles.StructuralRole", "sqlalchemy.sql.selectable.Selectable", "sqlalchemy.sql.selectable.ReturnsRows", "sqlalchemy.sql.roles.ReturnsRowsRole", "sqlalchemy.sql.elements.ClauseElement", "sqlalchemy.sql.roles.SQLRole", "sqlalchemy.sql.annotation.SupportsWrappingAnnotations", "sqlalchemy.sql.annotation.SupportsAnnotations", "sqlalchemy.sql.traversals.MemoizedHasCacheKey", "sqlalchemy.sql.traversals.HasCacheKey", "sqlalchemy.util.langhelpers.HasMemoized", "sqlalchemy.sql.traversals.HasCopyInternals", "sqlalchemy.sql.visitors.Traversible", "builtins.object"], "names": {".class": "SymbolTable", "__init__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0, 0, 0, 1, 1, 1], "arg_names": ["self", "left", "right", "onclause", "isouter", "full"], "flags": [], "fullname": "sqlalchemy.sql.selectable.Join.__init__", "name": "__init__", "type": {".class": "CallableType", "arg_kinds": [0, 0, 0, 1, 1, 1], "arg_names": ["self", "left", "right", "onclause", "isouter", "full"], "arg_types": ["sqlalchemy.sql.selectable.Join", {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 1}, {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 1}, {".class": "UnionType", "items": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, {".class": "NoneType"}]}, "builtins.bool", "builtins.bool"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "__init__ of Join", "ret_type": {".class": "NoneType"}, "type_guard": null, "unpack_kwargs": false, "variables": []}}}, "__visit_name__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.selectable.Join.__visit_name__", "name": "__visit_name__", "type": "builtins.str"}}, "alias": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0, 1, 1], "arg_names": ["self", "name", "flat"], "flags": [], "fullname": "sqlalchemy.sql.selectable.Join.alias", "name": "alias", "type": {".class": "CallableType", "arg_kinds": [0, 1, 1], "arg_names": ["self", "name", "flat"], "arg_types": ["sqlalchemy.sql.selectable.Join", {".class": "UnionType", "items": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, {".class": "NoneType"}]}, "builtins.bool"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "alias of Join", "ret_type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 1}, "type_guard": null, "unpack_kwargs": false, "variables": []}}}, "bind": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0], "arg_names": ["self"], "flags": ["is_property", "is_decorated"], "fullname": "sqlalchemy.sql.selectable.Join.bind", "name": "bind", "type": null}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready", "is_inferred"], "fullname": "sqlalchemy.sql.selectable.Join.bind", "name": "bind", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["sqlalchemy.sql.selectable.Join"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": true, "is_ellipsis_args": false, "name": "bind of Join", "ret_type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 1}, "type_guard": null, "unpack_kwargs": false, "variables": []}}}}, "description": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0], "arg_names": ["self"], "flags": ["is_property", "is_decorated"], "fullname": "sqlalchemy.sql.selectable.Join.description", "name": "description", "type": null}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready", "is_inferred"], "fullname": "sqlalchemy.sql.selectable.Join.description", "name": "description", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["sqlalchemy.sql.selectable.Join"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": true, "is_ellipsis_args": false, "name": "description of Join", "ret_type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 1}, "type_guard": null, "unpack_kwargs": false, "variables": []}}}}, "full": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.selectable.Join.full", "name": "full", "type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}}}, "is_derived_from": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0, 0], "arg_names": ["self", "fromclause"], "flags": [], "fullname": "sqlalchemy.sql.selectable.Join.is_derived_from", "name": "is_derived_from", "type": null}}, "isouter": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.selectable.Join.isouter", "name": "isouter", "type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}}}, "left": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.selectable.Join.left", "name": "left", "type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}}}, "onclause": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.selectable.Join.onclause", "name": "onclause", "type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}}}, "right": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.selectable.Join.right", "name": "right", "type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}}}, "select": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0, 1, 4], "arg_names": ["self", "whereclause", "kwargs"], "flags": [], "fullname": "sqlalchemy.sql.selectable.Join.select", "name": "select", "type": {".class": "CallableType", "arg_kinds": [0, 1, 4], "arg_names": ["self", "whereclause", "kwargs"], "arg_types": ["sqlalchemy.sql.selectable.Join", {".class": "UnionType", "items": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, {".class": "NoneType"}]}, {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 1}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "select of Join", "ret_type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 1}, "type_guard": null, "unpack_kwargs": false, "variables": []}}}, "self_group": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0, 1], "arg_names": ["self", "against"], "flags": [], "fullname": "sqlalchemy.sql.selectable.Join.self_group", "name": "self_group", "type": {".class": "CallableType", "arg_kinds": [0, 1], "arg_names": ["self", "against"], "arg_types": ["sqlalchemy.sql.selectable.Join", {".class": "UnionType", "items": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, {".class": "NoneType"}]}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "self_group of Join", "ret_type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 1}, "type_guard": null, "unpack_kwargs": false, "variables": []}}}}, "self_type": null, "slots": null, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "LABEL_STYLE_DEFAULT": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "flags": ["is_ready"], "fullname": "sqlalchemy.sql.selectable.LABEL_STYLE_DEFAULT", "name": "LABEL_STYLE_DEFAULT", "type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}}}, "LABEL_STYLE_DISAMBIGUATE_ONLY": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "flags": ["is_ready"], "fullname": "sqlalchemy.sql.selectable.LABEL_STYLE_DISAMBIGUATE_ONLY", "name": "LABEL_STYLE_DISAMBIGUATE_ONLY", "type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}}}, "LABEL_STYLE_NONE": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "flags": ["is_ready"], "fullname": "sqlalchemy.sql.selectable.LABEL_STYLE_NONE", "name": "LABEL_STYLE_NONE", "type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}}}, "LABEL_STYLE_TABLENAME_PLUS_COL": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "flags": ["is_ready"], "fullname": "sqlalchemy.sql.selectable.LABEL_STYLE_TABLENAME_PLUS_COL", "name": "LABEL_STYLE_TABLENAME_PLUS_COL", "type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}}}, "Lateral": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": [], "abstract_attributes": [], "bases": ["sqlalchemy.sql.selectable.AliasedReturnsRows"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.sql.selectable.Lateral", "name": "Lateral", "type_vars": []}, "deletable_attributes": [], "flags": [], "fullname": "sqlalchemy.sql.selectable.Lateral", "has_param_spec_type": false, "metaclass_type": null, "metadata": {}, "module_name": "sqlalchemy.sql.selectable", "mro": ["sqlalchemy.sql.selectable.Lateral", "sqlalchemy.sql.selectable.AliasedReturnsRows", "sqlalchemy.sql.selectable.NoInit", "sqlalchemy.sql.selectable.FromClause", "sqlalchemy.sql.roles.AnonymizedFromClauseRole", "sqlalchemy.sql.roles.StrictFromClauseRole", "sqlalchemy.sql.roles.FromClauseRole", "sqlalchemy.sql.roles.ColumnsClauseRole", "sqlalchemy.sql.roles.JoinTargetRole", "sqlalchemy.sql.roles.AllowsLambdaRole", "sqlalchemy.sql.roles.UsesInspection", "sqlalchemy.sql.roles.ColumnListRole", "sqlalchemy.sql.roles.StructuralRole", "sqlalchemy.sql.selectable.Selectable", "sqlalchemy.sql.selectable.ReturnsRows", "sqlalchemy.sql.roles.ReturnsRowsRole", "sqlalchemy.sql.elements.ClauseElement", "sqlalchemy.sql.roles.SQLRole", "sqlalchemy.sql.annotation.SupportsWrappingAnnotations", "sqlalchemy.sql.annotation.SupportsAnnotations", "sqlalchemy.sql.traversals.MemoizedHasCacheKey", "sqlalchemy.sql.traversals.HasCacheKey", "sqlalchemy.util.langhelpers.HasMemoized", "sqlalchemy.sql.traversals.HasCopyInternals", "sqlalchemy.sql.visitors.Traversible", "builtins.object"], "names": {".class": "SymbolTable", "__visit_name__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.selectable.Lateral.__visit_name__", "name": "__visit_name__", "type": "builtins.str"}}, "inherit_cache": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.selectable.Lateral.inherit_cache", "name": "inherit_cache", "type": "builtins.bool"}}}, "self_type": null, "slots": null, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "NoInit": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": [], "abstract_attributes": [], "bases": ["builtins.object"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.sql.selectable.NoInit", "name": "NoInit", "type_vars": []}, "deletable_attributes": [], "flags": [], "fullname": "sqlalchemy.sql.selectable.NoInit", "has_param_spec_type": false, "metaclass_type": null, "metadata": {}, "module_name": "sqlalchemy.sql.selectable", "mro": ["sqlalchemy.sql.selectable.NoInit", "builtins.object"], "names": {".class": "SymbolTable", "__init__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0, 2, 4], "arg_names": ["self", "arg", "kw"], "flags": [], "fullname": "sqlalchemy.sql.selectable.NoInit.__init__", "name": "__init__", "type": {".class": "CallableType", "arg_kinds": [0, 2, 4], "arg_names": ["self", "arg", "kw"], "arg_types": ["sqlalchemy.sql.selectable.NoInit", {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 1}, {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 1}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "__init__ of NoInit", "ret_type": {".class": "NoneType"}, "type_guard": null, "unpack_kwargs": false, "variables": []}}}}, "self_type": null, "slots": null, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "ReturnsRows": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": [], "abstract_attributes": [], "bases": ["sqlalchemy.sql.roles.ReturnsRowsRole", "sqlalchemy.sql.elements.ClauseElement"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.sql.selectable.ReturnsRows", "name": "ReturnsRows", "type_vars": []}, "deletable_attributes": [], "flags": [], "fullname": "sqlalchemy.sql.selectable.ReturnsRows", "has_param_spec_type": false, "metaclass_type": null, "metadata": {}, "module_name": "sqlalchemy.sql.selectable", "mro": ["sqlalchemy.sql.selectable.ReturnsRows", "sqlalchemy.sql.roles.ReturnsRowsRole", "sqlalchemy.sql.elements.ClauseElement", "sqlalchemy.sql.roles.SQLRole", "sqlalchemy.sql.annotation.SupportsWrappingAnnotations", "sqlalchemy.sql.annotation.SupportsAnnotations", "sqlalchemy.sql.traversals.MemoizedHasCacheKey", "sqlalchemy.sql.traversals.HasCacheKey", "sqlalchemy.util.langhelpers.HasMemoized", "sqlalchemy.sql.traversals.HasCopyInternals", "sqlalchemy.sql.visitors.Traversible", "builtins.object"], "names": {".class": "SymbolTable", "exported_columns": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0], "arg_names": ["self"], "flags": ["is_property", "is_decorated"], "fullname": "sqlalchemy.sql.selectable.ReturnsRows.exported_columns", "name": "exported_columns", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["sqlalchemy.sql.selectable.ReturnsRows"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "exported_columns of ReturnsRows", "ret_type": {".class": "NoneType"}, "type_guard": null, "unpack_kwargs": false, "variables": []}}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready", "is_inferred"], "fullname": "sqlalchemy.sql.selectable.ReturnsRows.exported_columns", "name": "exported_columns", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["sqlalchemy.sql.selectable.ReturnsRows"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "exported_columns of ReturnsRows", "ret_type": {".class": "NoneType"}, "type_guard": null, "unpack_kwargs": false, "variables": []}}}}, "selectable": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0], "arg_names": ["self"], "flags": ["is_property", "is_decorated"], "fullname": "sqlalchemy.sql.selectable.ReturnsRows.selectable", "name": "selectable", "type": null}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready", "is_inferred"], "fullname": "sqlalchemy.sql.selectable.ReturnsRows.selectable", "name": "selectable", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["sqlalchemy.sql.selectable.ReturnsRows"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": true, "is_ellipsis_args": false, "name": "selectable of ReturnsRows", "ret_type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 1}, "type_guard": null, "unpack_kwargs": false, "variables": []}}}}}, "self_type": null, "slots": null, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "ScalarSelect": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": [], "abstract_attributes": [], "bases": ["sqlalchemy.sql.roles.InElementRole", "sqlalchemy.sql.base.Generative", "sqlalchemy.sql.elements.Grouping"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.sql.selectable.ScalarSelect", "name": "ScalarSelect", "type_vars": []}, "deletable_attributes": [], "flags": [], "fullname": "sqlalchemy.sql.selectable.ScalarSelect", "has_param_spec_type": false, "metaclass_type": null, "metadata": {}, "module_name": "sqlalchemy.sql.selectable", "mro": ["sqlalchemy.sql.selectable.ScalarSelect", "sqlalchemy.sql.roles.InElementRole", "sqlalchemy.sql.base.Generative", "sqlalchemy.sql.elements.Grouping", "sqlalchemy.sql.elements.GroupedElement", "sqlalchemy.sql.elements.ColumnElement", "sqlalchemy.sql.roles.ColumnArgumentOrKeyRole", "sqlalchemy.sql.roles.ColumnArgumentRole", "sqlalchemy.sql.roles.StatementOptionRole", "sqlalchemy.sql.roles.WhereHavingRole", "sqlalchemy.sql.roles.OnClauseRole", "sqlalchemy.sql.roles.BinaryElementRole", "sqlalchemy.sql.roles.ExpressionElementRole", "sqlalchemy.sql.roles.OrderByRole", "sqlalchemy.sql.roles.ColumnsClauseRole", "sqlalchemy.sql.roles.AllowsLambdaRole", "sqlalchemy.sql.roles.ByOfRole", "sqlalchemy.sql.roles.UsesInspection", "sqlalchemy.sql.roles.ColumnListRole", "sqlalchemy.sql.roles.LimitOffsetRole", "sqlalchemy.sql.roles.DMLColumnRole", "sqlalchemy.sql.roles.DDLConstraintColumnRole", "sqlalchemy.sql.roles.DDLExpressionRole", "sqlalchemy.sql.roles.StructuralRole", "sqlalchemy.sql.operators.ColumnOperators", "sqlalchemy.sql.operators.Operators", "sqlalchemy.sql.elements.ClauseElement", "sqlalchemy.sql.roles.SQLRole", "sqlalchemy.sql.annotation.SupportsWrappingAnnotations", "sqlalchemy.sql.annotation.SupportsAnnotations", "sqlalchemy.sql.traversals.MemoizedHasCacheKey", "sqlalchemy.sql.traversals.HasCacheKey", "sqlalchemy.util.langhelpers.HasMemoized", "sqlalchemy.sql.traversals.HasCopyInternals", "sqlalchemy.sql.visitors.Traversible", "builtins.object"], "names": {".class": "SymbolTable", "__init__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0, 0], "arg_names": ["self", "element"], "flags": [], "fullname": "sqlalchemy.sql.selectable.ScalarSelect.__init__", "name": "__init__", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "element"], "arg_types": ["sqlalchemy.sql.selectable.ScalarSelect", {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 1}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "__init__ of ScalarSelect", "ret_type": {".class": "NoneType"}, "type_guard": null, "unpack_kwargs": false, "variables": []}}}, "c": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0], "arg_names": ["self"], "flags": ["is_property", "is_decorated"], "fullname": "sqlalchemy.sql.selectable.ScalarSelect.c", "name": "c", "type": null}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready", "is_inferred"], "fullname": "sqlalchemy.sql.selectable.ScalarSelect.c", "name": "c", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["sqlalchemy.sql.selectable.ScalarSelect"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": true, "is_ellipsis_args": false, "name": "c of ScalarSelect", "ret_type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 1}, "type_guard": null, "unpack_kwargs": false, "variables": []}}}}, "columns": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0], "arg_names": ["self"], "flags": ["is_property", "is_decorated"], "fullname": "sqlalchemy.sql.selectable.ScalarSelect.columns", "name": "columns", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["sqlalchemy.sql.selectable.ScalarSelect"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "columns of ScalarSelect", "ret_type": {".class": "NoneType"}, "type_guard": null, "unpack_kwargs": false, "variables": []}}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready", "is_inferred"], "fullname": "sqlalchemy.sql.selectable.ScalarSelect.columns", "name": "columns", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["sqlalchemy.sql.selectable.ScalarSelect"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "columns of ScalarSelect", "ret_type": {".class": "NoneType"}, "type_guard": null, "unpack_kwargs": false, "variables": []}}}}, "correlate": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0, 2], "arg_names": ["self", "fromclauses"], "flags": [], "fullname": "sqlalchemy.sql.selectable.ScalarSelect.correlate", "name": "correlate", "type": {".class": "CallableType", "arg_kinds": [0, 2], "arg_names": ["self", "fromclauses"], "arg_types": [{".class": "TypeVarType", "fullname": "_typeshed.Self", "id": -1, "name": "Self", "namespace": "", "upper_bound": "builtins.object", "values": [], "variance": 0}, {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 1}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "correlate of ScalarSelect", "ret_type": {".class": "TypeVarType", "fullname": "_typeshed.Self", "id": -1, "name": "Self", "namespace": "", "upper_bound": "builtins.object", "values": [], "variance": 0}, "type_guard": null, "unpack_kwargs": false, "variables": [{".class": "TypeVarType", "fullname": "_typeshed.Self", "id": -1, "name": "Self", "namespace": "", "upper_bound": "builtins.object", "values": [], "variance": 0}]}}}, "correlate_except": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0, 2], "arg_names": ["self", "fromclauses"], "flags": [], "fullname": "sqlalchemy.sql.selectable.ScalarSelect.correlate_except", "name": "correlate_except", "type": {".class": "CallableType", "arg_kinds": [0, 2], "arg_names": ["self", "fromclauses"], "arg_types": [{".class": "TypeVarType", "fullname": "_typeshed.Self", "id": -1, "name": "Self", "namespace": "", "upper_bound": "builtins.object", "values": [], "variance": 0}, {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 1}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "correlate_except of ScalarSelect", "ret_type": {".class": "TypeVarType", "fullname": "_typeshed.Self", "id": -1, "name": "Self", "namespace": "", "upper_bound": "builtins.object", "values": [], "variance": 0}, "type_guard": null, "unpack_kwargs": false, "variables": [{".class": "TypeVarType", "fullname": "_typeshed.Self", "id": -1, "name": "Self", "namespace": "", "upper_bound": "builtins.object", "values": [], "variance": 0}]}}}, "element": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.selectable.ScalarSelect.element", "name": "element", "type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}}}, "inherit_cache": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.selectable.ScalarSelect.inherit_cache", "name": "inherit_cache", "type": "builtins.bool"}}, "self_group": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0, 4], "arg_names": ["self", "kwargs"], "flags": [], "fullname": "sqlalchemy.sql.selectable.ScalarSelect.self_group", "name": "self_group", "type": null}}, "type": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.selectable.ScalarSelect.type", "name": "type", "type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}}}, "where": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0, 0], "arg_names": ["self", "crit"], "flags": [], "fullname": "sqlalchemy.sql.selectable.ScalarSelect.where", "name": "where", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "crit"], "arg_types": [{".class": "TypeVarType", "fullname": "_typeshed.Self", "id": -1, "name": "Self", "namespace": "", "upper_bound": "builtins.object", "values": [], "variance": 0}, {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 1}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "where of ScalarSelect", "ret_type": {".class": "TypeVarType", "fullname": "_typeshed.Self", "id": -1, "name": "Self", "namespace": "", "upper_bound": "builtins.object", "values": [], "variance": 0}, "type_guard": null, "unpack_kwargs": false, "variables": [{".class": "TypeVarType", "fullname": "_typeshed.Self", "id": -1, "name": "Self", "namespace": "", "upper_bound": "builtins.object", "values": [], "variance": 0}]}}}}, "self_type": null, "slots": null, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "Select": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": [], "abstract_attributes": [], "bases": ["sqlalchemy.sql.selectable.HasPrefixes", "sqlalchemy.sql.selectable.HasSuffixes", "sqlalchemy.sql.selectable.HasHints", "sqlalchemy.sql.base.HasCompileState", "sqlalchemy.sql.selectable.DeprecatedSelectGenerations", "sqlalchemy.sql.selectable._SelectFromElements", "sqlalchemy.sql.selectable.GenerativeSelect"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.sql.selectable.Select", "name": "Select", "type_vars": []}, "deletable_attributes": [], "flags": [], "fullname": "sqlalchemy.sql.selectable.Select", "has_param_spec_type": false, "metaclass_type": null, "metadata": {}, "module_name": "sqlalchemy.sql.selectable", "mro": ["sqlalchemy.sql.selectable.Select", "sqlalchemy.sql.selectable.HasPrefixes", "sqlalchemy.sql.selectable.HasSuffixes", "sqlalchemy.sql.selectable.HasHints", "sqlalchemy.sql.base.HasCompileState", "sqlalchemy.sql.selectable.DeprecatedSelectGenerations", "sqlalchemy.sql.selectable._SelectFromElements", "sqlalchemy.sql.selectable.GenerativeSelect", "sqlalchemy.sql.selectable.DeprecatedSelectBaseGenerations", "sqlalchemy.sql.selectable.SelectBase", "sqlalchemy.sql.roles.SelectStatementRole", "sqlalchemy.sql.roles.DMLSelectRole", "sqlalchemy.sql.roles.CompoundElementRole", "sqlalchemy.sql.roles.AllowsLambdaRole", "sqlalchemy.sql.roles.InElementRole", "sqlalchemy.sql.selectable.HasCTE", "sqlalchemy.sql.roles.HasCTERole", "sqlalchemy.sql.base.Executable", "sqlalchemy.sql.roles.StatementRole", "sqlalchemy.sql.annotation.SupportsCloneAnnotations", "sqlalchemy.sql.selectable.Selectable", "sqlalchemy.sql.selectable.ReturnsRows", "sqlalchemy.sql.roles.ReturnsRowsRole", "sqlalchemy.sql.elements.ClauseElement", "sqlalchemy.sql.roles.SQLRole", "sqlalchemy.sql.base.Generative", "sqlalchemy.sql.annotation.SupportsWrappingAnnotations", "sqlalchemy.sql.annotation.SupportsAnnotations", "sqlalchemy.sql.traversals.MemoizedHasCacheKey", "sqlalchemy.sql.traversals.HasCacheKey", "sqlalchemy.util.langhelpers.HasMemoized", "sqlalchemy.sql.traversals.HasCopyInternals", "sqlalchemy.sql.visitors.Traversible", "builtins.object"], "names": {".class": "SymbolTable", "__init__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0], "arg_names": ["self"], "flags": [], "fullname": "sqlalchemy.sql.selectable.Select.__init__", "name": "__init__", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["sqlalchemy.sql.selectable.Select"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "__init__ of Select", "ret_type": {".class": "NoneType"}, "type_guard": null, "unpack_kwargs": false, "variables": []}}}, "__visit_name__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.selectable.Select.__visit_name__", "name": "__visit_name__", "type": "builtins.str"}}, "add_columns": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0, 2], "arg_names": ["self", "columns"], "flags": [], "fullname": "sqlalchemy.sql.selectable.Select.add_columns", "name": "add_columns", "type": {".class": "CallableType", "arg_kinds": [0, 2], "arg_names": ["self", "columns"], "arg_types": [{".class": "TypeVarType", "fullname": "_typeshed.Self", "id": -1, "name": "Self", "namespace": "", "upper_bound": "builtins.object", "values": [], "variance": 0}, {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 1}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "add_columns of Select", "ret_type": {".class": "TypeVarType", "fullname": "_typeshed.Self", "id": -1, "name": "Self", "namespace": "", "upper_bound": "builtins.object", "values": [], "variance": 0}, "type_guard": null, "unpack_kwargs": false, "variables": [{".class": "TypeVarType", "fullname": "_typeshed.Self", "id": -1, "name": "Self", "namespace": "", "upper_bound": "builtins.object", "values": [], "variance": 0}]}}}, "bind": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "OverloadedFuncDef", "flags": ["is_property"], "fullname": "sqlalchemy.sql.selectable.Select.bind", "impl": null, "items": [{".class": "Decorator", "func": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0], "arg_names": ["self"], "flags": ["is_property", "is_overload", "is_decorated"], "fullname": "sqlalchemy.sql.selectable.Select.bind", "name": "bind", "type": null}, "is_overload": true, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_settable_property", "is_ready", "is_inferred"], "fullname": "sqlalchemy.sql.selectable.Select.bind", "name": "bind", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["sqlalchemy.sql.selectable.Select"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": true, "is_ellipsis_args": false, "name": "bind of Select", "ret_type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 1}, "type_guard": null, "unpack_kwargs": false, "variables": []}}}, {".class": "Decorator", "func": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0, 0], "arg_names": ["self", "bind"], "flags": ["is_decorated"], "fullname": "sqlalchemy.sql.selectable.Select.bind", "name": "bind", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "bind"], "arg_types": ["sqlalchemy.sql.selectable.Select", {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 1}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "bind of Select", "ret_type": {".class": "NoneType"}, "type_guard": null, "unpack_kwargs": false, "variables": []}}, "is_overload": false, "var": {".class": "Var", "flags": ["is_inferred"], "fullname": "", "name": "bind", "type": null}}], "type": {".class": "Overloaded", "items": [{".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["sqlalchemy.sql.selectable.Select"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": true, "is_ellipsis_args": false, "name": "bind", "ret_type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 1}, "type_guard": null, "unpack_kwargs": false, "variables": []}]}}}, "column": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0, 0], "arg_names": ["self", "column"], "flags": [], "fullname": "sqlalchemy.sql.selectable.Select.column", "name": "column", "type": null}}, "column_descriptions": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0], "arg_names": ["self"], "flags": ["is_property", "is_decorated"], "fullname": "sqlalchemy.sql.selectable.Select.column_descriptions", "name": "column_descriptions", "type": null}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready", "is_inferred"], "fullname": "sqlalchemy.sql.selectable.Select.column_descriptions", "name": "column_descriptions", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["sqlalchemy.sql.selectable.Select"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": true, "is_ellipsis_args": false, "name": "column_descriptions of Select", "ret_type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 1}, "type_guard": null, "unpack_kwargs": false, "variables": []}}}}, "columns_clause_froms": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0], "arg_names": ["self"], "flags": ["is_property", "is_decorated"], "fullname": "sqlalchemy.sql.selectable.Select.columns_clause_froms", "name": "columns_clause_froms", "type": null}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready", "is_inferred"], "fullname": "sqlalchemy.sql.selectable.Select.columns_clause_froms", "name": "columns_clause_froms", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["sqlalchemy.sql.selectable.Select"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": true, "is_ellipsis_args": false, "name": "columns_clause_froms of Select", "ret_type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 1}, "type_guard": null, "unpack_kwargs": false, "variables": []}}}}, "correlate": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0, 2], "arg_names": ["self", "fromclauses"], "flags": [], "fullname": "sqlalchemy.sql.selectable.Select.correlate", "name": "correlate", "type": {".class": "CallableType", "arg_kinds": [0, 2], "arg_names": ["self", "fromclauses"], "arg_types": [{".class": "TypeVarType", "fullname": "_typeshed.Self", "id": -1, "name": "Self", "namespace": "", "upper_bound": "builtins.object", "values": [], "variance": 0}, {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 1}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "correlate of Select", "ret_type": {".class": "TypeVarType", "fullname": "_typeshed.Self", "id": -1, "name": "Self", "namespace": "", "upper_bound": "builtins.object", "values": [], "variance": 0}, "type_guard": null, "unpack_kwargs": false, "variables": [{".class": "TypeVarType", "fullname": "_typeshed.Self", "id": -1, "name": "Self", "namespace": "", "upper_bound": "builtins.object", "values": [], "variance": 0}]}}}, "correlate_except": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0, 2], "arg_names": ["self", "fromclauses"], "flags": [], "fullname": "sqlalchemy.sql.selectable.Select.correlate_except", "name": "correlate_except", "type": {".class": "CallableType", "arg_kinds": [0, 2], "arg_names": ["self", "fromclauses"], "arg_types": [{".class": "TypeVarType", "fullname": "_typeshed.Self", "id": -1, "name": "Self", "namespace": "", "upper_bound": "builtins.object", "values": [], "variance": 0}, {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 1}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "correlate_except of Select", "ret_type": {".class": "TypeVarType", "fullname": "_typeshed.Self", "id": -1, "name": "Self", "namespace": "", "upper_bound": "builtins.object", "values": [], "variance": 0}, "type_guard": null, "unpack_kwargs": false, "variables": [{".class": "TypeVarType", "fullname": "_typeshed.Self", "id": -1, "name": "Self", "namespace": "", "upper_bound": "builtins.object", "values": [], "variance": 0}]}}}, "create_legacy_select": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0, 1, 1, 1, 1, 1, 1, 1, 1, 4], "arg_names": ["cls", "columns", "whereclause", "from_obj", "distinct", "having", "correlate", "prefixes", "suffixes", "kwargs"], "flags": ["is_class", "is_decorated"], "fullname": "sqlalchemy.sql.selectable.Select.create_legacy_select", "name": "create_legacy_select", "type": {".class": "CallableType", "arg_kinds": [0, 1, 1, 1, 1, 1, 1, 1, 1, 4], "arg_names": ["cls", "columns", "whereclause", "from_obj", "distinct", "having", "correlate", "prefixes", "suffixes", "kwargs"], "arg_types": [{".class": "TypeType", "item": "sqlalchemy.sql.selectable.Select"}, {".class": "UnionType", "items": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, {".class": "NoneType"}]}, {".class": "UnionType", "items": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, {".class": "NoneType"}]}, {".class": "UnionType", "items": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, {".class": "NoneType"}]}, "builtins.bool", {".class": "UnionType", "items": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, {".class": "NoneType"}]}, "builtins.bool", {".class": "UnionType", "items": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, {".class": "NoneType"}]}, {".class": "UnionType", "items": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, {".class": "NoneType"}]}, {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 1}], "bound_args": [], "def_extras": {"first_arg": "cls"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "create_legacy_select of Select", "ret_type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 1}, "type_guard": null, "unpack_kwargs": false, "variables": []}}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_classmethod", "is_ready", "is_inferred"], "fullname": "sqlalchemy.sql.selectable.Select.create_legacy_select", "name": "create_legacy_select", "type": {".class": "CallableType", "arg_kinds": [0, 1, 1, 1, 1, 1, 1, 1, 1, 4], "arg_names": ["cls", "columns", "whereclause", "from_obj", "distinct", "having", "correlate", "prefixes", "suffixes", "kwargs"], "arg_types": [{".class": "TypeType", "item": "sqlalchemy.sql.selectable.Select"}, {".class": "UnionType", "items": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, {".class": "NoneType"}]}, {".class": "UnionType", "items": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, {".class": "NoneType"}]}, {".class": "UnionType", "items": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, {".class": "NoneType"}]}, "builtins.bool", {".class": "UnionType", "items": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, {".class": "NoneType"}]}, "builtins.bool", {".class": "UnionType", "items": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, {".class": "NoneType"}]}, {".class": "UnionType", "items": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, {".class": "NoneType"}]}, {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 1}], "bound_args": [], "def_extras": {"first_arg": "cls"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "create_legacy_select of Select", "ret_type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 1}, "type_guard": null, "unpack_kwargs": false, "variables": []}}}}, "distinct": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0, 2], "arg_names": ["self", "expr"], "flags": [], "fullname": "sqlalchemy.sql.selectable.Select.distinct", "name": "distinct", "type": {".class": "CallableType", "arg_kinds": [0, 2], "arg_names": ["self", "expr"], "arg_types": [{".class": "TypeVarType", "fullname": "_typeshed.Self", "id": -1, "name": "Self", "namespace": "", "upper_bound": "builtins.object", "values": [], "variance": 0}, {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 1}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "distinct of Select", "ret_type": {".class": "TypeVarType", "fullname": "_typeshed.Self", "id": -1, "name": "Self", "namespace": "", "upper_bound": "builtins.object", "values": [], "variance": 0}, "type_guard": null, "unpack_kwargs": false, "variables": [{".class": "TypeVarType", "fullname": "_typeshed.Self", "id": -1, "name": "Self", "namespace": "", "upper_bound": "builtins.object", "values": [], "variance": 0}]}}}, "except_": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0, 2, 4], "arg_names": ["self", "other", "kwargs"], "flags": [], "fullname": "sqlalchemy.sql.selectable.Select.except_", "name": "except_", "type": null}}, "except_all": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0, 2, 4], "arg_names": ["self", "other", "kwargs"], "flags": [], "fullname": "sqlalchemy.sql.selectable.Select.except_all", "name": "except_all", "type": null}}, "filter": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0, 2], "arg_names": ["self", "criteria"], "flags": [], "fullname": "sqlalchemy.sql.selectable.Select.filter", "name": "filter", "type": null}}, "filter_by": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0, 4], "arg_names": ["self", "kwargs"], "flags": [], "fullname": "sqlalchemy.sql.selectable.Select.filter_by", "name": "filter_by", "type": null}}, "from_statement": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0, 0], "arg_names": ["self", "statement"], "flags": [], "fullname": "sqlalchemy.sql.selectable.Select.from_statement", "name": "from_statement", "type": null}}, "froms": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0], "arg_names": ["self"], "flags": ["is_property", "is_decorated"], "fullname": "sqlalchemy.sql.selectable.Select.froms", "name": "froms", "type": null}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready", "is_inferred"], "fullname": "sqlalchemy.sql.selectable.Select.froms", "name": "froms", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["sqlalchemy.sql.selectable.Select"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": true, "is_ellipsis_args": false, "name": "froms of Select", "ret_type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 1}, "type_guard": null, "unpack_kwargs": false, "variables": []}}}}, "get_children": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0, 4], "arg_names": ["self", "kwargs"], "flags": [], "fullname": "sqlalchemy.sql.selectable.Select.get_children", "name": "get_children", "type": null}}, "get_final_froms": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0], "arg_names": ["self"], "flags": [], "fullname": "sqlalchemy.sql.selectable.Select.get_final_froms", "name": "get_final_froms", "type": null}}, "having": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0, 0], "arg_names": ["self", "having"], "flags": [], "fullname": "sqlalchemy.sql.selectable.Select.having", "name": "having", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "having"], "arg_types": [{".class": "TypeVarType", "fullname": "_typeshed.Self", "id": -1, "name": "Self", "namespace": "", "upper_bound": "builtins.object", "values": [], "variance": 0}, {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 1}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "having of Select", "ret_type": {".class": "TypeVarType", "fullname": "_typeshed.Self", "id": -1, "name": "Self", "namespace": "", "upper_bound": "builtins.object", "values": [], "variance": 0}, "type_guard": null, "unpack_kwargs": false, "variables": [{".class": "TypeVarType", "fullname": "_typeshed.Self", "id": -1, "name": "Self", "namespace": "", "upper_bound": "builtins.object", "values": [], "variance": 0}]}}}, "inner_columns": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0], "arg_names": ["self"], "flags": ["is_property", "is_decorated"], "fullname": "sqlalchemy.sql.selectable.Select.inner_columns", "name": "inner_columns", "type": null}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready", "is_inferred"], "fullname": "sqlalchemy.sql.selectable.Select.inner_columns", "name": "inner_columns", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["sqlalchemy.sql.selectable.Select"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": true, "is_ellipsis_args": false, "name": "inner_columns of Select", "ret_type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 1}, "type_guard": null, "unpack_kwargs": false, "variables": []}}}}, "intersect": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0, 2, 4], "arg_names": ["self", "other", "kwargs"], "flags": [], "fullname": "sqlalchemy.sql.selectable.Select.intersect", "name": "intersect", "type": null}}, "intersect_all": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0, 2, 4], "arg_names": ["self", "other", "kwargs"], "flags": [], "fullname": "sqlalchemy.sql.selectable.Select.intersect_all", "name": "intersect_all", "type": null}}, "is_derived_from": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0, 0], "arg_names": ["self", "fromclause"], "flags": [], "fullname": "sqlalchemy.sql.selectable.Select.is_derived_from", "name": "is_derived_from", "type": null}}, "join": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0, 0, 1, 1, 1], "arg_names": ["self", "target", "onclause", "isouter", "full"], "flags": [], "fullname": "sqlalchemy.sql.selectable.Select.join", "name": "join", "type": {".class": "CallableType", "arg_kinds": [0, 0, 1, 1, 1], "arg_names": ["self", "target", "onclause", "isouter", "full"], "arg_types": [{".class": "TypeVarType", "fullname": "_typeshed.Self", "id": -1, "name": "Self", "namespace": "", "upper_bound": "builtins.object", "values": [], "variance": 0}, {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 1}, {".class": "UnionType", "items": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, {".class": "NoneType"}]}, "builtins.bool", "builtins.bool"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "join of Select", "ret_type": {".class": "TypeVarType", "fullname": "_typeshed.Self", "id": -1, "name": "Self", "namespace": "", "upper_bound": "builtins.object", "values": [], "variance": 0}, "type_guard": null, "unpack_kwargs": false, "variables": [{".class": "TypeVarType", "fullname": "_typeshed.Self", "id": -1, "name": "Self", "namespace": "", "upper_bound": "builtins.object", "values": [], "variance": 0}]}}}, "join_from": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0, 0, 0, 1, 1, 1], "arg_names": ["self", "from_", "target", "onclause", "isouter", "full"], "flags": [], "fullname": "sqlalchemy.sql.selectable.Select.join_from", "name": "join_from", "type": {".class": "CallableType", "arg_kinds": [0, 0, 0, 1, 1, 1], "arg_names": ["self", "from_", "target", "onclause", "isouter", "full"], "arg_types": [{".class": "TypeVarType", "fullname": "_typeshed.Self", "id": -1, "name": "Self", "namespace": "", "upper_bound": "builtins.object", "values": [], "variance": 0}, {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 1}, {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 1}, {".class": "UnionType", "items": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, {".class": "NoneType"}]}, "builtins.bool", "builtins.bool"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "join_from of Select", "ret_type": {".class": "TypeVarType", "fullname": "_typeshed.Self", "id": -1, "name": "Self", "namespace": "", "upper_bound": "builtins.object", "values": [], "variance": 0}, "type_guard": null, "unpack_kwargs": false, "variables": [{".class": "TypeVarType", "fullname": "_typeshed.Self", "id": -1, "name": "Self", "namespace": "", "upper_bound": "builtins.object", "values": [], "variance": 0}]}}}, "outerjoin": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0, 0, 1, 1], "arg_names": ["self", "target", "onclause", "full"], "flags": [], "fullname": "sqlalchemy.sql.selectable.Select.outerjoin", "name": "outerjoin", "type": {".class": "CallableType", "arg_kinds": [0, 0, 1, 1], "arg_names": ["self", "target", "onclause", "full"], "arg_types": ["sqlalchemy.sql.selectable.Select", {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 1}, {".class": "UnionType", "items": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, {".class": "NoneType"}]}, "builtins.bool"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "outerjoin of Select", "ret_type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 1}, "type_guard": null, "unpack_kwargs": false, "variables": []}}}, "outerjoin_from": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0, 0, 0, 1, 1], "arg_names": ["self", "from_", "target", "onclause", "full"], "flags": [], "fullname": "sqlalchemy.sql.selectable.Select.outerjoin_from", "name": "outerjoin_from", "type": {".class": "CallableType", "arg_kinds": [0, 0, 0, 1, 1], "arg_names": ["self", "from_", "target", "onclause", "full"], "arg_types": ["sqlalchemy.sql.selectable.Select", {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 1}, {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 1}, {".class": "UnionType", "items": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, {".class": "NoneType"}]}, "builtins.bool"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "outerjoin_from of Select", "ret_type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 1}, "type_guard": null, "unpack_kwargs": false, "variables": []}}}, "reduce_columns": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0, 1], "arg_names": ["self", "only_synonyms"], "flags": [], "fullname": "sqlalchemy.sql.selectable.Select.reduce_columns", "name": "reduce_columns", "type": {".class": "CallableType", "arg_kinds": [0, 1], "arg_names": ["self", "only_synonyms"], "arg_types": ["sqlalchemy.sql.selectable.Select", "builtins.bool"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "reduce_columns of Select", "ret_type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 1}, "type_guard": null, "unpack_kwargs": false, "variables": []}}}, "select_from": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0, 2], "arg_names": ["self", "froms"], "flags": [], "fullname": "sqlalchemy.sql.selectable.Select.select_from", "name": "select_from", "type": {".class": "CallableType", "arg_kinds": [0, 2], "arg_names": ["self", "froms"], "arg_types": [{".class": "TypeVarType", "fullname": "_typeshed.Self", "id": -1, "name": "Self", "namespace": "", "upper_bound": "builtins.object", "values": [], "variance": 0}, {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 1}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "select_from of Select", "ret_type": {".class": "TypeVarType", "fullname": "_typeshed.Self", "id": -1, "name": "Self", "namespace": "", "upper_bound": "builtins.object", "values": [], "variance": 0}, "type_guard": null, "unpack_kwargs": false, "variables": [{".class": "TypeVarType", "fullname": "_typeshed.Self", "id": -1, "name": "Self", "namespace": "", "upper_bound": "builtins.object", "values": [], "variance": 0}]}}}, "selected_columns": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0], "arg_names": ["self"], "flags": ["is_decorated"], "fullname": "sqlalchemy.sql.selectable.Select.selected_columns", "name": "selected_columns", "type": null}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready", "is_inferred"], "fullname": "sqlalchemy.sql.selectable.Select.selected_columns", "name": "selected_columns", "type": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 1}, "type_of_any": 7}], "type_ref": "sqlalchemy.util.langhelpers.HasMemoized.memoized_attribute"}}}}, "self_group": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0, 1], "arg_names": ["self", "against"], "flags": [], "fullname": "sqlalchemy.sql.selectable.Select.self_group", "name": "self_group", "type": {".class": "CallableType", "arg_kinds": [0, 1], "arg_names": ["self", "against"], "arg_types": ["sqlalchemy.sql.selectable.Select", {".class": "UnionType", "items": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, {".class": "NoneType"}]}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "self_group of Select", "ret_type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 1}, "type_guard": null, "unpack_kwargs": false, "variables": []}}}, "union": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0, 2, 4], "arg_names": ["self", "other", "kwargs"], "flags": [], "fullname": "sqlalchemy.sql.selectable.Select.union", "name": "union", "type": null}}, "union_all": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0, 2, 4], "arg_names": ["self", "other", "kwargs"], "flags": [], "fullname": "sqlalchemy.sql.selectable.Select.union_all", "name": "union_all", "type": null}}, "where": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0, 2], "arg_names": ["self", "whereclause"], "flags": [], "fullname": "sqlalchemy.sql.selectable.Select.where", "name": "where", "type": {".class": "CallableType", "arg_kinds": [0, 2], "arg_names": ["self", "whereclause"], "arg_types": [{".class": "TypeVarType", "fullname": "_typeshed.Self", "id": -1, "name": "Self", "namespace": "", "upper_bound": "builtins.object", "values": [], "variance": 0}, {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 1}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "where of Select", "ret_type": {".class": "TypeVarType", "fullname": "_typeshed.Self", "id": -1, "name": "Self", "namespace": "", "upper_bound": "builtins.object", "values": [], "variance": 0}, "type_guard": null, "unpack_kwargs": false, "variables": [{".class": "TypeVarType", "fullname": "_typeshed.Self", "id": -1, "name": "Self", "namespace": "", "upper_bound": "builtins.object", "values": [], "variance": 0}]}}}, "whereclause": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0], "arg_names": ["self"], "flags": ["is_property", "is_decorated"], "fullname": "sqlalchemy.sql.selectable.Select.whereclause", "name": "whereclause", "type": null}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready", "is_inferred"], "fullname": "sqlalchemy.sql.selectable.Select.whereclause", "name": "whereclause", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["sqlalchemy.sql.selectable.Select"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": true, "is_ellipsis_args": false, "name": "whereclause of Select", "ret_type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 1}, "type_guard": null, "unpack_kwargs": false, "variables": []}}}}, "with_only_columns": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0, 2, 4], "arg_names": ["self", "columns", "kw"], "flags": [], "fullname": "sqlalchemy.sql.selectable.Select.with_only_columns", "name": "with_only_columns", "type": {".class": "CallableType", "arg_kinds": [0, 2, 4], "arg_names": ["self", "columns", "kw"], "arg_types": [{".class": "TypeVarType", "fullname": "_typeshed.Self", "id": -1, "name": "Self", "namespace": "", "upper_bound": "builtins.object", "values": [], "variance": 0}, {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 1}, {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 1}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "with_only_columns of Select", "ret_type": {".class": "TypeVarType", "fullname": "_typeshed.Self", "id": -1, "name": "Self", "namespace": "", "upper_bound": "builtins.object", "values": [], "variance": 0}, "type_guard": null, "unpack_kwargs": false, "variables": [{".class": "TypeVarType", "fullname": "_typeshed.Self", "id": -1, "name": "Self", "namespace": "", "upper_bound": "builtins.object", "values": [], "variance": 0}]}}}}, "self_type": null, "slots": null, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "SelectBase": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": [], "abstract_attributes": [], "bases": ["sqlalchemy.sql.roles.SelectStatementRole", "sqlalchemy.sql.roles.DMLSelectRole", "sqlalchemy.sql.roles.CompoundElementRole", "sqlalchemy.sql.roles.InElementRole", "sqlalchemy.sql.selectable.HasCTE", "sqlalchemy.sql.base.Executable", "sqlalchemy.sql.annotation.SupportsCloneAnnotations", "sqlalchemy.sql.selectable.Selectable"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.sql.selectable.SelectBase", "name": "SelectBase", "type_vars": []}, "deletable_attributes": [], "flags": [], "fullname": "sqlalchemy.sql.selectable.SelectBase", "has_param_spec_type": false, "metaclass_type": null, "metadata": {}, "module_name": "sqlalchemy.sql.selectable", "mro": ["sqlalchemy.sql.selectable.SelectBase", "sqlalchemy.sql.roles.SelectStatementRole", "sqlalchemy.sql.roles.DMLSelectRole", "sqlalchemy.sql.roles.CompoundElementRole", "sqlalchemy.sql.roles.AllowsLambdaRole", "sqlalchemy.sql.roles.InElementRole", "sqlalchemy.sql.selectable.HasCTE", "sqlalchemy.sql.roles.HasCTERole", "sqlalchemy.sql.base.Executable", "sqlalchemy.sql.roles.StatementRole", "sqlalchemy.sql.annotation.SupportsCloneAnnotations", "sqlalchemy.sql.selectable.Selectable", "sqlalchemy.sql.selectable.ReturnsRows", "sqlalchemy.sql.roles.ReturnsRowsRole", "sqlalchemy.sql.elements.ClauseElement", "sqlalchemy.sql.roles.SQLRole", "sqlalchemy.sql.base.Generative", "sqlalchemy.sql.annotation.SupportsWrappingAnnotations", "sqlalchemy.sql.annotation.SupportsAnnotations", "sqlalchemy.sql.traversals.MemoizedHasCacheKey", "sqlalchemy.sql.traversals.HasCacheKey", "sqlalchemy.util.langhelpers.HasMemoized", "sqlalchemy.sql.traversals.HasCopyInternals", "sqlalchemy.sql.visitors.Traversible", "builtins.object"], "names": {".class": "SymbolTable", "alias": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0, 1, 1], "arg_names": ["self", "name", "flat"], "flags": [], "fullname": "sqlalchemy.sql.selectable.SelectBase.alias", "name": "alias", "type": {".class": "CallableType", "arg_kinds": [0, 1, 1], "arg_names": ["self", "name", "flat"], "arg_types": ["sqlalchemy.sql.selectable.SelectBase", {".class": "UnionType", "items": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, {".class": "NoneType"}]}, "builtins.bool"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "alias of SelectBase", "ret_type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 1}, "type_guard": null, "unpack_kwargs": false, "variables": []}}}, "as_scalar": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0], "arg_names": ["self"], "flags": [], "fullname": "sqlalchemy.sql.selectable.SelectBase.as_scalar", "name": "as_scalar", "type": null}}, "c": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0], "arg_names": ["self"], "flags": ["is_property", "is_decorated"], "fullname": "sqlalchemy.sql.selectable.SelectBase.c", "name": "c", "type": null}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready", "is_inferred"], "fullname": "sqlalchemy.sql.selectable.SelectBase.c", "name": "c", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["sqlalchemy.sql.selectable.SelectBase"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": true, "is_ellipsis_args": false, "name": "c of SelectBase", "ret_type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 1}, "type_guard": null, "unpack_kwargs": false, "variables": []}}}}, "columns": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0], "arg_names": ["self"], "flags": ["is_property", "is_decorated"], "fullname": "sqlalchemy.sql.selectable.SelectBase.columns", "name": "columns", "type": null}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready", "is_inferred"], "fullname": "sqlalchemy.sql.selectable.SelectBase.columns", "name": "columns", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["sqlalchemy.sql.selectable.SelectBase"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": true, "is_ellipsis_args": false, "name": "columns of SelectBase", "ret_type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 1}, "type_guard": null, "unpack_kwargs": false, "variables": []}}}}, "exists": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0], "arg_names": ["self"], "flags": [], "fullname": "sqlalchemy.sql.selectable.SelectBase.exists", "name": "exists", "type": null}}, "exported_columns": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0], "arg_names": ["self"], "flags": ["is_property", "is_decorated"], "fullname": "sqlalchemy.sql.selectable.SelectBase.exported_columns", "name": "exported_columns", "type": null}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready", "is_inferred"], "fullname": "sqlalchemy.sql.selectable.SelectBase.exported_columns", "name": "exported_columns", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["sqlalchemy.sql.selectable.SelectBase"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": true, "is_ellipsis_args": false, "name": "exported_columns of SelectBase", "ret_type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 1}, "type_guard": null, "unpack_kwargs": false, "variables": []}}}}, "is_select": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.selectable.SelectBase.is_select", "name": "is_select", "type": "builtins.bool"}}, "label": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0, 0], "arg_names": ["self", "name"], "flags": [], "fullname": "sqlalchemy.sql.selectable.SelectBase.label", "name": "label", "type": null}}, "lateral": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0, 1], "arg_names": ["self", "name"], "flags": [], "fullname": "sqlalchemy.sql.selectable.SelectBase.lateral", "name": "lateral", "type": {".class": "CallableType", "arg_kinds": [0, 1], "arg_names": ["self", "name"], "arg_types": ["sqlalchemy.sql.selectable.SelectBase", {".class": "UnionType", "items": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, {".class": "NoneType"}]}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "lateral of SelectBase", "ret_type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 1}, "type_guard": null, "unpack_kwargs": false, "variables": []}}}, "scalar_subquery": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0], "arg_names": ["self"], "flags": [], "fullname": "sqlalchemy.sql.selectable.SelectBase.scalar_subquery", "name": "scalar_subquery", "type": null}}, "select": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0, 2, 4], "arg_names": ["self", "arg", "kw"], "flags": [], "fullname": "sqlalchemy.sql.selectable.SelectBase.select", "name": "select", "type": null}}, "selected_columns": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0], "arg_names": ["self"], "flags": ["is_property", "is_decorated"], "fullname": "sqlalchemy.sql.selectable.SelectBase.selected_columns", "name": "selected_columns", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["sqlalchemy.sql.selectable.SelectBase"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "selected_columns of SelectBase", "ret_type": {".class": "NoneType"}, "type_guard": null, "unpack_kwargs": false, "variables": []}}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready", "is_inferred"], "fullname": "sqlalchemy.sql.selectable.SelectBase.selected_columns", "name": "selected_columns", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["sqlalchemy.sql.selectable.SelectBase"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "selected_columns of SelectBase", "ret_type": {".class": "NoneType"}, "type_guard": null, "unpack_kwargs": false, "variables": []}}}}, "subquery": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0, 1], "arg_names": ["self", "name"], "flags": [], "fullname": "sqlalchemy.sql.selectable.SelectBase.subquery", "name": "subquery", "type": {".class": "CallableType", "arg_kinds": [0, 1], "arg_names": ["self", "name"], "arg_types": ["sqlalchemy.sql.selectable.SelectBase", {".class": "UnionType", "items": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, {".class": "NoneType"}]}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "subquery of SelectBase", "ret_type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 1}, "type_guard": null, "unpack_kwargs": false, "variables": []}}}}, "self_type": null, "slots": null, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "SelectState": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": [], "abstract_attributes": [], "bases": ["sqlalchemy.util.langhelpers.MemoizedSlots", "sqlalchemy.sql.base.CompileState"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.sql.selectable.SelectState", "name": "SelectState", "type_vars": []}, "deletable_attributes": [], "flags": [], "fullname": "sqlalchemy.sql.selectable.SelectState", "has_param_spec_type": false, "metaclass_type": null, "metadata": {}, "module_name": "sqlalchemy.sql.selectable", "mro": ["sqlalchemy.sql.selectable.SelectState", "sqlalchemy.util.langhelpers.MemoizedSlots", "sqlalchemy.sql.base.CompileState", "builtins.object"], "names": {".class": "SymbolTable", "__init__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0, 0, 0, 4], "arg_names": ["self", "statement", "compiler", "kw"], "flags": [], "fullname": "sqlalchemy.sql.selectable.SelectState.__init__", "name": "__init__", "type": {".class": "CallableType", "arg_kinds": [0, 0, 0, 4], "arg_names": ["self", "statement", "compiler", "kw"], "arg_types": ["sqlalchemy.sql.selectable.SelectState", {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 1}, {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 1}, {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 1}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "__init__ of SelectState", "ret_type": {".class": "NoneType"}, "type_guard": null, "unpack_kwargs": false, "variables": []}}}, "all_selected_columns": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0, 0], "arg_names": ["cls", "statement"], "flags": ["is_class", "is_decorated"], "fullname": "sqlalchemy.sql.selectable.SelectState.all_selected_columns", "name": "all_selected_columns", "type": null}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_classmethod", "is_ready", "is_inferred"], "fullname": "sqlalchemy.sql.selectable.SelectState.all_selected_columns", "name": "all_selected_columns", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["cls", "statement"], "arg_types": [{".class": "TypeType", "item": "sqlalchemy.sql.selectable.SelectState"}, {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 1}], "bound_args": [], "def_extras": {"first_arg": "cls"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": true, "is_ellipsis_args": false, "name": "all_selected_columns of SelectState", "ret_type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 1}, "type_guard": null, "unpack_kwargs": false, "variables": []}}}}, "columns_plus_names": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.selectable.SelectState.columns_plus_names", "name": "columns_plus_names", "type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}}}, "default_select_compile_options": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "TypeInfo", "_promote": [], "abstract_attributes": [], "bases": ["sqlalchemy.sql.base.CacheableOptions"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.sql.selectable.SelectState.default_select_compile_options", "name": "default_select_compile_options", "type_vars": []}, "deletable_attributes": [], "flags": [], "fullname": "sqlalchemy.sql.selectable.SelectState.default_select_compile_options", "has_param_spec_type": false, "metaclass_type": null, "metadata": {}, "module_name": "sqlalchemy.sql.selectable", "mro": ["sqlalchemy.sql.selectable.SelectState.default_select_compile_options", "sqlalchemy.sql.base.CacheableOptions", "sqlalchemy.sql.base.Options", "sqlalchemy.sql.traversals.HasCacheKey", "builtins.object"], "names": {".class": "SymbolTable"}, "self_type": null, "slots": null, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "determine_last_joined_entity": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0, 0], "arg_names": ["cls", "stmt"], "flags": ["is_class", "is_decorated"], "fullname": "sqlalchemy.sql.selectable.SelectState.determine_last_joined_entity", "name": "determine_last_joined_entity", "type": null}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_classmethod", "is_ready", "is_inferred"], "fullname": "sqlalchemy.sql.selectable.SelectState.determine_last_joined_entity", "name": "determine_last_joined_entity", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["cls", "stmt"], "arg_types": [{".class": "TypeType", "item": "sqlalchemy.sql.selectable.SelectState"}, {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 1}], "bound_args": [], "def_extras": {"first_arg": "cls"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": true, "is_ellipsis_args": false, "name": "determine_last_joined_entity of SelectState", "ret_type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 1}, "type_guard": null, "unpack_kwargs": false, "variables": []}}}}, "from_clauses": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.selectable.SelectState.from_clauses", "name": "from_clauses", "type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}}}, "from_statement": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0, 0, 0], "arg_names": ["cls", "statement", "from_statement"], "flags": ["is_class", "is_decorated"], "fullname": "sqlalchemy.sql.selectable.SelectState.from_statement", "name": "from_statement", "type": {".class": "CallableType", "arg_kinds": [0, 0, 0], "arg_names": ["cls", "statement", "from_statement"], "arg_types": [{".class": "TypeType", "item": "sqlalchemy.sql.selectable.SelectState"}, {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 1}, {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 1}], "bound_args": [], "def_extras": {"first_arg": "cls"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "from_statement of SelectState", "ret_type": {".class": "NoneType"}, "type_guard": null, "unpack_kwargs": false, "variables": []}}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_classmethod", "is_ready", "is_inferred"], "fullname": "sqlalchemy.sql.selectable.SelectState.from_statement", "name": "from_statement", "type": {".class": "CallableType", "arg_kinds": [0, 0, 0], "arg_names": ["cls", "statement", "from_statement"], "arg_types": [{".class": "TypeType", "item": "sqlalchemy.sql.selectable.SelectState"}, {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 1}, {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 1}], "bound_args": [], "def_extras": {"first_arg": "cls"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "from_statement of SelectState", "ret_type": {".class": "NoneType"}, "type_guard": null, "unpack_kwargs": false, "variables": []}}}}, "froms": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.selectable.SelectState.froms", "name": "froms", "type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}}}, "get_column_descriptions": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0, 0], "arg_names": ["cls", "statement"], "flags": ["is_class", "is_decorated"], "fullname": "sqlalchemy.sql.selectable.SelectState.get_column_descriptions", "name": "get_column_descriptions", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["cls", "statement"], "arg_types": [{".class": "TypeType", "item": "sqlalchemy.sql.selectable.SelectState"}, {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 1}], "bound_args": [], "def_extras": {"first_arg": "cls"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "get_column_descriptions of SelectState", "ret_type": {".class": "NoneType"}, "type_guard": null, "unpack_kwargs": false, "variables": []}}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_classmethod", "is_ready", "is_inferred"], "fullname": "sqlalchemy.sql.selectable.SelectState.get_column_descriptions", "name": "get_column_descriptions", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["cls", "statement"], "arg_types": [{".class": "TypeType", "item": "sqlalchemy.sql.selectable.SelectState"}, {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 1}], "bound_args": [], "def_extras": {"first_arg": "cls"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "get_column_descriptions of SelectState", "ret_type": {".class": "NoneType"}, "type_guard": null, "unpack_kwargs": false, "variables": []}}}}, "get_columns_clause_froms": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0, 0], "arg_names": ["cls", "statement"], "flags": ["is_class", "is_decorated"], "fullname": "sqlalchemy.sql.selectable.SelectState.get_columns_clause_froms", "name": "get_columns_clause_froms", "type": null}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_classmethod", "is_ready", "is_inferred"], "fullname": "sqlalchemy.sql.selectable.SelectState.get_columns_clause_froms", "name": "get_columns_clause_froms", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["cls", "statement"], "arg_types": [{".class": "TypeType", "item": "sqlalchemy.sql.selectable.SelectState"}, {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 1}], "bound_args": [], "def_extras": {"first_arg": "cls"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": true, "is_ellipsis_args": false, "name": "get_columns_clause_froms of SelectState", "ret_type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 1}, "type_guard": null, "unpack_kwargs": false, "variables": []}}}}, "statement": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.selectable.SelectState.statement", "name": "statement", "type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}}}}, "self_type": null, "slots": null, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "SelectStatementGrouping": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": [], "abstract_attributes": [], "bases": ["sqlalchemy.sql.elements.GroupedElement", "sqlalchemy.sql.selectable.SelectBase"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.sql.selectable.SelectStatementGrouping", "name": "SelectStatementGrouping", "type_vars": []}, "deletable_attributes": [], "flags": [], "fullname": "sqlalchemy.sql.selectable.SelectStatementGrouping", "has_param_spec_type": false, "metaclass_type": null, "metadata": {}, "module_name": "sqlalchemy.sql.selectable", "mro": ["sqlalchemy.sql.selectable.SelectStatementGrouping", "sqlalchemy.sql.elements.GroupedElement", "sqlalchemy.sql.selectable.SelectBase", "sqlalchemy.sql.roles.SelectStatementRole", "sqlalchemy.sql.roles.DMLSelectRole", "sqlalchemy.sql.roles.CompoundElementRole", "sqlalchemy.sql.roles.AllowsLambdaRole", "sqlalchemy.sql.roles.InElementRole", "sqlalchemy.sql.selectable.HasCTE", "sqlalchemy.sql.roles.HasCTERole", "sqlalchemy.sql.base.Executable", "sqlalchemy.sql.roles.StatementRole", "sqlalchemy.sql.annotation.SupportsCloneAnnotations", "sqlalchemy.sql.selectable.Selectable", "sqlalchemy.sql.selectable.ReturnsRows", "sqlalchemy.sql.roles.ReturnsRowsRole", "sqlalchemy.sql.elements.ClauseElement", "sqlalchemy.sql.roles.SQLRole", "sqlalchemy.sql.base.Generative", "sqlalchemy.sql.annotation.SupportsWrappingAnnotations", "sqlalchemy.sql.annotation.SupportsAnnotations", "sqlalchemy.sql.traversals.MemoizedHasCacheKey", "sqlalchemy.sql.traversals.HasCacheKey", "sqlalchemy.util.langhelpers.HasMemoized", "sqlalchemy.sql.traversals.HasCopyInternals", "sqlalchemy.sql.visitors.Traversible", "builtins.object"], "names": {".class": "SymbolTable", "__init__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0, 0], "arg_names": ["self", "element"], "flags": [], "fullname": "sqlalchemy.sql.selectable.SelectStatementGrouping.__init__", "name": "__init__", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "element"], "arg_types": ["sqlalchemy.sql.selectable.SelectStatementGrouping", {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 1}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "__init__ of SelectStatementGrouping", "ret_type": {".class": "NoneType"}, "type_guard": null, "unpack_kwargs": false, "variables": []}}}, "__visit_name__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.selectable.SelectStatementGrouping.__visit_name__", "name": "__visit_name__", "type": "builtins.str"}}, "element": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.selectable.SelectStatementGrouping.element", "name": "element", "type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}}}, "get_label_style": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0], "arg_names": ["self"], "flags": [], "fullname": "sqlalchemy.sql.selectable.SelectStatementGrouping.get_label_style", "name": "get_label_style", "type": null}}, "select_statement": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0], "arg_names": ["self"], "flags": ["is_property", "is_decorated"], "fullname": "sqlalchemy.sql.selectable.SelectStatementGrouping.select_statement", "name": "select_statement", "type": null}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready", "is_inferred"], "fullname": "sqlalchemy.sql.selectable.SelectStatementGrouping.select_statement", "name": "select_statement", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["sqlalchemy.sql.selectable.SelectStatementGrouping"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": true, "is_ellipsis_args": false, "name": "select_statement of SelectStatementGrouping", "ret_type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 1}, "type_guard": null, "unpack_kwargs": false, "variables": []}}}}, "selected_columns": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0], "arg_names": ["self"], "flags": ["is_property", "is_decorated"], "fullname": "sqlalchemy.sql.selectable.SelectStatementGrouping.selected_columns", "name": "selected_columns", "type": null}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready", "is_inferred"], "fullname": "sqlalchemy.sql.selectable.SelectStatementGrouping.selected_columns", "name": "selected_columns", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["sqlalchemy.sql.selectable.SelectStatementGrouping"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": true, "is_ellipsis_args": false, "name": "selected_columns of SelectStatementGrouping", "ret_type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 1}, "type_guard": null, "unpack_kwargs": false, "variables": []}}}}, "self_group": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0, 1], "arg_names": ["self", "against"], "flags": [], "fullname": "sqlalchemy.sql.selectable.SelectStatementGrouping.self_group", "name": "self_group", "type": {".class": "CallableType", "arg_kinds": [0, 1], "arg_names": ["self", "against"], "arg_types": ["sqlalchemy.sql.selectable.SelectStatementGrouping", {".class": "UnionType", "items": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, {".class": "NoneType"}]}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "self_group of SelectStatementGrouping", "ret_type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 1}, "type_guard": null, "unpack_kwargs": false, "variables": []}}}, "set_label_style": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0, 0], "arg_names": ["self", "label_style"], "flags": [], "fullname": "sqlalchemy.sql.selectable.SelectStatementGrouping.set_label_style", "name": "set_label_style", "type": null}}}, "self_type": null, "slots": null, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "Selectable": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": [], "abstract_attributes": [], "bases": ["sqlalchemy.sql.selectable.ReturnsRows"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.sql.selectable.Selectable", "name": "Selectable", "type_vars": []}, "deletable_attributes": [], "flags": [], "fullname": "sqlalchemy.sql.selectable.Selectable", "has_param_spec_type": false, "metaclass_type": null, "metadata": {}, "module_name": "sqlalchemy.sql.selectable", "mro": ["sqlalchemy.sql.selectable.Selectable", "sqlalchemy.sql.selectable.ReturnsRows", "sqlalchemy.sql.roles.ReturnsRowsRole", "sqlalchemy.sql.elements.ClauseElement", "sqlalchemy.sql.roles.SQLRole", "sqlalchemy.sql.annotation.SupportsWrappingAnnotations", "sqlalchemy.sql.annotation.SupportsAnnotations", "sqlalchemy.sql.traversals.MemoizedHasCacheKey", "sqlalchemy.sql.traversals.HasCacheKey", "sqlalchemy.util.langhelpers.HasMemoized", "sqlalchemy.sql.traversals.HasCopyInternals", "sqlalchemy.sql.visitors.Traversible", "builtins.object"], "names": {".class": "SymbolTable", "__visit_name__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.selectable.Selectable.__visit_name__", "name": "__visit_name__", "type": "builtins.str"}}, "corresponding_column": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0, 0, 1], "arg_names": ["self", "column", "require_embedded"], "flags": [], "fullname": "sqlalchemy.sql.selectable.Selectable.corresponding_column", "name": "corresponding_column", "type": {".class": "CallableType", "arg_kinds": [0, 0, 1], "arg_names": ["self", "column", "require_embedded"], "arg_types": ["sqlalchemy.sql.selectable.Selectable", {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 1}, "builtins.bool"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "corresponding_column of Selectable", "ret_type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 1}, "type_guard": null, "unpack_kwargs": false, "variables": []}}}, "is_selectable": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.selectable.Selectable.is_selectable", "name": "is_selectable", "type": "builtins.bool"}}, "lateral": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0, 1], "arg_names": ["self", "name"], "flags": [], "fullname": "sqlalchemy.sql.selectable.Selectable.lateral", "name": "lateral", "type": {".class": "CallableType", "arg_kinds": [0, 1], "arg_names": ["self", "name"], "arg_types": ["sqlalchemy.sql.selectable.Selectable", {".class": "UnionType", "items": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, {".class": "NoneType"}]}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "lateral of Selectable", "ret_type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 1}, "type_guard": null, "unpack_kwargs": false, "variables": []}}}, "replace_selectable": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0, 0, 0], "arg_names": ["self", "old", "alias"], "flags": [], "fullname": "sqlalchemy.sql.selectable.Selectable.replace_selectable", "name": "replace_selectable", "type": null}}}, "self_type": null, "slots": null, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "Self": {".class": "SymbolTableNode", "cross_ref": "_typeshed.Self", "kind": "Gdef", "module_hidden": true, "module_public": false}, "Subquery": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": [], "abstract_attributes": [], "bases": ["sqlalchemy.sql.selectable.AliasedReturnsRows"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.sql.selectable.Subquery", "name": "Subquery", "type_vars": []}, "deletable_attributes": [], "flags": [], "fullname": "sqlalchemy.sql.selectable.Subquery", "has_param_spec_type": false, "metaclass_type": null, "metadata": {}, "module_name": "sqlalchemy.sql.selectable", "mro": ["sqlalchemy.sql.selectable.Subquery", "sqlalchemy.sql.selectable.AliasedReturnsRows", "sqlalchemy.sql.selectable.NoInit", "sqlalchemy.sql.selectable.FromClause", "sqlalchemy.sql.roles.AnonymizedFromClauseRole", "sqlalchemy.sql.roles.StrictFromClauseRole", "sqlalchemy.sql.roles.FromClauseRole", "sqlalchemy.sql.roles.ColumnsClauseRole", "sqlalchemy.sql.roles.JoinTargetRole", "sqlalchemy.sql.roles.AllowsLambdaRole", "sqlalchemy.sql.roles.UsesInspection", "sqlalchemy.sql.roles.ColumnListRole", "sqlalchemy.sql.roles.StructuralRole", "sqlalchemy.sql.selectable.Selectable", "sqlalchemy.sql.selectable.ReturnsRows", "sqlalchemy.sql.roles.ReturnsRowsRole", "sqlalchemy.sql.elements.ClauseElement", "sqlalchemy.sql.roles.SQLRole", "sqlalchemy.sql.annotation.SupportsWrappingAnnotations", "sqlalchemy.sql.annotation.SupportsAnnotations", "sqlalchemy.sql.traversals.MemoizedHasCacheKey", "sqlalchemy.sql.traversals.HasCacheKey", "sqlalchemy.util.langhelpers.HasMemoized", "sqlalchemy.sql.traversals.HasCopyInternals", "sqlalchemy.sql.visitors.Traversible", "builtins.object"], "names": {".class": "SymbolTable", "__visit_name__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.selectable.Subquery.__visit_name__", "name": "__visit_name__", "type": "builtins.str"}}, "as_scalar": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0], "arg_names": ["self"], "flags": [], "fullname": "sqlalchemy.sql.selectable.Subquery.as_scalar", "name": "as_scalar", "type": null}}, "inherit_cache": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.selectable.Subquery.inherit_cache", "name": "inherit_cache", "type": "builtins.bool"}}}, "self_type": null, "slots": null, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "SupportsCloneAnnotations": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.annotation.SupportsCloneAnnotations", "kind": "Gdef", "module_hidden": true, "module_public": false}, "TableClause": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": [], "abstract_attributes": [], "bases": ["sqlalchemy.sql.roles.DMLTableRole", "sqlalchemy.sql.base.Immutable", "sqlalchemy.sql.selectable.FromClause"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.sql.selectable.TableClause", "name": "TableClause", "type_vars": []}, "deletable_attributes": [], "flags": [], "fullname": "sqlalchemy.sql.selectable.TableClause", "has_param_spec_type": false, "metaclass_type": null, "metadata": {}, "module_name": "sqlalchemy.sql.selectable", "mro": ["sqlalchemy.sql.selectable.TableClause", "sqlalchemy.sql.roles.DMLTableRole", "sqlalchemy.sql.base.Immutable", "sqlalchemy.sql.selectable.FromClause", "sqlalchemy.sql.roles.AnonymizedFromClauseRole", "sqlalchemy.sql.roles.StrictFromClauseRole", "sqlalchemy.sql.roles.FromClauseRole", "sqlalchemy.sql.roles.ColumnsClauseRole", "sqlalchemy.sql.roles.JoinTargetRole", "sqlalchemy.sql.roles.AllowsLambdaRole", "sqlalchemy.sql.roles.UsesInspection", "sqlalchemy.sql.roles.ColumnListRole", "sqlalchemy.sql.roles.StructuralRole", "sqlalchemy.sql.selectable.Selectable", "sqlalchemy.sql.selectable.ReturnsRows", "sqlalchemy.sql.roles.ReturnsRowsRole", "sqlalchemy.sql.elements.ClauseElement", "sqlalchemy.sql.roles.SQLRole", "sqlalchemy.sql.annotation.SupportsWrappingAnnotations", "sqlalchemy.sql.annotation.SupportsAnnotations", "sqlalchemy.sql.traversals.MemoizedHasCacheKey", "sqlalchemy.sql.traversals.HasCacheKey", "sqlalchemy.util.langhelpers.HasMemoized", "sqlalchemy.sql.traversals.HasCopyInternals", "sqlalchemy.sql.visitors.Traversible", "builtins.object"], "names": {".class": "SymbolTable", "__init__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0, 0, 2, 4], "arg_names": ["self", "name", "columns", "kw"], "flags": [], "fullname": "sqlalchemy.sql.selectable.TableClause.__init__", "name": "__init__", "type": {".class": "CallableType", "arg_kinds": [0, 0, 2, 4], "arg_names": ["self", "name", "columns", "kw"], "arg_types": ["sqlalchemy.sql.selectable.TableClause", {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 1}, {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 1}, {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 1}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "__init__ of TableClause", "ret_type": {".class": "NoneType"}, "type_guard": null, "unpack_kwargs": false, "variables": []}}}, "__visit_name__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.selectable.TableClause.__visit_name__", "name": "__visit_name__", "type": "builtins.str"}}, "append_column": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0, 0, 4], "arg_names": ["self", "c", "kw"], "flags": [], "fullname": "sqlalchemy.sql.selectable.TableClause.append_column", "name": "append_column", "type": {".class": "CallableType", "arg_kinds": [0, 0, 4], "arg_names": ["self", "c", "kw"], "arg_types": ["sqlalchemy.sql.selectable.TableClause", {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 1}, {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 1}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "append_column of TableClause", "ret_type": {".class": "NoneType"}, "type_guard": null, "unpack_kwargs": false, "variables": []}}}, "delete": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0, 1, 4], "arg_names": ["self", "whereclause", "kwargs"], "flags": [], "fullname": "sqlalchemy.sql.selectable.TableClause.delete", "name": "delete", "type": {".class": "CallableType", "arg_kinds": [0, 1, 4], "arg_names": ["self", "whereclause", "kwargs"], "arg_types": ["sqlalchemy.sql.selectable.TableClause", {".class": "UnionType", "items": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, {".class": "NoneType"}]}, {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 1}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "delete of TableClause", "ret_type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 1}, "type_guard": null, "unpack_kwargs": false, "variables": []}}}, "description": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0], "arg_names": ["self"], "flags": ["is_decorated"], "fullname": "sqlalchemy.sql.selectable.TableClause.description", "name": "description", "type": null}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready", "is_inferred"], "fullname": "sqlalchemy.sql.selectable.TableClause.description", "name": "description", "type": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 1}, "type_of_any": 7}], "type_ref": "sqlalchemy.util.langhelpers.memoized_property"}}}}, "foreign_keys": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.selectable.TableClause.foreign_keys", "name": "foreign_keys", "type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}}}, "fullname": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.selectable.TableClause.fullname", "name": "fullname", "type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}}}, "implicit_returning": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.selectable.TableClause.implicit_returning", "name": "implicit_returning", "type": "builtins.bool"}}, "insert": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0, 1, 1, 4], "arg_names": ["self", "values", "inline", "kwargs"], "flags": [], "fullname": "sqlalchemy.sql.selectable.TableClause.insert", "name": "insert", "type": {".class": "CallableType", "arg_kinds": [0, 1, 1, 4], "arg_names": ["self", "values", "inline", "kwargs"], "arg_types": ["sqlalchemy.sql.selectable.TableClause", {".class": "UnionType", "items": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, {".class": "NoneType"}]}, "builtins.bool", {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 1}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "insert of TableClause", "ret_type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 1}, "type_guard": null, "unpack_kwargs": false, "variables": []}}}, "name": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.selectable.TableClause.name", "name": "name", "type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}}}, "named_with_column": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.selectable.TableClause.named_with_column", "name": "named_with_column", "type": "builtins.bool"}}, "primary_key": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.selectable.TableClause.primary_key", "name": "primary_key", "type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}}}, "schema": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.selectable.TableClause.schema", "name": "schema", "type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}}}, "update": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0, 1, 1, 1, 4], "arg_names": ["self", "whereclause", "values", "inline", "kwargs"], "flags": [], "fullname": "sqlalchemy.sql.selectable.TableClause.update", "name": "update", "type": {".class": "CallableType", "arg_kinds": [0, 1, 1, 1, 4], "arg_names": ["self", "whereclause", "values", "inline", "kwargs"], "arg_types": ["sqlalchemy.sql.selectable.TableClause", {".class": "UnionType", "items": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, {".class": "NoneType"}]}, {".class": "UnionType", "items": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, {".class": "NoneType"}]}, "builtins.bool", {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 1}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "update of TableClause", "ret_type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 1}, "type_guard": null, "unpack_kwargs": false, "variables": []}}}}, "self_type": null, "slots": null, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "TableSample": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": [], "abstract_attributes": [], "bases": ["sqlalchemy.sql.selectable.AliasedReturnsRows"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.sql.selectable.TableSample", "name": "TableSample", "type_vars": []}, "deletable_attributes": [], "flags": [], "fullname": "sqlalchemy.sql.selectable.TableSample", "has_param_spec_type": false, "metaclass_type": null, "metadata": {}, "module_name": "sqlalchemy.sql.selectable", "mro": ["sqlalchemy.sql.selectable.TableSample", "sqlalchemy.sql.selectable.AliasedReturnsRows", "sqlalchemy.sql.selectable.NoInit", "sqlalchemy.sql.selectable.FromClause", "sqlalchemy.sql.roles.AnonymizedFromClauseRole", "sqlalchemy.sql.roles.StrictFromClauseRole", "sqlalchemy.sql.roles.FromClauseRole", "sqlalchemy.sql.roles.ColumnsClauseRole", "sqlalchemy.sql.roles.JoinTargetRole", "sqlalchemy.sql.roles.AllowsLambdaRole", "sqlalchemy.sql.roles.UsesInspection", "sqlalchemy.sql.roles.ColumnListRole", "sqlalchemy.sql.roles.StructuralRole", "sqlalchemy.sql.selectable.Selectable", "sqlalchemy.sql.selectable.ReturnsRows", "sqlalchemy.sql.roles.ReturnsRowsRole", "sqlalchemy.sql.elements.ClauseElement", "sqlalchemy.sql.roles.SQLRole", "sqlalchemy.sql.annotation.SupportsWrappingAnnotations", "sqlalchemy.sql.annotation.SupportsAnnotations", "sqlalchemy.sql.traversals.MemoizedHasCacheKey", "sqlalchemy.sql.traversals.HasCacheKey", "sqlalchemy.util.langhelpers.HasMemoized", "sqlalchemy.sql.traversals.HasCopyInternals", "sqlalchemy.sql.visitors.Traversible", "builtins.object"], "names": {".class": "SymbolTable", "__visit_name__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.selectable.TableSample.__visit_name__", "name": "__visit_name__", "type": "builtins.str"}}}, "self_type": null, "slots": null, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "TableValuedAlias": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": [], "abstract_attributes": [], "bases": ["sqlalchemy.sql.selectable.Alias"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.sql.selectable.TableValuedAlias", "name": "TableValuedAlias", "type_vars": []}, "deletable_attributes": [], "flags": [], "fullname": "sqlalchemy.sql.selectable.TableValuedAlias", "has_param_spec_type": false, "metaclass_type": null, "metadata": {}, "module_name": "sqlalchemy.sql.selectable", "mro": ["sqlalchemy.sql.selectable.TableValuedAlias", "sqlalchemy.sql.selectable.Alias", "sqlalchemy.sql.roles.DMLTableRole", "sqlalchemy.sql.selectable.AliasedReturnsRows", "sqlalchemy.sql.selectable.NoInit", "sqlalchemy.sql.selectable.FromClause", "sqlalchemy.sql.roles.AnonymizedFromClauseRole", "sqlalchemy.sql.roles.StrictFromClauseRole", "sqlalchemy.sql.roles.FromClauseRole", "sqlalchemy.sql.roles.ColumnsClauseRole", "sqlalchemy.sql.roles.JoinTargetRole", "sqlalchemy.sql.roles.AllowsLambdaRole", "sqlalchemy.sql.roles.UsesInspection", "sqlalchemy.sql.roles.ColumnListRole", "sqlalchemy.sql.roles.StructuralRole", "sqlalchemy.sql.selectable.Selectable", "sqlalchemy.sql.selectable.ReturnsRows", "sqlalchemy.sql.roles.ReturnsRowsRole", "sqlalchemy.sql.elements.ClauseElement", "sqlalchemy.sql.roles.SQLRole", "sqlalchemy.sql.annotation.SupportsWrappingAnnotations", "sqlalchemy.sql.annotation.SupportsAnnotations", "sqlalchemy.sql.traversals.MemoizedHasCacheKey", "sqlalchemy.sql.traversals.HasCacheKey", "sqlalchemy.util.langhelpers.HasMemoized", "sqlalchemy.sql.traversals.HasCopyInternals", "sqlalchemy.sql.visitors.Traversible", "builtins.object"], "names": {".class": "SymbolTable", "__visit_name__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.selectable.TableValuedAlias.__visit_name__", "name": "__visit_name__", "type": "builtins.str"}}, "alias": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0, 1], "arg_names": ["self", "name"], "flags": [], "fullname": "sqlalchemy.sql.selectable.TableValuedAlias.alias", "name": "alias", "type": {".class": "CallableType", "arg_kinds": [0, 1], "arg_names": ["self", "name"], "arg_types": ["sqlalchemy.sql.selectable.TableValuedAlias", {".class": "UnionType", "items": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, {".class": "NoneType"}]}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "alias of TableValuedAlias", "ret_type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 1}, "type_guard": null, "unpack_kwargs": false, "variables": []}}}, "column": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0], "arg_names": ["self"], "flags": ["is_decorated"], "fullname": "sqlalchemy.sql.selectable.TableValuedAlias.column", "name": "column", "type": null}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready", "is_inferred"], "fullname": "sqlalchemy.sql.selectable.TableValuedAlias.column", "name": "column", "type": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 1}, "type_of_any": 7}], "type_ref": "sqlalchemy.util.langhelpers.HasMemoized.memoized_attribute"}}}}, "lateral": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0, 1], "arg_names": ["self", "name"], "flags": [], "fullname": "sqlalchemy.sql.selectable.TableValuedAlias.lateral", "name": "lateral", "type": {".class": "CallableType", "arg_kinds": [0, 1], "arg_names": ["self", "name"], "arg_types": ["sqlalchemy.sql.selectable.TableValuedAlias", {".class": "UnionType", "items": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, {".class": "NoneType"}]}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "lateral of TableValuedAlias", "ret_type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 1}, "type_guard": null, "unpack_kwargs": false, "variables": []}}}, "render_derived": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0, 1, 1], "arg_names": ["self", "name", "with_types"], "flags": [], "fullname": "sqlalchemy.sql.selectable.TableValuedAlias.render_derived", "name": "render_derived", "type": {".class": "CallableType", "arg_kinds": [0, 1, 1], "arg_names": ["self", "name", "with_types"], "arg_types": ["sqlalchemy.sql.selectable.TableValuedAlias", {".class": "UnionType", "items": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, {".class": "NoneType"}]}, "builtins.bool"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "render_derived of TableValuedAlias", "ret_type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 1}, "type_guard": null, "unpack_kwargs": false, "variables": []}}}}, "self_type": null, "slots": null, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "TableValuedColumn": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.elements.TableValuedColumn", "kind": "Gdef"}, "TextAsFrom": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeAlias", "alias_tvars": [], "column": 0, "fullname": "sqlalchemy.sql.selectable.TextAsFrom", "line": 416, "no_args": true, "normalized": false, "target": "sqlalchemy.sql.selectable.TextualSelect"}}, "TextualSelect": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": [], "abstract_attributes": [], "bases": ["sqlalchemy.sql.selectable.SelectBase"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.sql.selectable.TextualSelect", "name": "TextualSelect", "type_vars": []}, "deletable_attributes": [], "flags": [], "fullname": "sqlalchemy.sql.selectable.TextualSelect", "has_param_spec_type": false, "metaclass_type": null, "metadata": {}, "module_name": "sqlalchemy.sql.selectable", "mro": ["sqlalchemy.sql.selectable.TextualSelect", "sqlalchemy.sql.selectable.SelectBase", "sqlalchemy.sql.roles.SelectStatementRole", "sqlalchemy.sql.roles.DMLSelectRole", "sqlalchemy.sql.roles.CompoundElementRole", "sqlalchemy.sql.roles.AllowsLambdaRole", "sqlalchemy.sql.roles.InElementRole", "sqlalchemy.sql.selectable.HasCTE", "sqlalchemy.sql.roles.HasCTERole", "sqlalchemy.sql.base.Executable", "sqlalchemy.sql.roles.StatementRole", "sqlalchemy.sql.annotation.SupportsCloneAnnotations", "sqlalchemy.sql.selectable.Selectable", "sqlalchemy.sql.selectable.ReturnsRows", "sqlalchemy.sql.roles.ReturnsRowsRole", "sqlalchemy.sql.elements.ClauseElement", "sqlalchemy.sql.roles.SQLRole", "sqlalchemy.sql.base.Generative", "sqlalchemy.sql.annotation.SupportsWrappingAnnotations", "sqlalchemy.sql.annotation.SupportsAnnotations", "sqlalchemy.sql.traversals.MemoizedHasCacheKey", "sqlalchemy.sql.traversals.HasCacheKey", "sqlalchemy.util.langhelpers.HasMemoized", "sqlalchemy.sql.traversals.HasCopyInternals", "sqlalchemy.sql.visitors.Traversible", "builtins.object"], "names": {".class": "SymbolTable", "__init__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0, 0, 0, 1], "arg_names": ["self", "text", "columns", "positional"], "flags": [], "fullname": "sqlalchemy.sql.selectable.TextualSelect.__init__", "name": "__init__", "type": {".class": "CallableType", "arg_kinds": [0, 0, 0, 1], "arg_names": ["self", "text", "columns", "positional"], "arg_types": ["sqlalchemy.sql.selectable.TextualSelect", {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 1}, {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 1}, "builtins.bool"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "__init__ of TextualSelect", "ret_type": {".class": "NoneType"}, "type_guard": null, "unpack_kwargs": false, "variables": []}}}, "__visit_name__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.selectable.TextualSelect.__visit_name__", "name": "__visit_name__", "type": "builtins.str"}}, "bindparams": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0, 2, 4], "arg_names": ["self", "binds", "bind_as_values"], "flags": [], "fullname": "sqlalchemy.sql.selectable.TextualSelect.bindparams", "name": "bindparams", "type": {".class": "CallableType", "arg_kinds": [0, 2, 4], "arg_names": ["self", "binds", "bind_as_values"], "arg_types": [{".class": "TypeVarType", "fullname": "_typeshed.Self", "id": -1, "name": "Self", "namespace": "", "upper_bound": "builtins.object", "values": [], "variance": 0}, {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 1}, {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 1}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "bindparams of TextualSelect", "ret_type": {".class": "TypeVarType", "fullname": "_typeshed.Self", "id": -1, "name": "Self", "namespace": "", "upper_bound": "builtins.object", "values": [], "variance": 0}, "type_guard": null, "unpack_kwargs": false, "variables": [{".class": "TypeVarType", "fullname": "_typeshed.Self", "id": -1, "name": "Self", "namespace": "", "upper_bound": "builtins.object", "values": [], "variance": 0}]}}}, "column_args": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.selectable.TextualSelect.column_args", "name": "column_args", "type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}}}, "element": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.selectable.TextualSelect.element", "name": "element", "type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}}}, "is_select": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.selectable.TextualSelect.is_select", "name": "is_select", "type": "builtins.bool"}}, "is_text": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.selectable.TextualSelect.is_text", "name": "is_text", "type": "builtins.bool"}}, "positional": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.selectable.TextualSelect.positional", "name": "positional", "type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}}}, "selected_columns": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0], "arg_names": ["self"], "flags": ["is_decorated"], "fullname": "sqlalchemy.sql.selectable.TextualSelect.selected_columns", "name": "selected_columns", "type": null}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready", "is_inferred"], "fullname": "sqlalchemy.sql.selectable.TextualSelect.selected_columns", "name": "selected_columns", "type": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 1}, "type_of_any": 7}], "type_ref": "sqlalchemy.util.langhelpers.HasMemoized.memoized_attribute"}}}}}, "self_type": null, "slots": null, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "UnaryExpression": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.elements.UnaryExpression", "kind": "Gdef"}, "Values": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": [], "abstract_attributes": [], "bases": ["sqlalchemy.sql.base.Generative", "sqlalchemy.sql.selectable.FromClause"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.sql.selectable.Values", "name": "Values", "type_vars": []}, "deletable_attributes": [], "flags": [], "fullname": "sqlalchemy.sql.selectable.Values", "has_param_spec_type": false, "metaclass_type": null, "metadata": {}, "module_name": "sqlalchemy.sql.selectable", "mro": ["sqlalchemy.sql.selectable.Values", "sqlalchemy.sql.base.Generative", "sqlalchemy.sql.selectable.FromClause", "sqlalchemy.sql.roles.AnonymizedFromClauseRole", "sqlalchemy.sql.roles.StrictFromClauseRole", "sqlalchemy.sql.roles.FromClauseRole", "sqlalchemy.sql.roles.ColumnsClauseRole", "sqlalchemy.sql.roles.JoinTargetRole", "sqlalchemy.sql.roles.AllowsLambdaRole", "sqlalchemy.sql.roles.UsesInspection", "sqlalchemy.sql.roles.ColumnListRole", "sqlalchemy.sql.roles.StructuralRole", "sqlalchemy.sql.selectable.Selectable", "sqlalchemy.sql.selectable.ReturnsRows", "sqlalchemy.sql.roles.ReturnsRowsRole", "sqlalchemy.sql.elements.ClauseElement", "sqlalchemy.sql.roles.SQLRole", "sqlalchemy.sql.annotation.SupportsWrappingAnnotations", "sqlalchemy.sql.annotation.SupportsAnnotations", "sqlalchemy.sql.traversals.MemoizedHasCacheKey", "sqlalchemy.sql.traversals.HasCacheKey", "sqlalchemy.util.langhelpers.HasMemoized", "sqlalchemy.sql.traversals.HasCopyInternals", "sqlalchemy.sql.visitors.Traversible", "builtins.object"], "names": {".class": "SymbolTable", "__init__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0, 2, 4], "arg_names": ["self", "columns", "kw"], "flags": [], "fullname": "sqlalchemy.sql.selectable.Values.__init__", "name": "__init__", "type": {".class": "CallableType", "arg_kinds": [0, 2, 4], "arg_names": ["self", "columns", "kw"], "arg_types": ["sqlalchemy.sql.selectable.Values", {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 1}, {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 1}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "__init__ of Values", "ret_type": {".class": "NoneType"}, "type_guard": null, "unpack_kwargs": false, "variables": []}}}, "__visit_name__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.selectable.Values.__visit_name__", "name": "__visit_name__", "type": "builtins.str"}}, "alias": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0, 0, 4], "arg_names": ["self", "name", "kw"], "flags": [], "fullname": "sqlalchemy.sql.selectable.Values.alias", "name": "alias", "type": {".class": "CallableType", "arg_kinds": [0, 0, 4], "arg_names": ["self", "name", "kw"], "arg_types": [{".class": "TypeVarType", "fullname": "_typeshed.Self", "id": -1, "name": "Self", "namespace": "", "upper_bound": "builtins.object", "values": [], "variance": 0}, {".class": "UnionType", "items": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, {".class": "NoneType"}]}, {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 1}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "alias of Values", "ret_type": {".class": "TypeVarType", "fullname": "_typeshed.Self", "id": -1, "name": "Self", "namespace": "", "upper_bound": "builtins.object", "values": [], "variance": 0}, "type_guard": null, "unpack_kwargs": false, "variables": [{".class": "TypeVarType", "fullname": "_typeshed.Self", "id": -1, "name": "Self", "namespace": "", "upper_bound": "builtins.object", "values": [], "variance": 0}]}}}, "data": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0, 0], "arg_names": ["self", "values"], "flags": [], "fullname": "sqlalchemy.sql.selectable.Values.data", "name": "data", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "values"], "arg_types": [{".class": "TypeVarType", "fullname": "_typeshed.Self", "id": -1, "name": "Self", "namespace": "", "upper_bound": "builtins.object", "values": [], "variance": 0}, {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 1}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "data of Values", "ret_type": {".class": "TypeVarType", "fullname": "_typeshed.Self", "id": -1, "name": "Self", "namespace": "", "upper_bound": "builtins.object", "values": [], "variance": 0}, "type_guard": null, "unpack_kwargs": false, "variables": [{".class": "TypeVarType", "fullname": "_typeshed.Self", "id": -1, "name": "Self", "namespace": "", "upper_bound": "builtins.object", "values": [], "variance": 0}]}}}, "lateral": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0, 1], "arg_names": ["self", "name"], "flags": [], "fullname": "sqlalchemy.sql.selectable.Values.lateral", "name": "lateral", "type": {".class": "CallableType", "arg_kinds": [0, 1], "arg_names": ["self", "name"], "arg_types": [{".class": "TypeVarType", "fullname": "_typeshed.Self", "id": -1, "name": "Self", "namespace": "", "upper_bound": "builtins.object", "values": [], "variance": 0}, {".class": "UnionType", "items": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, {".class": "NoneType"}]}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "lateral of Values", "ret_type": {".class": "TypeVarType", "fullname": "_typeshed.Self", "id": -1, "name": "Self", "namespace": "", "upper_bound": "builtins.object", "values": [], "variance": 0}, "type_guard": null, "unpack_kwargs": false, "variables": [{".class": "TypeVarType", "fullname": "_typeshed.Self", "id": -1, "name": "Self", "namespace": "", "upper_bound": "builtins.object", "values": [], "variance": 0}]}}}, "literal_binds": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.selectable.Values.literal_binds", "name": "literal_binds", "type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}}}, "name": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.selectable.Values.name", "name": "name", "type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}}}, "named_with_column": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.selectable.Values.named_with_column", "name": "named_with_column", "type": "builtins.bool"}}}, "self_type": null, "slots": null, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "_MemoizedSelectEntities": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": [], "abstract_attributes": [], "bases": ["sqlalchemy.sql.traversals.HasCacheKey", "sqlalchemy.sql.traversals.HasCopyInternals", "sqlalchemy.sql.visitors.Traversible"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.sql.selectable._MemoizedSelectEntities", "name": "_MemoizedSelectEntities", "type_vars": []}, "deletable_attributes": [], "flags": [], "fullname": "sqlalchemy.sql.selectable._MemoizedSelectEntities", "has_param_spec_type": false, "metaclass_type": null, "metadata": {}, "module_name": "sqlalchemy.sql.selectable", "mro": ["sqlalchemy.sql.selectable._MemoizedSelectEntities", "sqlalchemy.sql.traversals.HasCacheKey", "sqlalchemy.sql.traversals.HasCopyInternals", "sqlalchemy.sql.visitors.Traversible", "builtins.object"], "names": {".class": "SymbolTable", "__visit_name__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.selectable._MemoizedSelectEntities.__visit_name__", "name": "__visit_name__", "type": "builtins.str"}}}, "self_type": null, "slots": null, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "_OffsetLimitParam": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": [], "abstract_attributes": [], "bases": [{".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.elements.BindParameter"}], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.sql.selectable._OffsetLimitParam", "name": "_OffsetLimitParam", "type_vars": []}, "deletable_attributes": [], "flags": [], "fullname": "sqlalchemy.sql.selectable._OffsetLimitParam", "has_param_spec_type": false, "metaclass_type": null, "metadata": {}, "module_name": "sqlalchemy.sql.selectable", "mro": ["sqlalchemy.sql.selectable._OffsetLimitParam", "sqlalchemy.sql.elements.BindParameter", "sqlalchemy.sql.roles.InElementRole", "sqlalchemy.sql.elements.ColumnElement", "sqlalchemy.sql.roles.ColumnArgumentOrKeyRole", "sqlalchemy.sql.roles.ColumnArgumentRole", "sqlalchemy.sql.roles.StatementOptionRole", "sqlalchemy.sql.roles.WhereHavingRole", "sqlalchemy.sql.roles.OnClauseRole", "sqlalchemy.sql.roles.BinaryElementRole", "sqlalchemy.sql.roles.ExpressionElementRole", "sqlalchemy.sql.roles.OrderByRole", "sqlalchemy.sql.roles.ColumnsClauseRole", "sqlalchemy.sql.roles.AllowsLambdaRole", "sqlalchemy.sql.roles.ByOfRole", "sqlalchemy.sql.roles.UsesInspection", "sqlalchemy.sql.roles.ColumnListRole", "sqlalchemy.sql.roles.LimitOffsetRole", "sqlalchemy.sql.roles.DMLColumnRole", "sqlalchemy.sql.roles.DDLConstraintColumnRole", "sqlalchemy.sql.roles.DDLExpressionRole", "sqlalchemy.sql.roles.StructuralRole", "sqlalchemy.sql.operators.ColumnOperators", "sqlalchemy.sql.operators.Operators", "sqlalchemy.sql.elements.ClauseElement", "sqlalchemy.sql.roles.SQLRole", "sqlalchemy.sql.annotation.SupportsWrappingAnnotations", "sqlalchemy.sql.annotation.SupportsAnnotations", "sqlalchemy.sql.traversals.MemoizedHasCacheKey", "sqlalchemy.sql.traversals.HasCacheKey", "sqlalchemy.util.langhelpers.HasMemoized", "sqlalchemy.sql.traversals.HasCopyInternals", "sqlalchemy.sql.visitors.Traversible", "builtins.object"], "names": {".class": "SymbolTable", "inherit_cache": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.selectable._OffsetLimitParam.inherit_cache", "name": "inherit_cache", "type": "builtins.bool"}}}, "self_type": null, "slots": null, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "_SelectFromElements": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": [], "abstract_attributes": [], "bases": ["builtins.object"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.sql.selectable._SelectFromElements", "name": "_SelectFromElements", "type_vars": []}, "deletable_attributes": [], "flags": [], "fullname": "sqlalchemy.sql.selectable._SelectFromElements", "has_param_spec_type": false, "metaclass_type": null, "metadata": {}, "module_name": "sqlalchemy.sql.selectable", "mro": ["sqlalchemy.sql.selectable._SelectFromElements", "builtins.object"], "names": {".class": "SymbolTable"}, "self_type": null, "slots": null, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "__annotations__": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "flags": ["is_ready"], "fullname": "sqlalchemy.sql.selectable.__annotations__", "name": "__annotations__", "type": {".class": "Instance", "args": ["builtins.str", {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}], "type_ref": "builtins.dict"}}}, "__doc__": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "flags": ["is_ready"], "fullname": "sqlalchemy.sql.selectable.__doc__", "name": "__doc__", "type": "builtins.str"}}, "__file__": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "flags": ["is_ready"], "fullname": "sqlalchemy.sql.selectable.__file__", "name": "__file__", "type": "builtins.str"}}, "__name__": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "flags": ["is_ready"], "fullname": "sqlalchemy.sql.selectable.__name__", "name": "__name__", "type": "builtins.str"}}, "__package__": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "flags": ["is_ready"], "fullname": "sqlalchemy.sql.selectable.__package__", "name": "__package__", "type": "builtins.str"}}, "literal_column": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.elements.literal_column", "kind": "Gdef"}, "memoized_property": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.util.langhelpers.memoized_property", "kind": "Gdef", "module_hidden": true, "module_public": false}, "roles": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.roles", "kind": "Gdef", "module_hidden": true, "module_public": false}, "subquery": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0, 2, 4], "arg_names": ["alias", "args", "kwargs"], "flags": [], "fullname": "sqlalchemy.sql.selectable.subquery", "name": "subquery", "type": null}}, "traversals": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.traversals", "kind": "Gdef", "module_hidden": true, "module_public": false}, "util": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.util", "kind": "Gdef", "module_hidden": true, "module_public": false}, "visitors": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.visitors", "kind": "Gdef", "module_hidden": true, "module_public": false}}, "path": "/usr/lib/python3/dist-packages/sqlalchemy-stubs/sql/selectable.pyi"}